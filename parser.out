Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    QUOTE
    RETURN

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID initProg SCOLON declarClases declarVar definFunc MAIN auxMain LPAREN RPAREN declarVar LBRACE listaEstatutos RBRACE prueba
Rule 2     prueba -> <empty>
Rule 3     initProg -> <empty>
Rule 4     auxMain -> <empty>
Rule 5     declarClases -> CLASS ID herencia LBRACE ATTRIBUTES declarAttributes METHODS declarMethods RBRACE declarClases
Rule 6     declarClases -> empty
Rule 7     herencia -> LT EXTENDS ID GT
Rule 8     herencia -> empty
Rule 9     declarAttributes -> tipo COLON listaIdDeclare SCOLON declarAttributes
Rule 10    declarAttributes -> empty
Rule 11    listaIdDeclare -> idDeclare
Rule 12    listaIdDeclare -> idDeclare COMMA listaIdDeclare
Rule 13    idDeclare -> ID
Rule 14    idDeclare -> ID LBRACK CTE_I RBRACK
Rule 15    idDeclare -> ID LBRACK CTE_I RBRACK LBRACK CTE_I RBRACK
Rule 16    idCall -> ID
Rule 17    idCall -> ID DOT ID
Rule 18    idCall -> ID LBRACK exp RBRACK
Rule 19    idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK
Rule 20    tipo -> ID
Rule 21    tipo -> INT
Rule 22    tipo -> FLOAT
Rule 23    tipo -> CHAR
Rule 24    declarMethods -> tipoMethod FUNC ID LPAREN listaParam RPAREN LBRACE listaEstatutos RBRACE declarMethods
Rule 25    declarMethods -> empty
Rule 26    tipoMethod -> VOID
Rule 27    tipoMethod -> INT
Rule 28    tipoMethod -> FLOAT
Rule 29    tipoMethod -> CHAR
Rule 30    listaParam -> param
Rule 31    listaParam -> param COMMA listaParam
Rule 32    listaParam -> empty
Rule 33    param -> tipo COLON ID
Rule 34    declarVar -> VAR tipo COLON listaIdDeclare SCOLON declarVar
Rule 35    declarVar -> empty
Rule 36    definFunc -> tipoMethod FUNC ID auxFuncion LPAREN listaParam RPAREN declarVar LBRACE listaEstatutos RBRACE definFunc
Rule 37    definFunc -> empty
Rule 38    auxFuncion -> <empty>
Rule 39    listaEstatutos -> estatutos listaEstatutos
Rule 40    listaEstatutos -> empty
Rule 41    estatutos -> llamada SCOLON
Rule 42    estatutos -> asignacion SCOLON
Rule 43    estatutos -> returnf SCOLON
Rule 44    estatutos -> lectura SCOLON
Rule 45    estatutos -> escritura SCOLON
Rule 46    estatutos -> condicion
Rule 47    estatutos -> cond_w
Rule 48    estatutos -> cond_f
Rule 49    asignacion -> idCall ASIGNA pushPoper exp asignStep2
Rule 50    asignStep2 -> <empty>
Rule 51    llamada -> ID DOT ID LPAREN enviaParam RPAREN
Rule 52    llamada -> ID LPAREN enviaParam RPAREN
Rule 53    enviaParam -> paramReferencia
Rule 54    enviaParam -> empty
Rule 55    paramReferencia -> exp
Rule 56    paramReferencia -> exp COMMA paramReferencia
Rule 57    returnf -> RETUfRN pushPoper LPAREN exp RPAREN popReturn
Rule 58    popReturn -> <empty>
Rule 59    lectura -> READ pushPoper LPAREN listaId RPAREN
Rule 60    listaId -> idCall popIO
Rule 61    listaId -> idCall COMMA popIO insertOpRead listaId
Rule 62    insertOpRead -> <empty>
Rule 63    popIO -> <empty>
Rule 64    escritura -> WRITE pushPoper LPAREN exp popIO lextra RPAREN
Rule 65    escritura -> WRITE pushPoper LPAREN LETRERO letreroPush popIO lextra RPAREN
Rule 66    lextra -> COMMA insertOpWrite exp popIO lextra
Rule 67    lextra -> COMMA insertOpWrite LETRERO letreroPush popIO lextra
Rule 68    lextra -> empty
Rule 69    insertOpWrite -> <empty>
Rule 70    letreroPush -> <empty>
Rule 71    condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE
Rule 72    condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE
Rule 73    cond_w -> WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE
Rule 74    cond_f -> FOR asignacion TO exp DO LBRACE listaEstatutos RBRACE
Rule 75    exp -> texp step7
Rule 76    exp -> texp step7 OR pushPoper exp
Rule 77    texp -> gexp step6
Rule 78    texp -> gexp step6 AND pushPoper texp
Rule 79    gexp -> mexp step5
Rule 80    gexp -> mexp step5 LT pushPoper mexp
Rule 81    gexp -> mexp step5 GT pushPoper mexp
Rule 82    gexp -> mexp step5 LTE pushPoper mexp
Rule 83    gexp -> mexp step5 GTE pushPoper mexp
Rule 84    gexp -> mexp step5 EQUALS pushPoper mexp
Rule 85    gexp -> mexp step5 NEQUALS pushPoper mexp
Rule 86    mexp -> t step4
Rule 87    mexp -> t step4 PLUS pushPoper mexp
Rule 88    mexp -> t step4 MINUS pushPoper mexp
Rule 89    t -> f step3
Rule 90    t -> f step3 MULT pushPoper t
Rule 91    t -> f step3 DIV pushPoper t
Rule 92    f -> LPAREN addFF exp RPAREN rmFF
Rule 93    f -> CTE_I step1
Rule 94    f -> CTE_F step1
Rule 95    f -> CTE_C step1
Rule 96    f -> llamada
Rule 97    f -> idCall
Rule 98    step1 -> <empty>
Rule 99    step3 -> <empty>
Rule 100   step4 -> <empty>
Rule 101   step5 -> <empty>
Rule 102   step6 -> <empty>
Rule 103   step7 -> <empty>
Rule 104   addFF -> <empty>
Rule 105   rmFF -> <empty>
Rule 106   pushPoper -> <empty>
Rule 107   empty -> <empty>

Terminals, with rules where they appear

AND                  : 78
ASIGNA               : 49
ATTRIBUTES           : 5
CHAR                 : 23 29
CLASS                : 5
COLON                : 9 33 34
COMMA                : 12 31 56 61 66 67
CTE_C                : 95
CTE_F                : 94
CTE_I                : 14 15 15 93
DIV                  : 91
DO                   : 73 74
DOT                  : 17 51
ELSE                 : 72
EQUALS               : 84
EXTENDS              : 7
FLOAT                : 22 28
FOR                  : 74
FUNC                 : 24 36
GT                   : 7 81
GTE                  : 83
ID                   : 1 5 7 13 14 15 16 17 17 18 19 20 24 33 36 51 51 52
IF                   : 71 72
INT                  : 21 27
LBRACE               : 1 5 24 36 71 72 72 73 74
LBRACK               : 14 15 15 18 19 19
LETRERO              : 65 67
LPAREN               : 1 24 36 51 52 57 59 64 65 71 72 73 92
LT                   : 7 80
LTE                  : 82
MAIN                 : 1
METHODS              : 5
MINUS                : 88
MULT                 : 90
NEQUALS              : 85
OR                   : 76
PLUS                 : 87
PROGRAM              : 1
QUOTE                : 
RBRACE               : 1 5 24 36 71 72 72 73 74
RBRACK               : 14 15 15 18 19 19
READ                 : 59
RETURN               : 
RPAREN               : 1 24 36 51 52 57 59 64 65 71 72 73 92
SCOLON               : 1 9 34 41 42 43 44 45
THEN                 : 71 72
TO                   : 74
VAR                  : 34
VOID                 : 26
WHILE                : 73
WRITE                : 64 65
error                : 

Nonterminals, with rules where they appear

RETUfRN              : 57
addFF                : 92
asignStep2           : 49
asignacion           : 42 74
auxFuncion           : 36
auxMain              : 1
cond_f               : 48
cond_w               : 47
condicion            : 46
declarAttributes     : 5 9
declarClases         : 1 5
declarMethods        : 5 24
declarVar            : 1 1 34 36
definFunc            : 1 36
empty                : 6 8 10 25 32 35 37 40 54 68
enviaParam           : 51 52
escritura            : 45
estatutos            : 39
exp                  : 18 19 19 49 55 56 57 64 66 71 72 73 74 76 92
f                    : 89 90 91
gexp                 : 77 78
herencia             : 5
idCall               : 49 60 61 97
idDeclare            : 11 12
initProg             : 1
insertOpRead         : 61
insertOpWrite        : 66 67
lectura              : 44
letreroPush          : 65 67
lextra               : 64 65 66 67
listaEstatutos       : 1 24 36 39 71 72 72 73 74
listaId              : 59 61
listaIdDeclare       : 9 12 34
listaParam           : 24 31 36
llamada              : 41 96
mexp                 : 79 80 80 81 81 82 82 83 83 84 84 85 85 87 88
param                : 30 31
paramReferencia      : 53 56
popIO                : 60 61 64 65 66 67
popReturn            : 57
program              : 0
prueba               : 1
pushPoper            : 49 57 59 64 65 76 78 80 81 82 83 84 85 87 88 90 91
returnf              : 43
rmFF                 : 92
step1                : 93 94 95
step3                : 89 90 91
step4                : 86 87 88
step5                : 79 80 81 82 83 84 85
step6                : 77 78
step7                : 75 76
t                    : 86 87 88 90 91
texp                 : 75 76 78
tipo                 : 9 33 34
tipoMethod           : 24 36

