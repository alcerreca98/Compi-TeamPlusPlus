Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    QUOTE

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID initProg SCOLON declarClases declarVar definFunc MAIN auxMain LPAREN RPAREN declarVar LBRACE listaEstatutos RBRACE prueba
Rule 2     prueba -> <empty>
Rule 3     initProg -> <empty>
Rule 4     auxMain -> <empty>
Rule 5     declarClases -> CLASS ID herencia LBRACE ATTRIBUTES declarAttributes METHODS declarMethods RBRACE declarClases
Rule 6     declarClases -> empty
Rule 7     herencia -> LT EXTENDS ID GT
Rule 8     herencia -> empty
Rule 9     declarAttributes -> tipo COLON listaIdDeclare SCOLON declarAttributes
Rule 10    declarAttributes -> empty
Rule 11    listaIdDeclare -> idDeclare
Rule 12    listaIdDeclare -> idDeclare COMMA listaIdDeclare
Rule 13    idDeclare -> ID
Rule 14    idDeclare -> ID LBRACK CTE_I RBRACK
Rule 15    idDeclare -> ID LBRACK CTE_I RBRACK LBRACK CTE_I RBRACK
Rule 16    idCall -> ID
Rule 17    idCall -> ID DOT ID
Rule 18    idCall -> ID LBRACK exp RBRACK
Rule 19    idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK
Rule 20    tipo -> ID
Rule 21    tipo -> INT
Rule 22    tipo -> FLOAT
Rule 23    tipo -> CHAR
Rule 24    declarMethods -> tipoMethod FUNC ID LPAREN listaParam RPAREN LBRACE listaEstatutos RBRACE declarMethods
Rule 25    declarMethods -> empty
Rule 26    tipoMethod -> VOID
Rule 27    tipoMethod -> INT
Rule 28    tipoMethod -> FLOAT
Rule 29    tipoMethod -> CHAR
Rule 30    listaParam -> param
Rule 31    listaParam -> param COMMA listaParam
Rule 32    listaParam -> empty
Rule 33    param -> tipo COLON ID
Rule 34    declarVar -> VAR tipo COLON listaIdDeclare SCOLON declarVar
Rule 35    declarVar -> empty
Rule 36    definFunc -> tipoMethod FUNC ID auxFuncion LPAREN listaParam RPAREN declarVar LBRACE listaEstatutos RBRACE definFunc
Rule 37    definFunc -> empty
Rule 38    auxFuncion -> <empty>
Rule 39    listaEstatutos -> estatutos listaEstatutos
Rule 40    listaEstatutos -> empty
Rule 41    estatutos -> llamada SCOLON
Rule 42    estatutos -> asignacion SCOLON
Rule 43    estatutos -> returnf SCOLON
Rule 44    estatutos -> lectura SCOLON
Rule 45    estatutos -> escritura SCOLON
Rule 46    estatutos -> condicion
Rule 47    estatutos -> cond_w
Rule 48    estatutos -> cond_f
Rule 49    asignacion -> idCall ASIGNA exp
Rule 50    llamada -> ID DOT ID LPAREN enviaParam RPAREN
Rule 51    llamada -> ID LPAREN enviaParam RPAREN
Rule 52    enviaParam -> paramReferencia
Rule 53    enviaParam -> empty
Rule 54    paramReferencia -> exp
Rule 55    paramReferencia -> exp COMMA paramReferencia
Rule 56    returnf -> RETURN LPAREN exp RPAREN
Rule 57    lectura -> READ LPAREN listaId RPAREN
Rule 58    listaId -> idCall
Rule 59    listaId -> idCall COMMA listaId
Rule 60    escritura -> WRITE LPAREN exp lextra RPAREN
Rule 61    escritura -> WRITE LPAREN LETRERO lextra RPAREN
Rule 62    lextra -> COMMA exp lextra
Rule 63    lextra -> COMMA LETRERO lextra
Rule 64    lextra -> empty
Rule 65    condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE
Rule 66    condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE
Rule 67    cond_w -> WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE
Rule 68    cond_f -> FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE
Rule 69    exp -> texp
Rule 70    exp -> texp OR exp
Rule 71    texp -> gexp
Rule 72    texp -> gexp AND texp
Rule 73    gexp -> mexp
Rule 74    gexp -> mexp LT mexp
Rule 75    gexp -> mexp GT mexp
Rule 76    gexp -> mexp LTE mexp
Rule 77    gexp -> mexp GTE mexp
Rule 78    gexp -> mexp EQUALS mexp
Rule 79    gexp -> mexp NEQUALS mexp
Rule 80    mexp -> t
Rule 81    mexp -> t PLUS mexp
Rule 82    mexp -> t MINUS mexp
Rule 83    t -> f
Rule 84    t -> f MULT t
Rule 85    t -> f DIV t
Rule 86    f -> LPAREN addFF exp RPAREN rmFF
Rule 87    f -> CTE_I
Rule 88    f -> CTE_F
Rule 89    f -> CTE_C
Rule 90    f -> llamada
Rule 91    f -> idCall
Rule 92    addFF -> <empty>
Rule 93    rmFF -> <empty>
Rule 94    empty -> <empty>

Terminals, with rules where they appear

AND                  : 72
ASIGNA               : 49 68
ATTRIBUTES           : 5
CHAR                 : 23 29
CLASS                : 5
COLON                : 9 33 34
COMMA                : 12 31 55 59 62 63
CTE_C                : 89
CTE_F                : 88
CTE_I                : 14 15 15 87
DIV                  : 85
DO                   : 67 68
DOT                  : 17 50
ELSE                 : 66
EQUALS               : 78
EXTENDS              : 7
FLOAT                : 22 28
FOR                  : 68
FUNC                 : 24 36
GT                   : 7 75
GTE                  : 77
ID                   : 1 5 7 13 14 15 16 17 17 18 19 20 24 33 36 50 50 51
IF                   : 65 66
INT                  : 21 27
LBRACE               : 1 5 24 36 65 66 66 67 68
LBRACK               : 14 15 15 18 19 19
LETRERO              : 61 63
LPAREN               : 1 24 36 50 51 56 57 60 61 65 66 67 86
LT                   : 7 74
LTE                  : 76
MAIN                 : 1
METHODS              : 5
MINUS                : 82
MULT                 : 84
NEQUALS              : 79
OR                   : 70
PLUS                 : 81
PROGRAM              : 1
QUOTE                : 
RBRACE               : 1 5 24 36 65 66 66 67 68
RBRACK               : 14 15 15 18 19 19
READ                 : 57
RETURN               : 56
RPAREN               : 1 24 36 50 51 56 57 60 61 65 66 67 86
SCOLON               : 1 9 34 41 42 43 44 45
THEN                 : 65 66
TO                   : 68
VAR                  : 34
VOID                 : 26
WHILE                : 67
WRITE                : 60 61
error                : 

Nonterminals, with rules where they appear

addFF                : 86
asignacion           : 42
auxFuncion           : 36
auxMain              : 1
cond_f               : 48
cond_w               : 47
condicion            : 46
declarAttributes     : 5 9
declarClases         : 1 5
declarMethods        : 5 24
declarVar            : 1 1 34 36
definFunc            : 1 36
empty                : 6 8 10 25 32 35 37 40 53 64
enviaParam           : 50 51
escritura            : 45
estatutos            : 39
exp                  : 18 19 19 49 54 55 56 60 62 65 66 67 68 68 70 86
f                    : 83 84 85
gexp                 : 71 72
herencia             : 5
idCall               : 49 58 59 68 91
idDeclare            : 11 12
initProg             : 1
lectura              : 44
lextra               : 60 61 62 63
listaEstatutos       : 1 24 36 39 65 66 66 67 68
listaId              : 57 59
listaIdDeclare       : 9 12 34
listaParam           : 24 31 36
llamada              : 41 90
mexp                 : 73 74 74 75 75 76 76 77 77 78 78 79 79 81 82
param                : 30 31
paramReferencia      : 52 55
program              : 0
prueba               : 1
returnf              : 43
rmFF                 : 86
t                    : 80 81 82 84 85
texp                 : 69 70 72
tipo                 : 9 33 34
tipoMethod           : 24 36

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID initProg SCOLON declarClases declarVar definFunc MAIN auxMain LPAREN RPAREN declarVar LBRACE listaEstatutos RBRACE prueba

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID initProg SCOLON declarClases declarVar definFunc MAIN auxMain LPAREN RPAREN declarVar LBRACE listaEstatutos RBRACE prueba

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . initProg SCOLON declarClases declarVar definFunc MAIN auxMain LPAREN RPAREN declarVar LBRACE listaEstatutos RBRACE prueba
    (3) initProg -> .

    SCOLON          reduce using rule 3 (initProg -> .)

    initProg                       shift and go to state 4

state 4

    (1) program -> PROGRAM ID initProg . SCOLON declarClases declarVar definFunc MAIN auxMain LPAREN RPAREN declarVar LBRACE listaEstatutos RBRACE prueba

    SCOLON          shift and go to state 5


state 5

    (1) program -> PROGRAM ID initProg SCOLON . declarClases declarVar definFunc MAIN auxMain LPAREN RPAREN declarVar LBRACE listaEstatutos RBRACE prueba
    (5) declarClases -> . CLASS ID herencia LBRACE ATTRIBUTES declarAttributes METHODS declarMethods RBRACE declarClases
    (6) declarClases -> . empty
    (94) empty -> .

    CLASS           shift and go to state 7
    VAR             reduce using rule 94 (empty -> .)
    VOID            reduce using rule 94 (empty -> .)
    INT             reduce using rule 94 (empty -> .)
    FLOAT           reduce using rule 94 (empty -> .)
    CHAR            reduce using rule 94 (empty -> .)
    MAIN            reduce using rule 94 (empty -> .)

    declarClases                   shift and go to state 6
    empty                          shift and go to state 8

state 6

    (1) program -> PROGRAM ID initProg SCOLON declarClases . declarVar definFunc MAIN auxMain LPAREN RPAREN declarVar LBRACE listaEstatutos RBRACE prueba
    (34) declarVar -> . VAR tipo COLON listaIdDeclare SCOLON declarVar
    (35) declarVar -> . empty
    (94) empty -> .

    VAR             shift and go to state 10
    VOID            reduce using rule 94 (empty -> .)
    INT             reduce using rule 94 (empty -> .)
    FLOAT           reduce using rule 94 (empty -> .)
    CHAR            reduce using rule 94 (empty -> .)
    MAIN            reduce using rule 94 (empty -> .)

    declarVar                      shift and go to state 9
    empty                          shift and go to state 11

state 7

    (5) declarClases -> CLASS . ID herencia LBRACE ATTRIBUTES declarAttributes METHODS declarMethods RBRACE declarClases

    ID              shift and go to state 12


state 8

    (6) declarClases -> empty .

    VAR             reduce using rule 6 (declarClases -> empty .)
    VOID            reduce using rule 6 (declarClases -> empty .)
    INT             reduce using rule 6 (declarClases -> empty .)
    FLOAT           reduce using rule 6 (declarClases -> empty .)
    CHAR            reduce using rule 6 (declarClases -> empty .)
    MAIN            reduce using rule 6 (declarClases -> empty .)


state 9

    (1) program -> PROGRAM ID initProg SCOLON declarClases declarVar . definFunc MAIN auxMain LPAREN RPAREN declarVar LBRACE listaEstatutos RBRACE prueba
    (36) definFunc -> . tipoMethod FUNC ID auxFuncion LPAREN listaParam RPAREN declarVar LBRACE listaEstatutos RBRACE definFunc
    (37) definFunc -> . empty
    (26) tipoMethod -> . VOID
    (27) tipoMethod -> . INT
    (28) tipoMethod -> . FLOAT
    (29) tipoMethod -> . CHAR
    (94) empty -> .

    VOID            shift and go to state 16
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 19
    MAIN            reduce using rule 94 (empty -> .)

    definFunc                      shift and go to state 13
    tipoMethod                     shift and go to state 14
    empty                          shift and go to state 15

state 10

    (34) declarVar -> VAR . tipo COLON listaIdDeclare SCOLON declarVar
    (20) tipo -> . ID
    (21) tipo -> . INT
    (22) tipo -> . FLOAT
    (23) tipo -> . CHAR

    ID              shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    CHAR            shift and go to state 24

    tipo                           shift and go to state 20

state 11

    (35) declarVar -> empty .

    VOID            reduce using rule 35 (declarVar -> empty .)
    INT             reduce using rule 35 (declarVar -> empty .)
    FLOAT           reduce using rule 35 (declarVar -> empty .)
    CHAR            reduce using rule 35 (declarVar -> empty .)
    MAIN            reduce using rule 35 (declarVar -> empty .)
    LBRACE          reduce using rule 35 (declarVar -> empty .)


state 12

    (5) declarClases -> CLASS ID . herencia LBRACE ATTRIBUTES declarAttributes METHODS declarMethods RBRACE declarClases
    (7) herencia -> . LT EXTENDS ID GT
    (8) herencia -> . empty
    (94) empty -> .

    LT              shift and go to state 26
    LBRACE          reduce using rule 94 (empty -> .)

    herencia                       shift and go to state 25
    empty                          shift and go to state 27

state 13

    (1) program -> PROGRAM ID initProg SCOLON declarClases declarVar definFunc . MAIN auxMain LPAREN RPAREN declarVar LBRACE listaEstatutos RBRACE prueba

    MAIN            shift and go to state 28


state 14

    (36) definFunc -> tipoMethod . FUNC ID auxFuncion LPAREN listaParam RPAREN declarVar LBRACE listaEstatutos RBRACE definFunc

    FUNC            shift and go to state 29


state 15

    (37) definFunc -> empty .

    MAIN            reduce using rule 37 (definFunc -> empty .)


state 16

    (26) tipoMethod -> VOID .

    FUNC            reduce using rule 26 (tipoMethod -> VOID .)


state 17

    (27) tipoMethod -> INT .

    FUNC            reduce using rule 27 (tipoMethod -> INT .)


state 18

    (28) tipoMethod -> FLOAT .

    FUNC            reduce using rule 28 (tipoMethod -> FLOAT .)


state 19

    (29) tipoMethod -> CHAR .

    FUNC            reduce using rule 29 (tipoMethod -> CHAR .)


state 20

    (34) declarVar -> VAR tipo . COLON listaIdDeclare SCOLON declarVar

    COLON           shift and go to state 30


state 21

    (20) tipo -> ID .

    COLON           reduce using rule 20 (tipo -> ID .)


state 22

    (21) tipo -> INT .

    COLON           reduce using rule 21 (tipo -> INT .)


state 23

    (22) tipo -> FLOAT .

    COLON           reduce using rule 22 (tipo -> FLOAT .)


state 24

    (23) tipo -> CHAR .

    COLON           reduce using rule 23 (tipo -> CHAR .)


state 25

    (5) declarClases -> CLASS ID herencia . LBRACE ATTRIBUTES declarAttributes METHODS declarMethods RBRACE declarClases

    LBRACE          shift and go to state 31


state 26

    (7) herencia -> LT . EXTENDS ID GT

    EXTENDS         shift and go to state 32


state 27

    (8) herencia -> empty .

    LBRACE          reduce using rule 8 (herencia -> empty .)


state 28

    (1) program -> PROGRAM ID initProg SCOLON declarClases declarVar definFunc MAIN . auxMain LPAREN RPAREN declarVar LBRACE listaEstatutos RBRACE prueba
    (4) auxMain -> .

    LPAREN          reduce using rule 4 (auxMain -> .)

    auxMain                        shift and go to state 33

state 29

    (36) definFunc -> tipoMethod FUNC . ID auxFuncion LPAREN listaParam RPAREN declarVar LBRACE listaEstatutos RBRACE definFunc

    ID              shift and go to state 34


state 30

    (34) declarVar -> VAR tipo COLON . listaIdDeclare SCOLON declarVar
    (11) listaIdDeclare -> . idDeclare
    (12) listaIdDeclare -> . idDeclare COMMA listaIdDeclare
    (13) idDeclare -> . ID
    (14) idDeclare -> . ID LBRACK CTE_I RBRACK
    (15) idDeclare -> . ID LBRACK CTE_I RBRACK LBRACK CTE_I RBRACK

    ID              shift and go to state 37

    listaIdDeclare                 shift and go to state 35
    idDeclare                      shift and go to state 36

state 31

    (5) declarClases -> CLASS ID herencia LBRACE . ATTRIBUTES declarAttributes METHODS declarMethods RBRACE declarClases

    ATTRIBUTES      shift and go to state 38


state 32

    (7) herencia -> LT EXTENDS . ID GT

    ID              shift and go to state 39


state 33

    (1) program -> PROGRAM ID initProg SCOLON declarClases declarVar definFunc MAIN auxMain . LPAREN RPAREN declarVar LBRACE listaEstatutos RBRACE prueba

    LPAREN          shift and go to state 40


state 34

    (36) definFunc -> tipoMethod FUNC ID . auxFuncion LPAREN listaParam RPAREN declarVar LBRACE listaEstatutos RBRACE definFunc
    (38) auxFuncion -> .

    LPAREN          reduce using rule 38 (auxFuncion -> .)

    auxFuncion                     shift and go to state 41

state 35

    (34) declarVar -> VAR tipo COLON listaIdDeclare . SCOLON declarVar

    SCOLON          shift and go to state 42


state 36

    (11) listaIdDeclare -> idDeclare .
    (12) listaIdDeclare -> idDeclare . COMMA listaIdDeclare

    SCOLON          reduce using rule 11 (listaIdDeclare -> idDeclare .)
    COMMA           shift and go to state 43


state 37

    (13) idDeclare -> ID .
    (14) idDeclare -> ID . LBRACK CTE_I RBRACK
    (15) idDeclare -> ID . LBRACK CTE_I RBRACK LBRACK CTE_I RBRACK

    COMMA           reduce using rule 13 (idDeclare -> ID .)
    SCOLON          reduce using rule 13 (idDeclare -> ID .)
    LBRACK          shift and go to state 44


state 38

    (5) declarClases -> CLASS ID herencia LBRACE ATTRIBUTES . declarAttributes METHODS declarMethods RBRACE declarClases
    (9) declarAttributes -> . tipo COLON listaIdDeclare SCOLON declarAttributes
    (10) declarAttributes -> . empty
    (20) tipo -> . ID
    (21) tipo -> . INT
    (22) tipo -> . FLOAT
    (23) tipo -> . CHAR
    (94) empty -> .

    ID              shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    CHAR            shift and go to state 24
    METHODS         reduce using rule 94 (empty -> .)

    declarAttributes               shift and go to state 45
    tipo                           shift and go to state 46
    empty                          shift and go to state 47

state 39

    (7) herencia -> LT EXTENDS ID . GT

    GT              shift and go to state 48


state 40

    (1) program -> PROGRAM ID initProg SCOLON declarClases declarVar definFunc MAIN auxMain LPAREN . RPAREN declarVar LBRACE listaEstatutos RBRACE prueba

    RPAREN          shift and go to state 49


state 41

    (36) definFunc -> tipoMethod FUNC ID auxFuncion . LPAREN listaParam RPAREN declarVar LBRACE listaEstatutos RBRACE definFunc

    LPAREN          shift and go to state 50


state 42

    (34) declarVar -> VAR tipo COLON listaIdDeclare SCOLON . declarVar
    (34) declarVar -> . VAR tipo COLON listaIdDeclare SCOLON declarVar
    (35) declarVar -> . empty
    (94) empty -> .

    VAR             shift and go to state 10
    VOID            reduce using rule 94 (empty -> .)
    INT             reduce using rule 94 (empty -> .)
    FLOAT           reduce using rule 94 (empty -> .)
    CHAR            reduce using rule 94 (empty -> .)
    MAIN            reduce using rule 94 (empty -> .)
    LBRACE          reduce using rule 94 (empty -> .)

    declarVar                      shift and go to state 51
    empty                          shift and go to state 11

state 43

    (12) listaIdDeclare -> idDeclare COMMA . listaIdDeclare
    (11) listaIdDeclare -> . idDeclare
    (12) listaIdDeclare -> . idDeclare COMMA listaIdDeclare
    (13) idDeclare -> . ID
    (14) idDeclare -> . ID LBRACK CTE_I RBRACK
    (15) idDeclare -> . ID LBRACK CTE_I RBRACK LBRACK CTE_I RBRACK

    ID              shift and go to state 37

    idDeclare                      shift and go to state 36
    listaIdDeclare                 shift and go to state 52

state 44

    (14) idDeclare -> ID LBRACK . CTE_I RBRACK
    (15) idDeclare -> ID LBRACK . CTE_I RBRACK LBRACK CTE_I RBRACK

    CTE_I           shift and go to state 53


state 45

    (5) declarClases -> CLASS ID herencia LBRACE ATTRIBUTES declarAttributes . METHODS declarMethods RBRACE declarClases

    METHODS         shift and go to state 54


state 46

    (9) declarAttributes -> tipo . COLON listaIdDeclare SCOLON declarAttributes

    COLON           shift and go to state 55


state 47

    (10) declarAttributes -> empty .

    METHODS         reduce using rule 10 (declarAttributes -> empty .)


state 48

    (7) herencia -> LT EXTENDS ID GT .

    LBRACE          reduce using rule 7 (herencia -> LT EXTENDS ID GT .)


state 49

    (1) program -> PROGRAM ID initProg SCOLON declarClases declarVar definFunc MAIN auxMain LPAREN RPAREN . declarVar LBRACE listaEstatutos RBRACE prueba
    (34) declarVar -> . VAR tipo COLON listaIdDeclare SCOLON declarVar
    (35) declarVar -> . empty
    (94) empty -> .

    VAR             shift and go to state 10
    LBRACE          reduce using rule 94 (empty -> .)

    declarVar                      shift and go to state 56
    empty                          shift and go to state 11

state 50

    (36) definFunc -> tipoMethod FUNC ID auxFuncion LPAREN . listaParam RPAREN declarVar LBRACE listaEstatutos RBRACE definFunc
    (30) listaParam -> . param
    (31) listaParam -> . param COMMA listaParam
    (32) listaParam -> . empty
    (33) param -> . tipo COLON ID
    (94) empty -> .
    (20) tipo -> . ID
    (21) tipo -> . INT
    (22) tipo -> . FLOAT
    (23) tipo -> . CHAR

    RPAREN          reduce using rule 94 (empty -> .)
    ID              shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    CHAR            shift and go to state 24

    listaParam                     shift and go to state 57
    param                          shift and go to state 58
    empty                          shift and go to state 59
    tipo                           shift and go to state 60

state 51

    (34) declarVar -> VAR tipo COLON listaIdDeclare SCOLON declarVar .

    VOID            reduce using rule 34 (declarVar -> VAR tipo COLON listaIdDeclare SCOLON declarVar .)
    INT             reduce using rule 34 (declarVar -> VAR tipo COLON listaIdDeclare SCOLON declarVar .)
    FLOAT           reduce using rule 34 (declarVar -> VAR tipo COLON listaIdDeclare SCOLON declarVar .)
    CHAR            reduce using rule 34 (declarVar -> VAR tipo COLON listaIdDeclare SCOLON declarVar .)
    MAIN            reduce using rule 34 (declarVar -> VAR tipo COLON listaIdDeclare SCOLON declarVar .)
    LBRACE          reduce using rule 34 (declarVar -> VAR tipo COLON listaIdDeclare SCOLON declarVar .)


state 52

    (12) listaIdDeclare -> idDeclare COMMA listaIdDeclare .

    SCOLON          reduce using rule 12 (listaIdDeclare -> idDeclare COMMA listaIdDeclare .)


state 53

    (14) idDeclare -> ID LBRACK CTE_I . RBRACK
    (15) idDeclare -> ID LBRACK CTE_I . RBRACK LBRACK CTE_I RBRACK

    RBRACK          shift and go to state 61


state 54

    (5) declarClases -> CLASS ID herencia LBRACE ATTRIBUTES declarAttributes METHODS . declarMethods RBRACE declarClases
    (24) declarMethods -> . tipoMethod FUNC ID LPAREN listaParam RPAREN LBRACE listaEstatutos RBRACE declarMethods
    (25) declarMethods -> . empty
    (26) tipoMethod -> . VOID
    (27) tipoMethod -> . INT
    (28) tipoMethod -> . FLOAT
    (29) tipoMethod -> . CHAR
    (94) empty -> .

    VOID            shift and go to state 16
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 19
    RBRACE          reduce using rule 94 (empty -> .)

    declarMethods                  shift and go to state 62
    tipoMethod                     shift and go to state 63
    empty                          shift and go to state 64

state 55

    (9) declarAttributes -> tipo COLON . listaIdDeclare SCOLON declarAttributes
    (11) listaIdDeclare -> . idDeclare
    (12) listaIdDeclare -> . idDeclare COMMA listaIdDeclare
    (13) idDeclare -> . ID
    (14) idDeclare -> . ID LBRACK CTE_I RBRACK
    (15) idDeclare -> . ID LBRACK CTE_I RBRACK LBRACK CTE_I RBRACK

    ID              shift and go to state 37

    listaIdDeclare                 shift and go to state 65
    idDeclare                      shift and go to state 36

state 56

    (1) program -> PROGRAM ID initProg SCOLON declarClases declarVar definFunc MAIN auxMain LPAREN RPAREN declarVar . LBRACE listaEstatutos RBRACE prueba

    LBRACE          shift and go to state 66


state 57

    (36) definFunc -> tipoMethod FUNC ID auxFuncion LPAREN listaParam . RPAREN declarVar LBRACE listaEstatutos RBRACE definFunc

    RPAREN          shift and go to state 67


state 58

    (30) listaParam -> param .
    (31) listaParam -> param . COMMA listaParam

    RPAREN          reduce using rule 30 (listaParam -> param .)
    COMMA           shift and go to state 68


state 59

    (32) listaParam -> empty .

    RPAREN          reduce using rule 32 (listaParam -> empty .)


state 60

    (33) param -> tipo . COLON ID

    COLON           shift and go to state 69


state 61

    (14) idDeclare -> ID LBRACK CTE_I RBRACK .
    (15) idDeclare -> ID LBRACK CTE_I RBRACK . LBRACK CTE_I RBRACK

    COMMA           reduce using rule 14 (idDeclare -> ID LBRACK CTE_I RBRACK .)
    SCOLON          reduce using rule 14 (idDeclare -> ID LBRACK CTE_I RBRACK .)
    LBRACK          shift and go to state 70


state 62

    (5) declarClases -> CLASS ID herencia LBRACE ATTRIBUTES declarAttributes METHODS declarMethods . RBRACE declarClases

    RBRACE          shift and go to state 71


state 63

    (24) declarMethods -> tipoMethod . FUNC ID LPAREN listaParam RPAREN LBRACE listaEstatutos RBRACE declarMethods

    FUNC            shift and go to state 72


state 64

    (25) declarMethods -> empty .

    RBRACE          reduce using rule 25 (declarMethods -> empty .)


state 65

    (9) declarAttributes -> tipo COLON listaIdDeclare . SCOLON declarAttributes

    SCOLON          shift and go to state 73


state 66

    (1) program -> PROGRAM ID initProg SCOLON declarClases declarVar definFunc MAIN auxMain LPAREN RPAREN declarVar LBRACE . listaEstatutos RBRACE prueba
    (39) listaEstatutos -> . estatutos listaEstatutos
    (40) listaEstatutos -> . empty
    (41) estatutos -> . llamada SCOLON
    (42) estatutos -> . asignacion SCOLON
    (43) estatutos -> . returnf SCOLON
    (44) estatutos -> . lectura SCOLON
    (45) estatutos -> . escritura SCOLON
    (46) estatutos -> . condicion
    (47) estatutos -> . cond_w
    (48) estatutos -> . cond_f
    (94) empty -> .
    (50) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (51) llamada -> . ID LPAREN enviaParam RPAREN
    (49) asignacion -> . idCall ASIGNA exp
    (56) returnf -> . RETURN LPAREN exp RPAREN
    (57) lectura -> . READ LPAREN listaId RPAREN
    (60) escritura -> . WRITE LPAREN exp lextra RPAREN
    (61) escritura -> . WRITE LPAREN LETRERO lextra RPAREN
    (65) condicion -> . IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE
    (66) condicion -> . IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE
    (67) cond_w -> . WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE
    (68) cond_f -> . FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE
    (16) idCall -> . ID
    (17) idCall -> . ID DOT ID
    (18) idCall -> . ID LBRACK exp RBRACK
    (19) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    RBRACE          reduce using rule 94 (empty -> .)
    ID              shift and go to state 74
    RETURN          shift and go to state 87
    READ            shift and go to state 88
    WRITE           shift and go to state 89
    IF              shift and go to state 90
    WHILE           shift and go to state 91
    FOR             shift and go to state 92

    listaEstatutos                 shift and go to state 75
    estatutos                      shift and go to state 76
    empty                          shift and go to state 77
    llamada                        shift and go to state 78
    asignacion                     shift and go to state 79
    returnf                        shift and go to state 80
    lectura                        shift and go to state 81
    escritura                      shift and go to state 82
    condicion                      shift and go to state 83
    cond_w                         shift and go to state 84
    cond_f                         shift and go to state 85
    idCall                         shift and go to state 86

state 67

    (36) definFunc -> tipoMethod FUNC ID auxFuncion LPAREN listaParam RPAREN . declarVar LBRACE listaEstatutos RBRACE definFunc
    (34) declarVar -> . VAR tipo COLON listaIdDeclare SCOLON declarVar
    (35) declarVar -> . empty
    (94) empty -> .

    VAR             shift and go to state 10
    LBRACE          reduce using rule 94 (empty -> .)

    declarVar                      shift and go to state 93
    empty                          shift and go to state 11

state 68

    (31) listaParam -> param COMMA . listaParam
    (30) listaParam -> . param
    (31) listaParam -> . param COMMA listaParam
    (32) listaParam -> . empty
    (33) param -> . tipo COLON ID
    (94) empty -> .
    (20) tipo -> . ID
    (21) tipo -> . INT
    (22) tipo -> . FLOAT
    (23) tipo -> . CHAR

    RPAREN          reduce using rule 94 (empty -> .)
    ID              shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    CHAR            shift and go to state 24

    param                          shift and go to state 58
    listaParam                     shift and go to state 94
    empty                          shift and go to state 59
    tipo                           shift and go to state 60

state 69

    (33) param -> tipo COLON . ID

    ID              shift and go to state 95


state 70

    (15) idDeclare -> ID LBRACK CTE_I RBRACK LBRACK . CTE_I RBRACK

    CTE_I           shift and go to state 96


state 71

    (5) declarClases -> CLASS ID herencia LBRACE ATTRIBUTES declarAttributes METHODS declarMethods RBRACE . declarClases
    (5) declarClases -> . CLASS ID herencia LBRACE ATTRIBUTES declarAttributes METHODS declarMethods RBRACE declarClases
    (6) declarClases -> . empty
    (94) empty -> .

    CLASS           shift and go to state 7
    VAR             reduce using rule 94 (empty -> .)
    VOID            reduce using rule 94 (empty -> .)
    INT             reduce using rule 94 (empty -> .)
    FLOAT           reduce using rule 94 (empty -> .)
    CHAR            reduce using rule 94 (empty -> .)
    MAIN            reduce using rule 94 (empty -> .)

    declarClases                   shift and go to state 97
    empty                          shift and go to state 8

state 72

    (24) declarMethods -> tipoMethod FUNC . ID LPAREN listaParam RPAREN LBRACE listaEstatutos RBRACE declarMethods

    ID              shift and go to state 98


state 73

    (9) declarAttributes -> tipo COLON listaIdDeclare SCOLON . declarAttributes
    (9) declarAttributes -> . tipo COLON listaIdDeclare SCOLON declarAttributes
    (10) declarAttributes -> . empty
    (20) tipo -> . ID
    (21) tipo -> . INT
    (22) tipo -> . FLOAT
    (23) tipo -> . CHAR
    (94) empty -> .

    ID              shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    CHAR            shift and go to state 24
    METHODS         reduce using rule 94 (empty -> .)

    tipo                           shift and go to state 46
    declarAttributes               shift and go to state 99
    empty                          shift and go to state 47

state 74

    (50) llamada -> ID . DOT ID LPAREN enviaParam RPAREN
    (51) llamada -> ID . LPAREN enviaParam RPAREN
    (16) idCall -> ID .
    (17) idCall -> ID . DOT ID
    (18) idCall -> ID . LBRACK exp RBRACK
    (19) idCall -> ID . LBRACK exp RBRACK LBRACK exp RBRACK

    DOT             shift and go to state 100
    LPAREN          shift and go to state 101
    ASIGNA          reduce using rule 16 (idCall -> ID .)
    MULT            reduce using rule 16 (idCall -> ID .)
    DIV             reduce using rule 16 (idCall -> ID .)
    PLUS            reduce using rule 16 (idCall -> ID .)
    MINUS           reduce using rule 16 (idCall -> ID .)
    LT              reduce using rule 16 (idCall -> ID .)
    GT              reduce using rule 16 (idCall -> ID .)
    LTE             reduce using rule 16 (idCall -> ID .)
    GTE             reduce using rule 16 (idCall -> ID .)
    EQUALS          reduce using rule 16 (idCall -> ID .)
    NEQUALS         reduce using rule 16 (idCall -> ID .)
    AND             reduce using rule 16 (idCall -> ID .)
    OR              reduce using rule 16 (idCall -> ID .)
    COMMA           reduce using rule 16 (idCall -> ID .)
    RPAREN          reduce using rule 16 (idCall -> ID .)
    RBRACK          reduce using rule 16 (idCall -> ID .)
    SCOLON          reduce using rule 16 (idCall -> ID .)
    TO              reduce using rule 16 (idCall -> ID .)
    DO              reduce using rule 16 (idCall -> ID .)
    LBRACK          shift and go to state 102


state 75

    (1) program -> PROGRAM ID initProg SCOLON declarClases declarVar definFunc MAIN auxMain LPAREN RPAREN declarVar LBRACE listaEstatutos . RBRACE prueba

    RBRACE          shift and go to state 103


state 76

    (39) listaEstatutos -> estatutos . listaEstatutos
    (39) listaEstatutos -> . estatutos listaEstatutos
    (40) listaEstatutos -> . empty
    (41) estatutos -> . llamada SCOLON
    (42) estatutos -> . asignacion SCOLON
    (43) estatutos -> . returnf SCOLON
    (44) estatutos -> . lectura SCOLON
    (45) estatutos -> . escritura SCOLON
    (46) estatutos -> . condicion
    (47) estatutos -> . cond_w
    (48) estatutos -> . cond_f
    (94) empty -> .
    (50) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (51) llamada -> . ID LPAREN enviaParam RPAREN
    (49) asignacion -> . idCall ASIGNA exp
    (56) returnf -> . RETURN LPAREN exp RPAREN
    (57) lectura -> . READ LPAREN listaId RPAREN
    (60) escritura -> . WRITE LPAREN exp lextra RPAREN
    (61) escritura -> . WRITE LPAREN LETRERO lextra RPAREN
    (65) condicion -> . IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE
    (66) condicion -> . IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE
    (67) cond_w -> . WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE
    (68) cond_f -> . FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE
    (16) idCall -> . ID
    (17) idCall -> . ID DOT ID
    (18) idCall -> . ID LBRACK exp RBRACK
    (19) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    RBRACE          reduce using rule 94 (empty -> .)
    ID              shift and go to state 74
    RETURN          shift and go to state 87
    READ            shift and go to state 88
    WRITE           shift and go to state 89
    IF              shift and go to state 90
    WHILE           shift and go to state 91
    FOR             shift and go to state 92

    estatutos                      shift and go to state 76
    listaEstatutos                 shift and go to state 104
    empty                          shift and go to state 77
    llamada                        shift and go to state 78
    asignacion                     shift and go to state 79
    returnf                        shift and go to state 80
    lectura                        shift and go to state 81
    escritura                      shift and go to state 82
    condicion                      shift and go to state 83
    cond_w                         shift and go to state 84
    cond_f                         shift and go to state 85
    idCall                         shift and go to state 86

state 77

    (40) listaEstatutos -> empty .

    RBRACE          reduce using rule 40 (listaEstatutos -> empty .)


state 78

    (41) estatutos -> llamada . SCOLON

    SCOLON          shift and go to state 105


state 79

    (42) estatutos -> asignacion . SCOLON

    SCOLON          shift and go to state 106


state 80

    (43) estatutos -> returnf . SCOLON

    SCOLON          shift and go to state 107


state 81

    (44) estatutos -> lectura . SCOLON

    SCOLON          shift and go to state 108


state 82

    (45) estatutos -> escritura . SCOLON

    SCOLON          shift and go to state 109


state 83

    (46) estatutos -> condicion .

    ID              reduce using rule 46 (estatutos -> condicion .)
    RETURN          reduce using rule 46 (estatutos -> condicion .)
    READ            reduce using rule 46 (estatutos -> condicion .)
    WRITE           reduce using rule 46 (estatutos -> condicion .)
    IF              reduce using rule 46 (estatutos -> condicion .)
    WHILE           reduce using rule 46 (estatutos -> condicion .)
    FOR             reduce using rule 46 (estatutos -> condicion .)
    RBRACE          reduce using rule 46 (estatutos -> condicion .)


state 84

    (47) estatutos -> cond_w .

    ID              reduce using rule 47 (estatutos -> cond_w .)
    RETURN          reduce using rule 47 (estatutos -> cond_w .)
    READ            reduce using rule 47 (estatutos -> cond_w .)
    WRITE           reduce using rule 47 (estatutos -> cond_w .)
    IF              reduce using rule 47 (estatutos -> cond_w .)
    WHILE           reduce using rule 47 (estatutos -> cond_w .)
    FOR             reduce using rule 47 (estatutos -> cond_w .)
    RBRACE          reduce using rule 47 (estatutos -> cond_w .)


state 85

    (48) estatutos -> cond_f .

    ID              reduce using rule 48 (estatutos -> cond_f .)
    RETURN          reduce using rule 48 (estatutos -> cond_f .)
    READ            reduce using rule 48 (estatutos -> cond_f .)
    WRITE           reduce using rule 48 (estatutos -> cond_f .)
    IF              reduce using rule 48 (estatutos -> cond_f .)
    WHILE           reduce using rule 48 (estatutos -> cond_f .)
    FOR             reduce using rule 48 (estatutos -> cond_f .)
    RBRACE          reduce using rule 48 (estatutos -> cond_f .)


state 86

    (49) asignacion -> idCall . ASIGNA exp

    ASIGNA          shift and go to state 110


state 87

    (56) returnf -> RETURN . LPAREN exp RPAREN

    LPAREN          shift and go to state 111


state 88

    (57) lectura -> READ . LPAREN listaId RPAREN

    LPAREN          shift and go to state 112


state 89

    (60) escritura -> WRITE . LPAREN exp lextra RPAREN
    (61) escritura -> WRITE . LPAREN LETRERO lextra RPAREN

    LPAREN          shift and go to state 113


state 90

    (65) condicion -> IF . LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE
    (66) condicion -> IF . LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE

    LPAREN          shift and go to state 114


state 91

    (67) cond_w -> WHILE . LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE

    LPAREN          shift and go to state 115


state 92

    (68) cond_f -> FOR . idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE
    (16) idCall -> . ID
    (17) idCall -> . ID DOT ID
    (18) idCall -> . ID LBRACK exp RBRACK
    (19) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    ID              shift and go to state 117

    idCall                         shift and go to state 116

state 93

    (36) definFunc -> tipoMethod FUNC ID auxFuncion LPAREN listaParam RPAREN declarVar . LBRACE listaEstatutos RBRACE definFunc

    LBRACE          shift and go to state 118


state 94

    (31) listaParam -> param COMMA listaParam .

    RPAREN          reduce using rule 31 (listaParam -> param COMMA listaParam .)


state 95

    (33) param -> tipo COLON ID .

    COMMA           reduce using rule 33 (param -> tipo COLON ID .)
    RPAREN          reduce using rule 33 (param -> tipo COLON ID .)


state 96

    (15) idDeclare -> ID LBRACK CTE_I RBRACK LBRACK CTE_I . RBRACK

    RBRACK          shift and go to state 119


state 97

    (5) declarClases -> CLASS ID herencia LBRACE ATTRIBUTES declarAttributes METHODS declarMethods RBRACE declarClases .

    VAR             reduce using rule 5 (declarClases -> CLASS ID herencia LBRACE ATTRIBUTES declarAttributes METHODS declarMethods RBRACE declarClases .)
    VOID            reduce using rule 5 (declarClases -> CLASS ID herencia LBRACE ATTRIBUTES declarAttributes METHODS declarMethods RBRACE declarClases .)
    INT             reduce using rule 5 (declarClases -> CLASS ID herencia LBRACE ATTRIBUTES declarAttributes METHODS declarMethods RBRACE declarClases .)
    FLOAT           reduce using rule 5 (declarClases -> CLASS ID herencia LBRACE ATTRIBUTES declarAttributes METHODS declarMethods RBRACE declarClases .)
    CHAR            reduce using rule 5 (declarClases -> CLASS ID herencia LBRACE ATTRIBUTES declarAttributes METHODS declarMethods RBRACE declarClases .)
    MAIN            reduce using rule 5 (declarClases -> CLASS ID herencia LBRACE ATTRIBUTES declarAttributes METHODS declarMethods RBRACE declarClases .)


state 98

    (24) declarMethods -> tipoMethod FUNC ID . LPAREN listaParam RPAREN LBRACE listaEstatutos RBRACE declarMethods

    LPAREN          shift and go to state 120


state 99

    (9) declarAttributes -> tipo COLON listaIdDeclare SCOLON declarAttributes .

    METHODS         reduce using rule 9 (declarAttributes -> tipo COLON listaIdDeclare SCOLON declarAttributes .)


state 100

    (50) llamada -> ID DOT . ID LPAREN enviaParam RPAREN
    (17) idCall -> ID DOT . ID

    ID              shift and go to state 121


state 101

    (51) llamada -> ID LPAREN . enviaParam RPAREN
    (52) enviaParam -> . paramReferencia
    (53) enviaParam -> . empty
    (54) paramReferencia -> . exp
    (55) paramReferencia -> . exp COMMA paramReferencia
    (94) empty -> .
    (69) exp -> . texp
    (70) exp -> . texp OR exp
    (71) texp -> . gexp
    (72) texp -> . gexp AND texp
    (73) gexp -> . mexp
    (74) gexp -> . mexp LT mexp
    (75) gexp -> . mexp GT mexp
    (76) gexp -> . mexp LTE mexp
    (77) gexp -> . mexp GTE mexp
    (78) gexp -> . mexp EQUALS mexp
    (79) gexp -> . mexp NEQUALS mexp
    (80) mexp -> . t
    (81) mexp -> . t PLUS mexp
    (82) mexp -> . t MINUS mexp
    (83) t -> . f
    (84) t -> . f MULT t
    (85) t -> . f DIV t
    (86) f -> . LPAREN addFF exp RPAREN rmFF
    (87) f -> . CTE_I
    (88) f -> . CTE_F
    (89) f -> . CTE_C
    (90) f -> . llamada
    (91) f -> . idCall
    (50) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (51) llamada -> . ID LPAREN enviaParam RPAREN
    (16) idCall -> . ID
    (17) idCall -> . ID DOT ID
    (18) idCall -> . ID LBRACK exp RBRACK
    (19) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    RPAREN          reduce using rule 94 (empty -> .)
    LPAREN          shift and go to state 122
    CTE_I           shift and go to state 132
    CTE_F           shift and go to state 133
    CTE_C           shift and go to state 134
    ID              shift and go to state 74

    enviaParam                     shift and go to state 123
    paramReferencia                shift and go to state 124
    empty                          shift and go to state 125
    exp                            shift and go to state 126
    texp                           shift and go to state 127
    gexp                           shift and go to state 128
    mexp                           shift and go to state 129
    t                              shift and go to state 130
    f                              shift and go to state 131
    llamada                        shift and go to state 135
    idCall                         shift and go to state 136

state 102

    (18) idCall -> ID LBRACK . exp RBRACK
    (19) idCall -> ID LBRACK . exp RBRACK LBRACK exp RBRACK
    (69) exp -> . texp
    (70) exp -> . texp OR exp
    (71) texp -> . gexp
    (72) texp -> . gexp AND texp
    (73) gexp -> . mexp
    (74) gexp -> . mexp LT mexp
    (75) gexp -> . mexp GT mexp
    (76) gexp -> . mexp LTE mexp
    (77) gexp -> . mexp GTE mexp
    (78) gexp -> . mexp EQUALS mexp
    (79) gexp -> . mexp NEQUALS mexp
    (80) mexp -> . t
    (81) mexp -> . t PLUS mexp
    (82) mexp -> . t MINUS mexp
    (83) t -> . f
    (84) t -> . f MULT t
    (85) t -> . f DIV t
    (86) f -> . LPAREN addFF exp RPAREN rmFF
    (87) f -> . CTE_I
    (88) f -> . CTE_F
    (89) f -> . CTE_C
    (90) f -> . llamada
    (91) f -> . idCall
    (50) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (51) llamada -> . ID LPAREN enviaParam RPAREN
    (16) idCall -> . ID
    (17) idCall -> . ID DOT ID
    (18) idCall -> . ID LBRACK exp RBRACK
    (19) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 122
    CTE_I           shift and go to state 132
    CTE_F           shift and go to state 133
    CTE_C           shift and go to state 134
    ID              shift and go to state 74

    exp                            shift and go to state 137
    texp                           shift and go to state 127
    gexp                           shift and go to state 128
    mexp                           shift and go to state 129
    t                              shift and go to state 130
    f                              shift and go to state 131
    llamada                        shift and go to state 135
    idCall                         shift and go to state 136

state 103

    (1) program -> PROGRAM ID initProg SCOLON declarClases declarVar definFunc MAIN auxMain LPAREN RPAREN declarVar LBRACE listaEstatutos RBRACE . prueba
    (2) prueba -> .

    $end            reduce using rule 2 (prueba -> .)

    prueba                         shift and go to state 138

state 104

    (39) listaEstatutos -> estatutos listaEstatutos .

    RBRACE          reduce using rule 39 (listaEstatutos -> estatutos listaEstatutos .)


state 105

    (41) estatutos -> llamada SCOLON .

    ID              reduce using rule 41 (estatutos -> llamada SCOLON .)
    RETURN          reduce using rule 41 (estatutos -> llamada SCOLON .)
    READ            reduce using rule 41 (estatutos -> llamada SCOLON .)
    WRITE           reduce using rule 41 (estatutos -> llamada SCOLON .)
    IF              reduce using rule 41 (estatutos -> llamada SCOLON .)
    WHILE           reduce using rule 41 (estatutos -> llamada SCOLON .)
    FOR             reduce using rule 41 (estatutos -> llamada SCOLON .)
    RBRACE          reduce using rule 41 (estatutos -> llamada SCOLON .)


state 106

    (42) estatutos -> asignacion SCOLON .

    ID              reduce using rule 42 (estatutos -> asignacion SCOLON .)
    RETURN          reduce using rule 42 (estatutos -> asignacion SCOLON .)
    READ            reduce using rule 42 (estatutos -> asignacion SCOLON .)
    WRITE           reduce using rule 42 (estatutos -> asignacion SCOLON .)
    IF              reduce using rule 42 (estatutos -> asignacion SCOLON .)
    WHILE           reduce using rule 42 (estatutos -> asignacion SCOLON .)
    FOR             reduce using rule 42 (estatutos -> asignacion SCOLON .)
    RBRACE          reduce using rule 42 (estatutos -> asignacion SCOLON .)


state 107

    (43) estatutos -> returnf SCOLON .

    ID              reduce using rule 43 (estatutos -> returnf SCOLON .)
    RETURN          reduce using rule 43 (estatutos -> returnf SCOLON .)
    READ            reduce using rule 43 (estatutos -> returnf SCOLON .)
    WRITE           reduce using rule 43 (estatutos -> returnf SCOLON .)
    IF              reduce using rule 43 (estatutos -> returnf SCOLON .)
    WHILE           reduce using rule 43 (estatutos -> returnf SCOLON .)
    FOR             reduce using rule 43 (estatutos -> returnf SCOLON .)
    RBRACE          reduce using rule 43 (estatutos -> returnf SCOLON .)


state 108

    (44) estatutos -> lectura SCOLON .

    ID              reduce using rule 44 (estatutos -> lectura SCOLON .)
    RETURN          reduce using rule 44 (estatutos -> lectura SCOLON .)
    READ            reduce using rule 44 (estatutos -> lectura SCOLON .)
    WRITE           reduce using rule 44 (estatutos -> lectura SCOLON .)
    IF              reduce using rule 44 (estatutos -> lectura SCOLON .)
    WHILE           reduce using rule 44 (estatutos -> lectura SCOLON .)
    FOR             reduce using rule 44 (estatutos -> lectura SCOLON .)
    RBRACE          reduce using rule 44 (estatutos -> lectura SCOLON .)


state 109

    (45) estatutos -> escritura SCOLON .

    ID              reduce using rule 45 (estatutos -> escritura SCOLON .)
    RETURN          reduce using rule 45 (estatutos -> escritura SCOLON .)
    READ            reduce using rule 45 (estatutos -> escritura SCOLON .)
    WRITE           reduce using rule 45 (estatutos -> escritura SCOLON .)
    IF              reduce using rule 45 (estatutos -> escritura SCOLON .)
    WHILE           reduce using rule 45 (estatutos -> escritura SCOLON .)
    FOR             reduce using rule 45 (estatutos -> escritura SCOLON .)
    RBRACE          reduce using rule 45 (estatutos -> escritura SCOLON .)


state 110

    (49) asignacion -> idCall ASIGNA . exp
    (69) exp -> . texp
    (70) exp -> . texp OR exp
    (71) texp -> . gexp
    (72) texp -> . gexp AND texp
    (73) gexp -> . mexp
    (74) gexp -> . mexp LT mexp
    (75) gexp -> . mexp GT mexp
    (76) gexp -> . mexp LTE mexp
    (77) gexp -> . mexp GTE mexp
    (78) gexp -> . mexp EQUALS mexp
    (79) gexp -> . mexp NEQUALS mexp
    (80) mexp -> . t
    (81) mexp -> . t PLUS mexp
    (82) mexp -> . t MINUS mexp
    (83) t -> . f
    (84) t -> . f MULT t
    (85) t -> . f DIV t
    (86) f -> . LPAREN addFF exp RPAREN rmFF
    (87) f -> . CTE_I
    (88) f -> . CTE_F
    (89) f -> . CTE_C
    (90) f -> . llamada
    (91) f -> . idCall
    (50) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (51) llamada -> . ID LPAREN enviaParam RPAREN
    (16) idCall -> . ID
    (17) idCall -> . ID DOT ID
    (18) idCall -> . ID LBRACK exp RBRACK
    (19) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 122
    CTE_I           shift and go to state 132
    CTE_F           shift and go to state 133
    CTE_C           shift and go to state 134
    ID              shift and go to state 74

    idCall                         shift and go to state 136
    exp                            shift and go to state 139
    texp                           shift and go to state 127
    gexp                           shift and go to state 128
    mexp                           shift and go to state 129
    t                              shift and go to state 130
    f                              shift and go to state 131
    llamada                        shift and go to state 135

state 111

    (56) returnf -> RETURN LPAREN . exp RPAREN
    (69) exp -> . texp
    (70) exp -> . texp OR exp
    (71) texp -> . gexp
    (72) texp -> . gexp AND texp
    (73) gexp -> . mexp
    (74) gexp -> . mexp LT mexp
    (75) gexp -> . mexp GT mexp
    (76) gexp -> . mexp LTE mexp
    (77) gexp -> . mexp GTE mexp
    (78) gexp -> . mexp EQUALS mexp
    (79) gexp -> . mexp NEQUALS mexp
    (80) mexp -> . t
    (81) mexp -> . t PLUS mexp
    (82) mexp -> . t MINUS mexp
    (83) t -> . f
    (84) t -> . f MULT t
    (85) t -> . f DIV t
    (86) f -> . LPAREN addFF exp RPAREN rmFF
    (87) f -> . CTE_I
    (88) f -> . CTE_F
    (89) f -> . CTE_C
    (90) f -> . llamada
    (91) f -> . idCall
    (50) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (51) llamada -> . ID LPAREN enviaParam RPAREN
    (16) idCall -> . ID
    (17) idCall -> . ID DOT ID
    (18) idCall -> . ID LBRACK exp RBRACK
    (19) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 122
    CTE_I           shift and go to state 132
    CTE_F           shift and go to state 133
    CTE_C           shift and go to state 134
    ID              shift and go to state 74

    exp                            shift and go to state 140
    texp                           shift and go to state 127
    gexp                           shift and go to state 128
    mexp                           shift and go to state 129
    t                              shift and go to state 130
    f                              shift and go to state 131
    llamada                        shift and go to state 135
    idCall                         shift and go to state 136

state 112

    (57) lectura -> READ LPAREN . listaId RPAREN
    (58) listaId -> . idCall
    (59) listaId -> . idCall COMMA listaId
    (16) idCall -> . ID
    (17) idCall -> . ID DOT ID
    (18) idCall -> . ID LBRACK exp RBRACK
    (19) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    ID              shift and go to state 117

    listaId                        shift and go to state 141
    idCall                         shift and go to state 142

state 113

    (60) escritura -> WRITE LPAREN . exp lextra RPAREN
    (61) escritura -> WRITE LPAREN . LETRERO lextra RPAREN
    (69) exp -> . texp
    (70) exp -> . texp OR exp
    (71) texp -> . gexp
    (72) texp -> . gexp AND texp
    (73) gexp -> . mexp
    (74) gexp -> . mexp LT mexp
    (75) gexp -> . mexp GT mexp
    (76) gexp -> . mexp LTE mexp
    (77) gexp -> . mexp GTE mexp
    (78) gexp -> . mexp EQUALS mexp
    (79) gexp -> . mexp NEQUALS mexp
    (80) mexp -> . t
    (81) mexp -> . t PLUS mexp
    (82) mexp -> . t MINUS mexp
    (83) t -> . f
    (84) t -> . f MULT t
    (85) t -> . f DIV t
    (86) f -> . LPAREN addFF exp RPAREN rmFF
    (87) f -> . CTE_I
    (88) f -> . CTE_F
    (89) f -> . CTE_C
    (90) f -> . llamada
    (91) f -> . idCall
    (50) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (51) llamada -> . ID LPAREN enviaParam RPAREN
    (16) idCall -> . ID
    (17) idCall -> . ID DOT ID
    (18) idCall -> . ID LBRACK exp RBRACK
    (19) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LETRERO         shift and go to state 144
    LPAREN          shift and go to state 122
    CTE_I           shift and go to state 132
    CTE_F           shift and go to state 133
    CTE_C           shift and go to state 134
    ID              shift and go to state 74

    exp                            shift and go to state 143
    texp                           shift and go to state 127
    gexp                           shift and go to state 128
    mexp                           shift and go to state 129
    t                              shift and go to state 130
    f                              shift and go to state 131
    llamada                        shift and go to state 135
    idCall                         shift and go to state 136

state 114

    (65) condicion -> IF LPAREN . exp RPAREN THEN LBRACE listaEstatutos RBRACE
    (66) condicion -> IF LPAREN . exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE
    (69) exp -> . texp
    (70) exp -> . texp OR exp
    (71) texp -> . gexp
    (72) texp -> . gexp AND texp
    (73) gexp -> . mexp
    (74) gexp -> . mexp LT mexp
    (75) gexp -> . mexp GT mexp
    (76) gexp -> . mexp LTE mexp
    (77) gexp -> . mexp GTE mexp
    (78) gexp -> . mexp EQUALS mexp
    (79) gexp -> . mexp NEQUALS mexp
    (80) mexp -> . t
    (81) mexp -> . t PLUS mexp
    (82) mexp -> . t MINUS mexp
    (83) t -> . f
    (84) t -> . f MULT t
    (85) t -> . f DIV t
    (86) f -> . LPAREN addFF exp RPAREN rmFF
    (87) f -> . CTE_I
    (88) f -> . CTE_F
    (89) f -> . CTE_C
    (90) f -> . llamada
    (91) f -> . idCall
    (50) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (51) llamada -> . ID LPAREN enviaParam RPAREN
    (16) idCall -> . ID
    (17) idCall -> . ID DOT ID
    (18) idCall -> . ID LBRACK exp RBRACK
    (19) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 122
    CTE_I           shift and go to state 132
    CTE_F           shift and go to state 133
    CTE_C           shift and go to state 134
    ID              shift and go to state 74

    exp                            shift and go to state 145
    texp                           shift and go to state 127
    gexp                           shift and go to state 128
    mexp                           shift and go to state 129
    t                              shift and go to state 130
    f                              shift and go to state 131
    llamada                        shift and go to state 135
    idCall                         shift and go to state 136

state 115

    (67) cond_w -> WHILE LPAREN . exp RPAREN DO LBRACE listaEstatutos RBRACE
    (69) exp -> . texp
    (70) exp -> . texp OR exp
    (71) texp -> . gexp
    (72) texp -> . gexp AND texp
    (73) gexp -> . mexp
    (74) gexp -> . mexp LT mexp
    (75) gexp -> . mexp GT mexp
    (76) gexp -> . mexp LTE mexp
    (77) gexp -> . mexp GTE mexp
    (78) gexp -> . mexp EQUALS mexp
    (79) gexp -> . mexp NEQUALS mexp
    (80) mexp -> . t
    (81) mexp -> . t PLUS mexp
    (82) mexp -> . t MINUS mexp
    (83) t -> . f
    (84) t -> . f MULT t
    (85) t -> . f DIV t
    (86) f -> . LPAREN addFF exp RPAREN rmFF
    (87) f -> . CTE_I
    (88) f -> . CTE_F
    (89) f -> . CTE_C
    (90) f -> . llamada
    (91) f -> . idCall
    (50) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (51) llamada -> . ID LPAREN enviaParam RPAREN
    (16) idCall -> . ID
    (17) idCall -> . ID DOT ID
    (18) idCall -> . ID LBRACK exp RBRACK
    (19) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 122
    CTE_I           shift and go to state 132
    CTE_F           shift and go to state 133
    CTE_C           shift and go to state 134
    ID              shift and go to state 74

    exp                            shift and go to state 146
    texp                           shift and go to state 127
    gexp                           shift and go to state 128
    mexp                           shift and go to state 129
    t                              shift and go to state 130
    f                              shift and go to state 131
    llamada                        shift and go to state 135
    idCall                         shift and go to state 136

state 116

    (68) cond_f -> FOR idCall . ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE

    ASIGNA          shift and go to state 147


state 117

    (16) idCall -> ID .
    (17) idCall -> ID . DOT ID
    (18) idCall -> ID . LBRACK exp RBRACK
    (19) idCall -> ID . LBRACK exp RBRACK LBRACK exp RBRACK

    ASIGNA          reduce using rule 16 (idCall -> ID .)
    COMMA           reduce using rule 16 (idCall -> ID .)
    RPAREN          reduce using rule 16 (idCall -> ID .)
    DOT             shift and go to state 148
    LBRACK          shift and go to state 102


state 118

    (36) definFunc -> tipoMethod FUNC ID auxFuncion LPAREN listaParam RPAREN declarVar LBRACE . listaEstatutos RBRACE definFunc
    (39) listaEstatutos -> . estatutos listaEstatutos
    (40) listaEstatutos -> . empty
    (41) estatutos -> . llamada SCOLON
    (42) estatutos -> . asignacion SCOLON
    (43) estatutos -> . returnf SCOLON
    (44) estatutos -> . lectura SCOLON
    (45) estatutos -> . escritura SCOLON
    (46) estatutos -> . condicion
    (47) estatutos -> . cond_w
    (48) estatutos -> . cond_f
    (94) empty -> .
    (50) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (51) llamada -> . ID LPAREN enviaParam RPAREN
    (49) asignacion -> . idCall ASIGNA exp
    (56) returnf -> . RETURN LPAREN exp RPAREN
    (57) lectura -> . READ LPAREN listaId RPAREN
    (60) escritura -> . WRITE LPAREN exp lextra RPAREN
    (61) escritura -> . WRITE LPAREN LETRERO lextra RPAREN
    (65) condicion -> . IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE
    (66) condicion -> . IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE
    (67) cond_w -> . WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE
    (68) cond_f -> . FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE
    (16) idCall -> . ID
    (17) idCall -> . ID DOT ID
    (18) idCall -> . ID LBRACK exp RBRACK
    (19) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    RBRACE          reduce using rule 94 (empty -> .)
    ID              shift and go to state 74
    RETURN          shift and go to state 87
    READ            shift and go to state 88
    WRITE           shift and go to state 89
    IF              shift and go to state 90
    WHILE           shift and go to state 91
    FOR             shift and go to state 92

    listaEstatutos                 shift and go to state 149
    estatutos                      shift and go to state 76
    empty                          shift and go to state 77
    llamada                        shift and go to state 78
    asignacion                     shift and go to state 79
    returnf                        shift and go to state 80
    lectura                        shift and go to state 81
    escritura                      shift and go to state 82
    condicion                      shift and go to state 83
    cond_w                         shift and go to state 84
    cond_f                         shift and go to state 85
    idCall                         shift and go to state 86

state 119

    (15) idDeclare -> ID LBRACK CTE_I RBRACK LBRACK CTE_I RBRACK .

    COMMA           reduce using rule 15 (idDeclare -> ID LBRACK CTE_I RBRACK LBRACK CTE_I RBRACK .)
    SCOLON          reduce using rule 15 (idDeclare -> ID LBRACK CTE_I RBRACK LBRACK CTE_I RBRACK .)


state 120

    (24) declarMethods -> tipoMethod FUNC ID LPAREN . listaParam RPAREN LBRACE listaEstatutos RBRACE declarMethods
    (30) listaParam -> . param
    (31) listaParam -> . param COMMA listaParam
    (32) listaParam -> . empty
    (33) param -> . tipo COLON ID
    (94) empty -> .
    (20) tipo -> . ID
    (21) tipo -> . INT
    (22) tipo -> . FLOAT
    (23) tipo -> . CHAR

    RPAREN          reduce using rule 94 (empty -> .)
    ID              shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    CHAR            shift and go to state 24

    listaParam                     shift and go to state 150
    param                          shift and go to state 58
    empty                          shift and go to state 59
    tipo                           shift and go to state 60

state 121

    (50) llamada -> ID DOT ID . LPAREN enviaParam RPAREN
    (17) idCall -> ID DOT ID .

    LPAREN          shift and go to state 151
    ASIGNA          reduce using rule 17 (idCall -> ID DOT ID .)
    MULT            reduce using rule 17 (idCall -> ID DOT ID .)
    DIV             reduce using rule 17 (idCall -> ID DOT ID .)
    PLUS            reduce using rule 17 (idCall -> ID DOT ID .)
    MINUS           reduce using rule 17 (idCall -> ID DOT ID .)
    LT              reduce using rule 17 (idCall -> ID DOT ID .)
    GT              reduce using rule 17 (idCall -> ID DOT ID .)
    LTE             reduce using rule 17 (idCall -> ID DOT ID .)
    GTE             reduce using rule 17 (idCall -> ID DOT ID .)
    EQUALS          reduce using rule 17 (idCall -> ID DOT ID .)
    NEQUALS         reduce using rule 17 (idCall -> ID DOT ID .)
    AND             reduce using rule 17 (idCall -> ID DOT ID .)
    OR              reduce using rule 17 (idCall -> ID DOT ID .)
    COMMA           reduce using rule 17 (idCall -> ID DOT ID .)
    RPAREN          reduce using rule 17 (idCall -> ID DOT ID .)
    RBRACK          reduce using rule 17 (idCall -> ID DOT ID .)
    SCOLON          reduce using rule 17 (idCall -> ID DOT ID .)
    TO              reduce using rule 17 (idCall -> ID DOT ID .)
    DO              reduce using rule 17 (idCall -> ID DOT ID .)


state 122

    (86) f -> LPAREN . addFF exp RPAREN rmFF
    (92) addFF -> .

    LPAREN          reduce using rule 92 (addFF -> .)
    CTE_I           reduce using rule 92 (addFF -> .)
    CTE_F           reduce using rule 92 (addFF -> .)
    CTE_C           reduce using rule 92 (addFF -> .)
    ID              reduce using rule 92 (addFF -> .)

    addFF                          shift and go to state 152

state 123

    (51) llamada -> ID LPAREN enviaParam . RPAREN

    RPAREN          shift and go to state 153


state 124

    (52) enviaParam -> paramReferencia .

    RPAREN          reduce using rule 52 (enviaParam -> paramReferencia .)


state 125

    (53) enviaParam -> empty .

    RPAREN          reduce using rule 53 (enviaParam -> empty .)


state 126

    (54) paramReferencia -> exp .
    (55) paramReferencia -> exp . COMMA paramReferencia

    RPAREN          reduce using rule 54 (paramReferencia -> exp .)
    COMMA           shift and go to state 154


state 127

    (69) exp -> texp .
    (70) exp -> texp . OR exp

    COMMA           reduce using rule 69 (exp -> texp .)
    RPAREN          reduce using rule 69 (exp -> texp .)
    RBRACK          reduce using rule 69 (exp -> texp .)
    SCOLON          reduce using rule 69 (exp -> texp .)
    TO              reduce using rule 69 (exp -> texp .)
    DO              reduce using rule 69 (exp -> texp .)
    OR              shift and go to state 155


state 128

    (71) texp -> gexp .
    (72) texp -> gexp . AND texp

    OR              reduce using rule 71 (texp -> gexp .)
    COMMA           reduce using rule 71 (texp -> gexp .)
    RPAREN          reduce using rule 71 (texp -> gexp .)
    RBRACK          reduce using rule 71 (texp -> gexp .)
    SCOLON          reduce using rule 71 (texp -> gexp .)
    TO              reduce using rule 71 (texp -> gexp .)
    DO              reduce using rule 71 (texp -> gexp .)
    AND             shift and go to state 156


state 129

    (73) gexp -> mexp .
    (74) gexp -> mexp . LT mexp
    (75) gexp -> mexp . GT mexp
    (76) gexp -> mexp . LTE mexp
    (77) gexp -> mexp . GTE mexp
    (78) gexp -> mexp . EQUALS mexp
    (79) gexp -> mexp . NEQUALS mexp

    AND             reduce using rule 73 (gexp -> mexp .)
    OR              reduce using rule 73 (gexp -> mexp .)
    COMMA           reduce using rule 73 (gexp -> mexp .)
    RPAREN          reduce using rule 73 (gexp -> mexp .)
    RBRACK          reduce using rule 73 (gexp -> mexp .)
    SCOLON          reduce using rule 73 (gexp -> mexp .)
    TO              reduce using rule 73 (gexp -> mexp .)
    DO              reduce using rule 73 (gexp -> mexp .)
    LT              shift and go to state 157
    GT              shift and go to state 158
    LTE             shift and go to state 159
    GTE             shift and go to state 160
    EQUALS          shift and go to state 161
    NEQUALS         shift and go to state 162


state 130

    (80) mexp -> t .
    (81) mexp -> t . PLUS mexp
    (82) mexp -> t . MINUS mexp

    LT              reduce using rule 80 (mexp -> t .)
    GT              reduce using rule 80 (mexp -> t .)
    LTE             reduce using rule 80 (mexp -> t .)
    GTE             reduce using rule 80 (mexp -> t .)
    EQUALS          reduce using rule 80 (mexp -> t .)
    NEQUALS         reduce using rule 80 (mexp -> t .)
    AND             reduce using rule 80 (mexp -> t .)
    OR              reduce using rule 80 (mexp -> t .)
    COMMA           reduce using rule 80 (mexp -> t .)
    RPAREN          reduce using rule 80 (mexp -> t .)
    RBRACK          reduce using rule 80 (mexp -> t .)
    SCOLON          reduce using rule 80 (mexp -> t .)
    TO              reduce using rule 80 (mexp -> t .)
    DO              reduce using rule 80 (mexp -> t .)
    PLUS            shift and go to state 163
    MINUS           shift and go to state 164


state 131

    (83) t -> f .
    (84) t -> f . MULT t
    (85) t -> f . DIV t

    PLUS            reduce using rule 83 (t -> f .)
    MINUS           reduce using rule 83 (t -> f .)
    LT              reduce using rule 83 (t -> f .)
    GT              reduce using rule 83 (t -> f .)
    LTE             reduce using rule 83 (t -> f .)
    GTE             reduce using rule 83 (t -> f .)
    EQUALS          reduce using rule 83 (t -> f .)
    NEQUALS         reduce using rule 83 (t -> f .)
    AND             reduce using rule 83 (t -> f .)
    OR              reduce using rule 83 (t -> f .)
    COMMA           reduce using rule 83 (t -> f .)
    RPAREN          reduce using rule 83 (t -> f .)
    RBRACK          reduce using rule 83 (t -> f .)
    SCOLON          reduce using rule 83 (t -> f .)
    TO              reduce using rule 83 (t -> f .)
    DO              reduce using rule 83 (t -> f .)
    MULT            shift and go to state 165
    DIV             shift and go to state 166


state 132

    (87) f -> CTE_I .

    MULT            reduce using rule 87 (f -> CTE_I .)
    DIV             reduce using rule 87 (f -> CTE_I .)
    PLUS            reduce using rule 87 (f -> CTE_I .)
    MINUS           reduce using rule 87 (f -> CTE_I .)
    LT              reduce using rule 87 (f -> CTE_I .)
    GT              reduce using rule 87 (f -> CTE_I .)
    LTE             reduce using rule 87 (f -> CTE_I .)
    GTE             reduce using rule 87 (f -> CTE_I .)
    EQUALS          reduce using rule 87 (f -> CTE_I .)
    NEQUALS         reduce using rule 87 (f -> CTE_I .)
    AND             reduce using rule 87 (f -> CTE_I .)
    OR              reduce using rule 87 (f -> CTE_I .)
    COMMA           reduce using rule 87 (f -> CTE_I .)
    RPAREN          reduce using rule 87 (f -> CTE_I .)
    RBRACK          reduce using rule 87 (f -> CTE_I .)
    SCOLON          reduce using rule 87 (f -> CTE_I .)
    TO              reduce using rule 87 (f -> CTE_I .)
    DO              reduce using rule 87 (f -> CTE_I .)


state 133

    (88) f -> CTE_F .

    MULT            reduce using rule 88 (f -> CTE_F .)
    DIV             reduce using rule 88 (f -> CTE_F .)
    PLUS            reduce using rule 88 (f -> CTE_F .)
    MINUS           reduce using rule 88 (f -> CTE_F .)
    LT              reduce using rule 88 (f -> CTE_F .)
    GT              reduce using rule 88 (f -> CTE_F .)
    LTE             reduce using rule 88 (f -> CTE_F .)
    GTE             reduce using rule 88 (f -> CTE_F .)
    EQUALS          reduce using rule 88 (f -> CTE_F .)
    NEQUALS         reduce using rule 88 (f -> CTE_F .)
    AND             reduce using rule 88 (f -> CTE_F .)
    OR              reduce using rule 88 (f -> CTE_F .)
    COMMA           reduce using rule 88 (f -> CTE_F .)
    RPAREN          reduce using rule 88 (f -> CTE_F .)
    RBRACK          reduce using rule 88 (f -> CTE_F .)
    SCOLON          reduce using rule 88 (f -> CTE_F .)
    TO              reduce using rule 88 (f -> CTE_F .)
    DO              reduce using rule 88 (f -> CTE_F .)


state 134

    (89) f -> CTE_C .

    MULT            reduce using rule 89 (f -> CTE_C .)
    DIV             reduce using rule 89 (f -> CTE_C .)
    PLUS            reduce using rule 89 (f -> CTE_C .)
    MINUS           reduce using rule 89 (f -> CTE_C .)
    LT              reduce using rule 89 (f -> CTE_C .)
    GT              reduce using rule 89 (f -> CTE_C .)
    LTE             reduce using rule 89 (f -> CTE_C .)
    GTE             reduce using rule 89 (f -> CTE_C .)
    EQUALS          reduce using rule 89 (f -> CTE_C .)
    NEQUALS         reduce using rule 89 (f -> CTE_C .)
    AND             reduce using rule 89 (f -> CTE_C .)
    OR              reduce using rule 89 (f -> CTE_C .)
    COMMA           reduce using rule 89 (f -> CTE_C .)
    RPAREN          reduce using rule 89 (f -> CTE_C .)
    RBRACK          reduce using rule 89 (f -> CTE_C .)
    SCOLON          reduce using rule 89 (f -> CTE_C .)
    TO              reduce using rule 89 (f -> CTE_C .)
    DO              reduce using rule 89 (f -> CTE_C .)


state 135

    (90) f -> llamada .

    MULT            reduce using rule 90 (f -> llamada .)
    DIV             reduce using rule 90 (f -> llamada .)
    PLUS            reduce using rule 90 (f -> llamada .)
    MINUS           reduce using rule 90 (f -> llamada .)
    LT              reduce using rule 90 (f -> llamada .)
    GT              reduce using rule 90 (f -> llamada .)
    LTE             reduce using rule 90 (f -> llamada .)
    GTE             reduce using rule 90 (f -> llamada .)
    EQUALS          reduce using rule 90 (f -> llamada .)
    NEQUALS         reduce using rule 90 (f -> llamada .)
    AND             reduce using rule 90 (f -> llamada .)
    OR              reduce using rule 90 (f -> llamada .)
    COMMA           reduce using rule 90 (f -> llamada .)
    RPAREN          reduce using rule 90 (f -> llamada .)
    RBRACK          reduce using rule 90 (f -> llamada .)
    SCOLON          reduce using rule 90 (f -> llamada .)
    TO              reduce using rule 90 (f -> llamada .)
    DO              reduce using rule 90 (f -> llamada .)


state 136

    (91) f -> idCall .

    MULT            reduce using rule 91 (f -> idCall .)
    DIV             reduce using rule 91 (f -> idCall .)
    PLUS            reduce using rule 91 (f -> idCall .)
    MINUS           reduce using rule 91 (f -> idCall .)
    LT              reduce using rule 91 (f -> idCall .)
    GT              reduce using rule 91 (f -> idCall .)
    LTE             reduce using rule 91 (f -> idCall .)
    GTE             reduce using rule 91 (f -> idCall .)
    EQUALS          reduce using rule 91 (f -> idCall .)
    NEQUALS         reduce using rule 91 (f -> idCall .)
    AND             reduce using rule 91 (f -> idCall .)
    OR              reduce using rule 91 (f -> idCall .)
    COMMA           reduce using rule 91 (f -> idCall .)
    RPAREN          reduce using rule 91 (f -> idCall .)
    RBRACK          reduce using rule 91 (f -> idCall .)
    SCOLON          reduce using rule 91 (f -> idCall .)
    TO              reduce using rule 91 (f -> idCall .)
    DO              reduce using rule 91 (f -> idCall .)


state 137

    (18) idCall -> ID LBRACK exp . RBRACK
    (19) idCall -> ID LBRACK exp . RBRACK LBRACK exp RBRACK

    RBRACK          shift and go to state 167


state 138

    (1) program -> PROGRAM ID initProg SCOLON declarClases declarVar definFunc MAIN auxMain LPAREN RPAREN declarVar LBRACE listaEstatutos RBRACE prueba .

    $end            reduce using rule 1 (program -> PROGRAM ID initProg SCOLON declarClases declarVar definFunc MAIN auxMain LPAREN RPAREN declarVar LBRACE listaEstatutos RBRACE prueba .)


state 139

    (49) asignacion -> idCall ASIGNA exp .

    SCOLON          reduce using rule 49 (asignacion -> idCall ASIGNA exp .)


state 140

    (56) returnf -> RETURN LPAREN exp . RPAREN

    RPAREN          shift and go to state 168


state 141

    (57) lectura -> READ LPAREN listaId . RPAREN

    RPAREN          shift and go to state 169


state 142

    (58) listaId -> idCall .
    (59) listaId -> idCall . COMMA listaId

    RPAREN          reduce using rule 58 (listaId -> idCall .)
    COMMA           shift and go to state 170


state 143

    (60) escritura -> WRITE LPAREN exp . lextra RPAREN
    (62) lextra -> . COMMA exp lextra
    (63) lextra -> . COMMA LETRERO lextra
    (64) lextra -> . empty
    (94) empty -> .

    COMMA           shift and go to state 172
    RPAREN          reduce using rule 94 (empty -> .)

    lextra                         shift and go to state 171
    empty                          shift and go to state 173

state 144

    (61) escritura -> WRITE LPAREN LETRERO . lextra RPAREN
    (62) lextra -> . COMMA exp lextra
    (63) lextra -> . COMMA LETRERO lextra
    (64) lextra -> . empty
    (94) empty -> .

    COMMA           shift and go to state 172
    RPAREN          reduce using rule 94 (empty -> .)

    lextra                         shift and go to state 174
    empty                          shift and go to state 173

state 145

    (65) condicion -> IF LPAREN exp . RPAREN THEN LBRACE listaEstatutos RBRACE
    (66) condicion -> IF LPAREN exp . RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE

    RPAREN          shift and go to state 175


state 146

    (67) cond_w -> WHILE LPAREN exp . RPAREN DO LBRACE listaEstatutos RBRACE

    RPAREN          shift and go to state 176


state 147

    (68) cond_f -> FOR idCall ASIGNA . exp TO exp DO LBRACE listaEstatutos RBRACE
    (69) exp -> . texp
    (70) exp -> . texp OR exp
    (71) texp -> . gexp
    (72) texp -> . gexp AND texp
    (73) gexp -> . mexp
    (74) gexp -> . mexp LT mexp
    (75) gexp -> . mexp GT mexp
    (76) gexp -> . mexp LTE mexp
    (77) gexp -> . mexp GTE mexp
    (78) gexp -> . mexp EQUALS mexp
    (79) gexp -> . mexp NEQUALS mexp
    (80) mexp -> . t
    (81) mexp -> . t PLUS mexp
    (82) mexp -> . t MINUS mexp
    (83) t -> . f
    (84) t -> . f MULT t
    (85) t -> . f DIV t
    (86) f -> . LPAREN addFF exp RPAREN rmFF
    (87) f -> . CTE_I
    (88) f -> . CTE_F
    (89) f -> . CTE_C
    (90) f -> . llamada
    (91) f -> . idCall
    (50) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (51) llamada -> . ID LPAREN enviaParam RPAREN
    (16) idCall -> . ID
    (17) idCall -> . ID DOT ID
    (18) idCall -> . ID LBRACK exp RBRACK
    (19) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 122
    CTE_I           shift and go to state 132
    CTE_F           shift and go to state 133
    CTE_C           shift and go to state 134
    ID              shift and go to state 74

    idCall                         shift and go to state 136
    exp                            shift and go to state 177
    texp                           shift and go to state 127
    gexp                           shift and go to state 128
    mexp                           shift and go to state 129
    t                              shift and go to state 130
    f                              shift and go to state 131
    llamada                        shift and go to state 135

state 148

    (17) idCall -> ID DOT . ID

    ID              shift and go to state 178


state 149

    (36) definFunc -> tipoMethod FUNC ID auxFuncion LPAREN listaParam RPAREN declarVar LBRACE listaEstatutos . RBRACE definFunc

    RBRACE          shift and go to state 179


state 150

    (24) declarMethods -> tipoMethod FUNC ID LPAREN listaParam . RPAREN LBRACE listaEstatutos RBRACE declarMethods

    RPAREN          shift and go to state 180


state 151

    (50) llamada -> ID DOT ID LPAREN . enviaParam RPAREN
    (52) enviaParam -> . paramReferencia
    (53) enviaParam -> . empty
    (54) paramReferencia -> . exp
    (55) paramReferencia -> . exp COMMA paramReferencia
    (94) empty -> .
    (69) exp -> . texp
    (70) exp -> . texp OR exp
    (71) texp -> . gexp
    (72) texp -> . gexp AND texp
    (73) gexp -> . mexp
    (74) gexp -> . mexp LT mexp
    (75) gexp -> . mexp GT mexp
    (76) gexp -> . mexp LTE mexp
    (77) gexp -> . mexp GTE mexp
    (78) gexp -> . mexp EQUALS mexp
    (79) gexp -> . mexp NEQUALS mexp
    (80) mexp -> . t
    (81) mexp -> . t PLUS mexp
    (82) mexp -> . t MINUS mexp
    (83) t -> . f
    (84) t -> . f MULT t
    (85) t -> . f DIV t
    (86) f -> . LPAREN addFF exp RPAREN rmFF
    (87) f -> . CTE_I
    (88) f -> . CTE_F
    (89) f -> . CTE_C
    (90) f -> . llamada
    (91) f -> . idCall
    (50) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (51) llamada -> . ID LPAREN enviaParam RPAREN
    (16) idCall -> . ID
    (17) idCall -> . ID DOT ID
    (18) idCall -> . ID LBRACK exp RBRACK
    (19) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    RPAREN          reduce using rule 94 (empty -> .)
    LPAREN          shift and go to state 122
    CTE_I           shift and go to state 132
    CTE_F           shift and go to state 133
    CTE_C           shift and go to state 134
    ID              shift and go to state 74

    enviaParam                     shift and go to state 181
    paramReferencia                shift and go to state 124
    empty                          shift and go to state 125
    exp                            shift and go to state 126
    texp                           shift and go to state 127
    gexp                           shift and go to state 128
    mexp                           shift and go to state 129
    t                              shift and go to state 130
    f                              shift and go to state 131
    llamada                        shift and go to state 135
    idCall                         shift and go to state 136

state 152

    (86) f -> LPAREN addFF . exp RPAREN rmFF
    (69) exp -> . texp
    (70) exp -> . texp OR exp
    (71) texp -> . gexp
    (72) texp -> . gexp AND texp
    (73) gexp -> . mexp
    (74) gexp -> . mexp LT mexp
    (75) gexp -> . mexp GT mexp
    (76) gexp -> . mexp LTE mexp
    (77) gexp -> . mexp GTE mexp
    (78) gexp -> . mexp EQUALS mexp
    (79) gexp -> . mexp NEQUALS mexp
    (80) mexp -> . t
    (81) mexp -> . t PLUS mexp
    (82) mexp -> . t MINUS mexp
    (83) t -> . f
    (84) t -> . f MULT t
    (85) t -> . f DIV t
    (86) f -> . LPAREN addFF exp RPAREN rmFF
    (87) f -> . CTE_I
    (88) f -> . CTE_F
    (89) f -> . CTE_C
    (90) f -> . llamada
    (91) f -> . idCall
    (50) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (51) llamada -> . ID LPAREN enviaParam RPAREN
    (16) idCall -> . ID
    (17) idCall -> . ID DOT ID
    (18) idCall -> . ID LBRACK exp RBRACK
    (19) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 122
    CTE_I           shift and go to state 132
    CTE_F           shift and go to state 133
    CTE_C           shift and go to state 134
    ID              shift and go to state 74

    exp                            shift and go to state 182
    texp                           shift and go to state 127
    gexp                           shift and go to state 128
    mexp                           shift and go to state 129
    t                              shift and go to state 130
    f                              shift and go to state 131
    llamada                        shift and go to state 135
    idCall                         shift and go to state 136

state 153

    (51) llamada -> ID LPAREN enviaParam RPAREN .

    SCOLON          reduce using rule 51 (llamada -> ID LPAREN enviaParam RPAREN .)
    MULT            reduce using rule 51 (llamada -> ID LPAREN enviaParam RPAREN .)
    DIV             reduce using rule 51 (llamada -> ID LPAREN enviaParam RPAREN .)
    PLUS            reduce using rule 51 (llamada -> ID LPAREN enviaParam RPAREN .)
    MINUS           reduce using rule 51 (llamada -> ID LPAREN enviaParam RPAREN .)
    LT              reduce using rule 51 (llamada -> ID LPAREN enviaParam RPAREN .)
    GT              reduce using rule 51 (llamada -> ID LPAREN enviaParam RPAREN .)
    LTE             reduce using rule 51 (llamada -> ID LPAREN enviaParam RPAREN .)
    GTE             reduce using rule 51 (llamada -> ID LPAREN enviaParam RPAREN .)
    EQUALS          reduce using rule 51 (llamada -> ID LPAREN enviaParam RPAREN .)
    NEQUALS         reduce using rule 51 (llamada -> ID LPAREN enviaParam RPAREN .)
    AND             reduce using rule 51 (llamada -> ID LPAREN enviaParam RPAREN .)
    OR              reduce using rule 51 (llamada -> ID LPAREN enviaParam RPAREN .)
    COMMA           reduce using rule 51 (llamada -> ID LPAREN enviaParam RPAREN .)
    RPAREN          reduce using rule 51 (llamada -> ID LPAREN enviaParam RPAREN .)
    RBRACK          reduce using rule 51 (llamada -> ID LPAREN enviaParam RPAREN .)
    TO              reduce using rule 51 (llamada -> ID LPAREN enviaParam RPAREN .)
    DO              reduce using rule 51 (llamada -> ID LPAREN enviaParam RPAREN .)


state 154

    (55) paramReferencia -> exp COMMA . paramReferencia
    (54) paramReferencia -> . exp
    (55) paramReferencia -> . exp COMMA paramReferencia
    (69) exp -> . texp
    (70) exp -> . texp OR exp
    (71) texp -> . gexp
    (72) texp -> . gexp AND texp
    (73) gexp -> . mexp
    (74) gexp -> . mexp LT mexp
    (75) gexp -> . mexp GT mexp
    (76) gexp -> . mexp LTE mexp
    (77) gexp -> . mexp GTE mexp
    (78) gexp -> . mexp EQUALS mexp
    (79) gexp -> . mexp NEQUALS mexp
    (80) mexp -> . t
    (81) mexp -> . t PLUS mexp
    (82) mexp -> . t MINUS mexp
    (83) t -> . f
    (84) t -> . f MULT t
    (85) t -> . f DIV t
    (86) f -> . LPAREN addFF exp RPAREN rmFF
    (87) f -> . CTE_I
    (88) f -> . CTE_F
    (89) f -> . CTE_C
    (90) f -> . llamada
    (91) f -> . idCall
    (50) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (51) llamada -> . ID LPAREN enviaParam RPAREN
    (16) idCall -> . ID
    (17) idCall -> . ID DOT ID
    (18) idCall -> . ID LBRACK exp RBRACK
    (19) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 122
    CTE_I           shift and go to state 132
    CTE_F           shift and go to state 133
    CTE_C           shift and go to state 134
    ID              shift and go to state 74

    exp                            shift and go to state 126
    paramReferencia                shift and go to state 183
    texp                           shift and go to state 127
    gexp                           shift and go to state 128
    mexp                           shift and go to state 129
    t                              shift and go to state 130
    f                              shift and go to state 131
    llamada                        shift and go to state 135
    idCall                         shift and go to state 136

state 155

    (70) exp -> texp OR . exp
    (69) exp -> . texp
    (70) exp -> . texp OR exp
    (71) texp -> . gexp
    (72) texp -> . gexp AND texp
    (73) gexp -> . mexp
    (74) gexp -> . mexp LT mexp
    (75) gexp -> . mexp GT mexp
    (76) gexp -> . mexp LTE mexp
    (77) gexp -> . mexp GTE mexp
    (78) gexp -> . mexp EQUALS mexp
    (79) gexp -> . mexp NEQUALS mexp
    (80) mexp -> . t
    (81) mexp -> . t PLUS mexp
    (82) mexp -> . t MINUS mexp
    (83) t -> . f
    (84) t -> . f MULT t
    (85) t -> . f DIV t
    (86) f -> . LPAREN addFF exp RPAREN rmFF
    (87) f -> . CTE_I
    (88) f -> . CTE_F
    (89) f -> . CTE_C
    (90) f -> . llamada
    (91) f -> . idCall
    (50) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (51) llamada -> . ID LPAREN enviaParam RPAREN
    (16) idCall -> . ID
    (17) idCall -> . ID DOT ID
    (18) idCall -> . ID LBRACK exp RBRACK
    (19) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 122
    CTE_I           shift and go to state 132
    CTE_F           shift and go to state 133
    CTE_C           shift and go to state 134
    ID              shift and go to state 74

    texp                           shift and go to state 127
    exp                            shift and go to state 184
    gexp                           shift and go to state 128
    mexp                           shift and go to state 129
    t                              shift and go to state 130
    f                              shift and go to state 131
    llamada                        shift and go to state 135
    idCall                         shift and go to state 136

state 156

    (72) texp -> gexp AND . texp
    (71) texp -> . gexp
    (72) texp -> . gexp AND texp
    (73) gexp -> . mexp
    (74) gexp -> . mexp LT mexp
    (75) gexp -> . mexp GT mexp
    (76) gexp -> . mexp LTE mexp
    (77) gexp -> . mexp GTE mexp
    (78) gexp -> . mexp EQUALS mexp
    (79) gexp -> . mexp NEQUALS mexp
    (80) mexp -> . t
    (81) mexp -> . t PLUS mexp
    (82) mexp -> . t MINUS mexp
    (83) t -> . f
    (84) t -> . f MULT t
    (85) t -> . f DIV t
    (86) f -> . LPAREN addFF exp RPAREN rmFF
    (87) f -> . CTE_I
    (88) f -> . CTE_F
    (89) f -> . CTE_C
    (90) f -> . llamada
    (91) f -> . idCall
    (50) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (51) llamada -> . ID LPAREN enviaParam RPAREN
    (16) idCall -> . ID
    (17) idCall -> . ID DOT ID
    (18) idCall -> . ID LBRACK exp RBRACK
    (19) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 122
    CTE_I           shift and go to state 132
    CTE_F           shift and go to state 133
    CTE_C           shift and go to state 134
    ID              shift and go to state 74

    gexp                           shift and go to state 128
    texp                           shift and go to state 185
    mexp                           shift and go to state 129
    t                              shift and go to state 130
    f                              shift and go to state 131
    llamada                        shift and go to state 135
    idCall                         shift and go to state 136

state 157

    (74) gexp -> mexp LT . mexp
    (80) mexp -> . t
    (81) mexp -> . t PLUS mexp
    (82) mexp -> . t MINUS mexp
    (83) t -> . f
    (84) t -> . f MULT t
    (85) t -> . f DIV t
    (86) f -> . LPAREN addFF exp RPAREN rmFF
    (87) f -> . CTE_I
    (88) f -> . CTE_F
    (89) f -> . CTE_C
    (90) f -> . llamada
    (91) f -> . idCall
    (50) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (51) llamada -> . ID LPAREN enviaParam RPAREN
    (16) idCall -> . ID
    (17) idCall -> . ID DOT ID
    (18) idCall -> . ID LBRACK exp RBRACK
    (19) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 122
    CTE_I           shift and go to state 132
    CTE_F           shift and go to state 133
    CTE_C           shift and go to state 134
    ID              shift and go to state 74

    mexp                           shift and go to state 186
    t                              shift and go to state 130
    f                              shift and go to state 131
    llamada                        shift and go to state 135
    idCall                         shift and go to state 136

state 158

    (75) gexp -> mexp GT . mexp
    (80) mexp -> . t
    (81) mexp -> . t PLUS mexp
    (82) mexp -> . t MINUS mexp
    (83) t -> . f
    (84) t -> . f MULT t
    (85) t -> . f DIV t
    (86) f -> . LPAREN addFF exp RPAREN rmFF
    (87) f -> . CTE_I
    (88) f -> . CTE_F
    (89) f -> . CTE_C
    (90) f -> . llamada
    (91) f -> . idCall
    (50) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (51) llamada -> . ID LPAREN enviaParam RPAREN
    (16) idCall -> . ID
    (17) idCall -> . ID DOT ID
    (18) idCall -> . ID LBRACK exp RBRACK
    (19) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 122
    CTE_I           shift and go to state 132
    CTE_F           shift and go to state 133
    CTE_C           shift and go to state 134
    ID              shift and go to state 74

    mexp                           shift and go to state 187
    t                              shift and go to state 130
    f                              shift and go to state 131
    llamada                        shift and go to state 135
    idCall                         shift and go to state 136

state 159

    (76) gexp -> mexp LTE . mexp
    (80) mexp -> . t
    (81) mexp -> . t PLUS mexp
    (82) mexp -> . t MINUS mexp
    (83) t -> . f
    (84) t -> . f MULT t
    (85) t -> . f DIV t
    (86) f -> . LPAREN addFF exp RPAREN rmFF
    (87) f -> . CTE_I
    (88) f -> . CTE_F
    (89) f -> . CTE_C
    (90) f -> . llamada
    (91) f -> . idCall
    (50) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (51) llamada -> . ID LPAREN enviaParam RPAREN
    (16) idCall -> . ID
    (17) idCall -> . ID DOT ID
    (18) idCall -> . ID LBRACK exp RBRACK
    (19) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 122
    CTE_I           shift and go to state 132
    CTE_F           shift and go to state 133
    CTE_C           shift and go to state 134
    ID              shift and go to state 74

    mexp                           shift and go to state 188
    t                              shift and go to state 130
    f                              shift and go to state 131
    llamada                        shift and go to state 135
    idCall                         shift and go to state 136

state 160

    (77) gexp -> mexp GTE . mexp
    (80) mexp -> . t
    (81) mexp -> . t PLUS mexp
    (82) mexp -> . t MINUS mexp
    (83) t -> . f
    (84) t -> . f MULT t
    (85) t -> . f DIV t
    (86) f -> . LPAREN addFF exp RPAREN rmFF
    (87) f -> . CTE_I
    (88) f -> . CTE_F
    (89) f -> . CTE_C
    (90) f -> . llamada
    (91) f -> . idCall
    (50) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (51) llamada -> . ID LPAREN enviaParam RPAREN
    (16) idCall -> . ID
    (17) idCall -> . ID DOT ID
    (18) idCall -> . ID LBRACK exp RBRACK
    (19) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 122
    CTE_I           shift and go to state 132
    CTE_F           shift and go to state 133
    CTE_C           shift and go to state 134
    ID              shift and go to state 74

    mexp                           shift and go to state 189
    t                              shift and go to state 130
    f                              shift and go to state 131
    llamada                        shift and go to state 135
    idCall                         shift and go to state 136

state 161

    (78) gexp -> mexp EQUALS . mexp
    (80) mexp -> . t
    (81) mexp -> . t PLUS mexp
    (82) mexp -> . t MINUS mexp
    (83) t -> . f
    (84) t -> . f MULT t
    (85) t -> . f DIV t
    (86) f -> . LPAREN addFF exp RPAREN rmFF
    (87) f -> . CTE_I
    (88) f -> . CTE_F
    (89) f -> . CTE_C
    (90) f -> . llamada
    (91) f -> . idCall
    (50) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (51) llamada -> . ID LPAREN enviaParam RPAREN
    (16) idCall -> . ID
    (17) idCall -> . ID DOT ID
    (18) idCall -> . ID LBRACK exp RBRACK
    (19) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 122
    CTE_I           shift and go to state 132
    CTE_F           shift and go to state 133
    CTE_C           shift and go to state 134
    ID              shift and go to state 74

    mexp                           shift and go to state 190
    t                              shift and go to state 130
    f                              shift and go to state 131
    llamada                        shift and go to state 135
    idCall                         shift and go to state 136

state 162

    (79) gexp -> mexp NEQUALS . mexp
    (80) mexp -> . t
    (81) mexp -> . t PLUS mexp
    (82) mexp -> . t MINUS mexp
    (83) t -> . f
    (84) t -> . f MULT t
    (85) t -> . f DIV t
    (86) f -> . LPAREN addFF exp RPAREN rmFF
    (87) f -> . CTE_I
    (88) f -> . CTE_F
    (89) f -> . CTE_C
    (90) f -> . llamada
    (91) f -> . idCall
    (50) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (51) llamada -> . ID LPAREN enviaParam RPAREN
    (16) idCall -> . ID
    (17) idCall -> . ID DOT ID
    (18) idCall -> . ID LBRACK exp RBRACK
    (19) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 122
    CTE_I           shift and go to state 132
    CTE_F           shift and go to state 133
    CTE_C           shift and go to state 134
    ID              shift and go to state 74

    mexp                           shift and go to state 191
    t                              shift and go to state 130
    f                              shift and go to state 131
    llamada                        shift and go to state 135
    idCall                         shift and go to state 136

state 163

    (81) mexp -> t PLUS . mexp
    (80) mexp -> . t
    (81) mexp -> . t PLUS mexp
    (82) mexp -> . t MINUS mexp
    (83) t -> . f
    (84) t -> . f MULT t
    (85) t -> . f DIV t
    (86) f -> . LPAREN addFF exp RPAREN rmFF
    (87) f -> . CTE_I
    (88) f -> . CTE_F
    (89) f -> . CTE_C
    (90) f -> . llamada
    (91) f -> . idCall
    (50) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (51) llamada -> . ID LPAREN enviaParam RPAREN
    (16) idCall -> . ID
    (17) idCall -> . ID DOT ID
    (18) idCall -> . ID LBRACK exp RBRACK
    (19) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 122
    CTE_I           shift and go to state 132
    CTE_F           shift and go to state 133
    CTE_C           shift and go to state 134
    ID              shift and go to state 74

    t                              shift and go to state 130
    mexp                           shift and go to state 192
    f                              shift and go to state 131
    llamada                        shift and go to state 135
    idCall                         shift and go to state 136

state 164

    (82) mexp -> t MINUS . mexp
    (80) mexp -> . t
    (81) mexp -> . t PLUS mexp
    (82) mexp -> . t MINUS mexp
    (83) t -> . f
    (84) t -> . f MULT t
    (85) t -> . f DIV t
    (86) f -> . LPAREN addFF exp RPAREN rmFF
    (87) f -> . CTE_I
    (88) f -> . CTE_F
    (89) f -> . CTE_C
    (90) f -> . llamada
    (91) f -> . idCall
    (50) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (51) llamada -> . ID LPAREN enviaParam RPAREN
    (16) idCall -> . ID
    (17) idCall -> . ID DOT ID
    (18) idCall -> . ID LBRACK exp RBRACK
    (19) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 122
    CTE_I           shift and go to state 132
    CTE_F           shift and go to state 133
    CTE_C           shift and go to state 134
    ID              shift and go to state 74

    t                              shift and go to state 130
    mexp                           shift and go to state 193
    f                              shift and go to state 131
    llamada                        shift and go to state 135
    idCall                         shift and go to state 136

state 165

    (84) t -> f MULT . t
    (83) t -> . f
    (84) t -> . f MULT t
    (85) t -> . f DIV t
    (86) f -> . LPAREN addFF exp RPAREN rmFF
    (87) f -> . CTE_I
    (88) f -> . CTE_F
    (89) f -> . CTE_C
    (90) f -> . llamada
    (91) f -> . idCall
    (50) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (51) llamada -> . ID LPAREN enviaParam RPAREN
    (16) idCall -> . ID
    (17) idCall -> . ID DOT ID
    (18) idCall -> . ID LBRACK exp RBRACK
    (19) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 122
    CTE_I           shift and go to state 132
    CTE_F           shift and go to state 133
    CTE_C           shift and go to state 134
    ID              shift and go to state 74

    f                              shift and go to state 131
    t                              shift and go to state 194
    llamada                        shift and go to state 135
    idCall                         shift and go to state 136

state 166

    (85) t -> f DIV . t
    (83) t -> . f
    (84) t -> . f MULT t
    (85) t -> . f DIV t
    (86) f -> . LPAREN addFF exp RPAREN rmFF
    (87) f -> . CTE_I
    (88) f -> . CTE_F
    (89) f -> . CTE_C
    (90) f -> . llamada
    (91) f -> . idCall
    (50) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (51) llamada -> . ID LPAREN enviaParam RPAREN
    (16) idCall -> . ID
    (17) idCall -> . ID DOT ID
    (18) idCall -> . ID LBRACK exp RBRACK
    (19) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 122
    CTE_I           shift and go to state 132
    CTE_F           shift and go to state 133
    CTE_C           shift and go to state 134
    ID              shift and go to state 74

    f                              shift and go to state 131
    t                              shift and go to state 195
    llamada                        shift and go to state 135
    idCall                         shift and go to state 136

state 167

    (18) idCall -> ID LBRACK exp RBRACK .
    (19) idCall -> ID LBRACK exp RBRACK . LBRACK exp RBRACK

    ASIGNA          reduce using rule 18 (idCall -> ID LBRACK exp RBRACK .)
    MULT            reduce using rule 18 (idCall -> ID LBRACK exp RBRACK .)
    DIV             reduce using rule 18 (idCall -> ID LBRACK exp RBRACK .)
    PLUS            reduce using rule 18 (idCall -> ID LBRACK exp RBRACK .)
    MINUS           reduce using rule 18 (idCall -> ID LBRACK exp RBRACK .)
    LT              reduce using rule 18 (idCall -> ID LBRACK exp RBRACK .)
    GT              reduce using rule 18 (idCall -> ID LBRACK exp RBRACK .)
    LTE             reduce using rule 18 (idCall -> ID LBRACK exp RBRACK .)
    GTE             reduce using rule 18 (idCall -> ID LBRACK exp RBRACK .)
    EQUALS          reduce using rule 18 (idCall -> ID LBRACK exp RBRACK .)
    NEQUALS         reduce using rule 18 (idCall -> ID LBRACK exp RBRACK .)
    AND             reduce using rule 18 (idCall -> ID LBRACK exp RBRACK .)
    OR              reduce using rule 18 (idCall -> ID LBRACK exp RBRACK .)
    COMMA           reduce using rule 18 (idCall -> ID LBRACK exp RBRACK .)
    RPAREN          reduce using rule 18 (idCall -> ID LBRACK exp RBRACK .)
    RBRACK          reduce using rule 18 (idCall -> ID LBRACK exp RBRACK .)
    SCOLON          reduce using rule 18 (idCall -> ID LBRACK exp RBRACK .)
    TO              reduce using rule 18 (idCall -> ID LBRACK exp RBRACK .)
    DO              reduce using rule 18 (idCall -> ID LBRACK exp RBRACK .)
    LBRACK          shift and go to state 196


state 168

    (56) returnf -> RETURN LPAREN exp RPAREN .

    SCOLON          reduce using rule 56 (returnf -> RETURN LPAREN exp RPAREN .)


state 169

    (57) lectura -> READ LPAREN listaId RPAREN .

    SCOLON          reduce using rule 57 (lectura -> READ LPAREN listaId RPAREN .)


state 170

    (59) listaId -> idCall COMMA . listaId
    (58) listaId -> . idCall
    (59) listaId -> . idCall COMMA listaId
    (16) idCall -> . ID
    (17) idCall -> . ID DOT ID
    (18) idCall -> . ID LBRACK exp RBRACK
    (19) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    ID              shift and go to state 117

    idCall                         shift and go to state 142
    listaId                        shift and go to state 197

state 171

    (60) escritura -> WRITE LPAREN exp lextra . RPAREN

    RPAREN          shift and go to state 198


state 172

    (62) lextra -> COMMA . exp lextra
    (63) lextra -> COMMA . LETRERO lextra
    (69) exp -> . texp
    (70) exp -> . texp OR exp
    (71) texp -> . gexp
    (72) texp -> . gexp AND texp
    (73) gexp -> . mexp
    (74) gexp -> . mexp LT mexp
    (75) gexp -> . mexp GT mexp
    (76) gexp -> . mexp LTE mexp
    (77) gexp -> . mexp GTE mexp
    (78) gexp -> . mexp EQUALS mexp
    (79) gexp -> . mexp NEQUALS mexp
    (80) mexp -> . t
    (81) mexp -> . t PLUS mexp
    (82) mexp -> . t MINUS mexp
    (83) t -> . f
    (84) t -> . f MULT t
    (85) t -> . f DIV t
    (86) f -> . LPAREN addFF exp RPAREN rmFF
    (87) f -> . CTE_I
    (88) f -> . CTE_F
    (89) f -> . CTE_C
    (90) f -> . llamada
    (91) f -> . idCall
    (50) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (51) llamada -> . ID LPAREN enviaParam RPAREN
    (16) idCall -> . ID
    (17) idCall -> . ID DOT ID
    (18) idCall -> . ID LBRACK exp RBRACK
    (19) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LETRERO         shift and go to state 200
    LPAREN          shift and go to state 122
    CTE_I           shift and go to state 132
    CTE_F           shift and go to state 133
    CTE_C           shift and go to state 134
    ID              shift and go to state 74

    exp                            shift and go to state 199
    texp                           shift and go to state 127
    gexp                           shift and go to state 128
    mexp                           shift and go to state 129
    t                              shift and go to state 130
    f                              shift and go to state 131
    llamada                        shift and go to state 135
    idCall                         shift and go to state 136

state 173

    (64) lextra -> empty .

    RPAREN          reduce using rule 64 (lextra -> empty .)


state 174

    (61) escritura -> WRITE LPAREN LETRERO lextra . RPAREN

    RPAREN          shift and go to state 201


state 175

    (65) condicion -> IF LPAREN exp RPAREN . THEN LBRACE listaEstatutos RBRACE
    (66) condicion -> IF LPAREN exp RPAREN . THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE

    THEN            shift and go to state 202


state 176

    (67) cond_w -> WHILE LPAREN exp RPAREN . DO LBRACE listaEstatutos RBRACE

    DO              shift and go to state 203


state 177

    (68) cond_f -> FOR idCall ASIGNA exp . TO exp DO LBRACE listaEstatutos RBRACE

    TO              shift and go to state 204


state 178

    (17) idCall -> ID DOT ID .

    ASIGNA          reduce using rule 17 (idCall -> ID DOT ID .)
    COMMA           reduce using rule 17 (idCall -> ID DOT ID .)
    RPAREN          reduce using rule 17 (idCall -> ID DOT ID .)


state 179

    (36) definFunc -> tipoMethod FUNC ID auxFuncion LPAREN listaParam RPAREN declarVar LBRACE listaEstatutos RBRACE . definFunc
    (36) definFunc -> . tipoMethod FUNC ID auxFuncion LPAREN listaParam RPAREN declarVar LBRACE listaEstatutos RBRACE definFunc
    (37) definFunc -> . empty
    (26) tipoMethod -> . VOID
    (27) tipoMethod -> . INT
    (28) tipoMethod -> . FLOAT
    (29) tipoMethod -> . CHAR
    (94) empty -> .

    VOID            shift and go to state 16
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 19
    MAIN            reduce using rule 94 (empty -> .)

    tipoMethod                     shift and go to state 14
    definFunc                      shift and go to state 205
    empty                          shift and go to state 15

state 180

    (24) declarMethods -> tipoMethod FUNC ID LPAREN listaParam RPAREN . LBRACE listaEstatutos RBRACE declarMethods

    LBRACE          shift and go to state 206


state 181

    (50) llamada -> ID DOT ID LPAREN enviaParam . RPAREN

    RPAREN          shift and go to state 207


state 182

    (86) f -> LPAREN addFF exp . RPAREN rmFF

    RPAREN          shift and go to state 208


state 183

    (55) paramReferencia -> exp COMMA paramReferencia .

    RPAREN          reduce using rule 55 (paramReferencia -> exp COMMA paramReferencia .)


state 184

    (70) exp -> texp OR exp .

    COMMA           reduce using rule 70 (exp -> texp OR exp .)
    RPAREN          reduce using rule 70 (exp -> texp OR exp .)
    RBRACK          reduce using rule 70 (exp -> texp OR exp .)
    SCOLON          reduce using rule 70 (exp -> texp OR exp .)
    TO              reduce using rule 70 (exp -> texp OR exp .)
    DO              reduce using rule 70 (exp -> texp OR exp .)


state 185

    (72) texp -> gexp AND texp .

    OR              reduce using rule 72 (texp -> gexp AND texp .)
    COMMA           reduce using rule 72 (texp -> gexp AND texp .)
    RPAREN          reduce using rule 72 (texp -> gexp AND texp .)
    RBRACK          reduce using rule 72 (texp -> gexp AND texp .)
    SCOLON          reduce using rule 72 (texp -> gexp AND texp .)
    TO              reduce using rule 72 (texp -> gexp AND texp .)
    DO              reduce using rule 72 (texp -> gexp AND texp .)


state 186

    (74) gexp -> mexp LT mexp .

    AND             reduce using rule 74 (gexp -> mexp LT mexp .)
    OR              reduce using rule 74 (gexp -> mexp LT mexp .)
    COMMA           reduce using rule 74 (gexp -> mexp LT mexp .)
    RPAREN          reduce using rule 74 (gexp -> mexp LT mexp .)
    RBRACK          reduce using rule 74 (gexp -> mexp LT mexp .)
    SCOLON          reduce using rule 74 (gexp -> mexp LT mexp .)
    TO              reduce using rule 74 (gexp -> mexp LT mexp .)
    DO              reduce using rule 74 (gexp -> mexp LT mexp .)


state 187

    (75) gexp -> mexp GT mexp .

    AND             reduce using rule 75 (gexp -> mexp GT mexp .)
    OR              reduce using rule 75 (gexp -> mexp GT mexp .)
    COMMA           reduce using rule 75 (gexp -> mexp GT mexp .)
    RPAREN          reduce using rule 75 (gexp -> mexp GT mexp .)
    RBRACK          reduce using rule 75 (gexp -> mexp GT mexp .)
    SCOLON          reduce using rule 75 (gexp -> mexp GT mexp .)
    TO              reduce using rule 75 (gexp -> mexp GT mexp .)
    DO              reduce using rule 75 (gexp -> mexp GT mexp .)


state 188

    (76) gexp -> mexp LTE mexp .

    AND             reduce using rule 76 (gexp -> mexp LTE mexp .)
    OR              reduce using rule 76 (gexp -> mexp LTE mexp .)
    COMMA           reduce using rule 76 (gexp -> mexp LTE mexp .)
    RPAREN          reduce using rule 76 (gexp -> mexp LTE mexp .)
    RBRACK          reduce using rule 76 (gexp -> mexp LTE mexp .)
    SCOLON          reduce using rule 76 (gexp -> mexp LTE mexp .)
    TO              reduce using rule 76 (gexp -> mexp LTE mexp .)
    DO              reduce using rule 76 (gexp -> mexp LTE mexp .)


state 189

    (77) gexp -> mexp GTE mexp .

    AND             reduce using rule 77 (gexp -> mexp GTE mexp .)
    OR              reduce using rule 77 (gexp -> mexp GTE mexp .)
    COMMA           reduce using rule 77 (gexp -> mexp GTE mexp .)
    RPAREN          reduce using rule 77 (gexp -> mexp GTE mexp .)
    RBRACK          reduce using rule 77 (gexp -> mexp GTE mexp .)
    SCOLON          reduce using rule 77 (gexp -> mexp GTE mexp .)
    TO              reduce using rule 77 (gexp -> mexp GTE mexp .)
    DO              reduce using rule 77 (gexp -> mexp GTE mexp .)


state 190

    (78) gexp -> mexp EQUALS mexp .

    AND             reduce using rule 78 (gexp -> mexp EQUALS mexp .)
    OR              reduce using rule 78 (gexp -> mexp EQUALS mexp .)
    COMMA           reduce using rule 78 (gexp -> mexp EQUALS mexp .)
    RPAREN          reduce using rule 78 (gexp -> mexp EQUALS mexp .)
    RBRACK          reduce using rule 78 (gexp -> mexp EQUALS mexp .)
    SCOLON          reduce using rule 78 (gexp -> mexp EQUALS mexp .)
    TO              reduce using rule 78 (gexp -> mexp EQUALS mexp .)
    DO              reduce using rule 78 (gexp -> mexp EQUALS mexp .)


state 191

    (79) gexp -> mexp NEQUALS mexp .

    AND             reduce using rule 79 (gexp -> mexp NEQUALS mexp .)
    OR              reduce using rule 79 (gexp -> mexp NEQUALS mexp .)
    COMMA           reduce using rule 79 (gexp -> mexp NEQUALS mexp .)
    RPAREN          reduce using rule 79 (gexp -> mexp NEQUALS mexp .)
    RBRACK          reduce using rule 79 (gexp -> mexp NEQUALS mexp .)
    SCOLON          reduce using rule 79 (gexp -> mexp NEQUALS mexp .)
    TO              reduce using rule 79 (gexp -> mexp NEQUALS mexp .)
    DO              reduce using rule 79 (gexp -> mexp NEQUALS mexp .)


state 192

    (81) mexp -> t PLUS mexp .

    LT              reduce using rule 81 (mexp -> t PLUS mexp .)
    GT              reduce using rule 81 (mexp -> t PLUS mexp .)
    LTE             reduce using rule 81 (mexp -> t PLUS mexp .)
    GTE             reduce using rule 81 (mexp -> t PLUS mexp .)
    EQUALS          reduce using rule 81 (mexp -> t PLUS mexp .)
    NEQUALS         reduce using rule 81 (mexp -> t PLUS mexp .)
    AND             reduce using rule 81 (mexp -> t PLUS mexp .)
    OR              reduce using rule 81 (mexp -> t PLUS mexp .)
    COMMA           reduce using rule 81 (mexp -> t PLUS mexp .)
    RPAREN          reduce using rule 81 (mexp -> t PLUS mexp .)
    RBRACK          reduce using rule 81 (mexp -> t PLUS mexp .)
    SCOLON          reduce using rule 81 (mexp -> t PLUS mexp .)
    TO              reduce using rule 81 (mexp -> t PLUS mexp .)
    DO              reduce using rule 81 (mexp -> t PLUS mexp .)


state 193

    (82) mexp -> t MINUS mexp .

    LT              reduce using rule 82 (mexp -> t MINUS mexp .)
    GT              reduce using rule 82 (mexp -> t MINUS mexp .)
    LTE             reduce using rule 82 (mexp -> t MINUS mexp .)
    GTE             reduce using rule 82 (mexp -> t MINUS mexp .)
    EQUALS          reduce using rule 82 (mexp -> t MINUS mexp .)
    NEQUALS         reduce using rule 82 (mexp -> t MINUS mexp .)
    AND             reduce using rule 82 (mexp -> t MINUS mexp .)
    OR              reduce using rule 82 (mexp -> t MINUS mexp .)
    COMMA           reduce using rule 82 (mexp -> t MINUS mexp .)
    RPAREN          reduce using rule 82 (mexp -> t MINUS mexp .)
    RBRACK          reduce using rule 82 (mexp -> t MINUS mexp .)
    SCOLON          reduce using rule 82 (mexp -> t MINUS mexp .)
    TO              reduce using rule 82 (mexp -> t MINUS mexp .)
    DO              reduce using rule 82 (mexp -> t MINUS mexp .)


state 194

    (84) t -> f MULT t .

    PLUS            reduce using rule 84 (t -> f MULT t .)
    MINUS           reduce using rule 84 (t -> f MULT t .)
    LT              reduce using rule 84 (t -> f MULT t .)
    GT              reduce using rule 84 (t -> f MULT t .)
    LTE             reduce using rule 84 (t -> f MULT t .)
    GTE             reduce using rule 84 (t -> f MULT t .)
    EQUALS          reduce using rule 84 (t -> f MULT t .)
    NEQUALS         reduce using rule 84 (t -> f MULT t .)
    AND             reduce using rule 84 (t -> f MULT t .)
    OR              reduce using rule 84 (t -> f MULT t .)
    COMMA           reduce using rule 84 (t -> f MULT t .)
    RPAREN          reduce using rule 84 (t -> f MULT t .)
    RBRACK          reduce using rule 84 (t -> f MULT t .)
    SCOLON          reduce using rule 84 (t -> f MULT t .)
    TO              reduce using rule 84 (t -> f MULT t .)
    DO              reduce using rule 84 (t -> f MULT t .)


state 195

    (85) t -> f DIV t .

    PLUS            reduce using rule 85 (t -> f DIV t .)
    MINUS           reduce using rule 85 (t -> f DIV t .)
    LT              reduce using rule 85 (t -> f DIV t .)
    GT              reduce using rule 85 (t -> f DIV t .)
    LTE             reduce using rule 85 (t -> f DIV t .)
    GTE             reduce using rule 85 (t -> f DIV t .)
    EQUALS          reduce using rule 85 (t -> f DIV t .)
    NEQUALS         reduce using rule 85 (t -> f DIV t .)
    AND             reduce using rule 85 (t -> f DIV t .)
    OR              reduce using rule 85 (t -> f DIV t .)
    COMMA           reduce using rule 85 (t -> f DIV t .)
    RPAREN          reduce using rule 85 (t -> f DIV t .)
    RBRACK          reduce using rule 85 (t -> f DIV t .)
    SCOLON          reduce using rule 85 (t -> f DIV t .)
    TO              reduce using rule 85 (t -> f DIV t .)
    DO              reduce using rule 85 (t -> f DIV t .)


state 196

    (19) idCall -> ID LBRACK exp RBRACK LBRACK . exp RBRACK
    (69) exp -> . texp
    (70) exp -> . texp OR exp
    (71) texp -> . gexp
    (72) texp -> . gexp AND texp
    (73) gexp -> . mexp
    (74) gexp -> . mexp LT mexp
    (75) gexp -> . mexp GT mexp
    (76) gexp -> . mexp LTE mexp
    (77) gexp -> . mexp GTE mexp
    (78) gexp -> . mexp EQUALS mexp
    (79) gexp -> . mexp NEQUALS mexp
    (80) mexp -> . t
    (81) mexp -> . t PLUS mexp
    (82) mexp -> . t MINUS mexp
    (83) t -> . f
    (84) t -> . f MULT t
    (85) t -> . f DIV t
    (86) f -> . LPAREN addFF exp RPAREN rmFF
    (87) f -> . CTE_I
    (88) f -> . CTE_F
    (89) f -> . CTE_C
    (90) f -> . llamada
    (91) f -> . idCall
    (50) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (51) llamada -> . ID LPAREN enviaParam RPAREN
    (16) idCall -> . ID
    (17) idCall -> . ID DOT ID
    (18) idCall -> . ID LBRACK exp RBRACK
    (19) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 122
    CTE_I           shift and go to state 132
    CTE_F           shift and go to state 133
    CTE_C           shift and go to state 134
    ID              shift and go to state 74

    exp                            shift and go to state 209
    texp                           shift and go to state 127
    gexp                           shift and go to state 128
    mexp                           shift and go to state 129
    t                              shift and go to state 130
    f                              shift and go to state 131
    llamada                        shift and go to state 135
    idCall                         shift and go to state 136

state 197

    (59) listaId -> idCall COMMA listaId .

    RPAREN          reduce using rule 59 (listaId -> idCall COMMA listaId .)


state 198

    (60) escritura -> WRITE LPAREN exp lextra RPAREN .

    SCOLON          reduce using rule 60 (escritura -> WRITE LPAREN exp lextra RPAREN .)


state 199

    (62) lextra -> COMMA exp . lextra
    (62) lextra -> . COMMA exp lextra
    (63) lextra -> . COMMA LETRERO lextra
    (64) lextra -> . empty
    (94) empty -> .

    COMMA           shift and go to state 172
    RPAREN          reduce using rule 94 (empty -> .)

    lextra                         shift and go to state 210
    empty                          shift and go to state 173

state 200

    (63) lextra -> COMMA LETRERO . lextra
    (62) lextra -> . COMMA exp lextra
    (63) lextra -> . COMMA LETRERO lextra
    (64) lextra -> . empty
    (94) empty -> .

    COMMA           shift and go to state 172
    RPAREN          reduce using rule 94 (empty -> .)

    lextra                         shift and go to state 211
    empty                          shift and go to state 173

state 201

    (61) escritura -> WRITE LPAREN LETRERO lextra RPAREN .

    SCOLON          reduce using rule 61 (escritura -> WRITE LPAREN LETRERO lextra RPAREN .)


state 202

    (65) condicion -> IF LPAREN exp RPAREN THEN . LBRACE listaEstatutos RBRACE
    (66) condicion -> IF LPAREN exp RPAREN THEN . LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE

    LBRACE          shift and go to state 212


state 203

    (67) cond_w -> WHILE LPAREN exp RPAREN DO . LBRACE listaEstatutos RBRACE

    LBRACE          shift and go to state 213


state 204

    (68) cond_f -> FOR idCall ASIGNA exp TO . exp DO LBRACE listaEstatutos RBRACE
    (69) exp -> . texp
    (70) exp -> . texp OR exp
    (71) texp -> . gexp
    (72) texp -> . gexp AND texp
    (73) gexp -> . mexp
    (74) gexp -> . mexp LT mexp
    (75) gexp -> . mexp GT mexp
    (76) gexp -> . mexp LTE mexp
    (77) gexp -> . mexp GTE mexp
    (78) gexp -> . mexp EQUALS mexp
    (79) gexp -> . mexp NEQUALS mexp
    (80) mexp -> . t
    (81) mexp -> . t PLUS mexp
    (82) mexp -> . t MINUS mexp
    (83) t -> . f
    (84) t -> . f MULT t
    (85) t -> . f DIV t
    (86) f -> . LPAREN addFF exp RPAREN rmFF
    (87) f -> . CTE_I
    (88) f -> . CTE_F
    (89) f -> . CTE_C
    (90) f -> . llamada
    (91) f -> . idCall
    (50) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (51) llamada -> . ID LPAREN enviaParam RPAREN
    (16) idCall -> . ID
    (17) idCall -> . ID DOT ID
    (18) idCall -> . ID LBRACK exp RBRACK
    (19) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 122
    CTE_I           shift and go to state 132
    CTE_F           shift and go to state 133
    CTE_C           shift and go to state 134
    ID              shift and go to state 74

    idCall                         shift and go to state 136
    exp                            shift and go to state 214
    texp                           shift and go to state 127
    gexp                           shift and go to state 128
    mexp                           shift and go to state 129
    t                              shift and go to state 130
    f                              shift and go to state 131
    llamada                        shift and go to state 135

state 205

    (36) definFunc -> tipoMethod FUNC ID auxFuncion LPAREN listaParam RPAREN declarVar LBRACE listaEstatutos RBRACE definFunc .

    MAIN            reduce using rule 36 (definFunc -> tipoMethod FUNC ID auxFuncion LPAREN listaParam RPAREN declarVar LBRACE listaEstatutos RBRACE definFunc .)


state 206

    (24) declarMethods -> tipoMethod FUNC ID LPAREN listaParam RPAREN LBRACE . listaEstatutos RBRACE declarMethods
    (39) listaEstatutos -> . estatutos listaEstatutos
    (40) listaEstatutos -> . empty
    (41) estatutos -> . llamada SCOLON
    (42) estatutos -> . asignacion SCOLON
    (43) estatutos -> . returnf SCOLON
    (44) estatutos -> . lectura SCOLON
    (45) estatutos -> . escritura SCOLON
    (46) estatutos -> . condicion
    (47) estatutos -> . cond_w
    (48) estatutos -> . cond_f
    (94) empty -> .
    (50) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (51) llamada -> . ID LPAREN enviaParam RPAREN
    (49) asignacion -> . idCall ASIGNA exp
    (56) returnf -> . RETURN LPAREN exp RPAREN
    (57) lectura -> . READ LPAREN listaId RPAREN
    (60) escritura -> . WRITE LPAREN exp lextra RPAREN
    (61) escritura -> . WRITE LPAREN LETRERO lextra RPAREN
    (65) condicion -> . IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE
    (66) condicion -> . IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE
    (67) cond_w -> . WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE
    (68) cond_f -> . FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE
    (16) idCall -> . ID
    (17) idCall -> . ID DOT ID
    (18) idCall -> . ID LBRACK exp RBRACK
    (19) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    RBRACE          reduce using rule 94 (empty -> .)
    ID              shift and go to state 74
    RETURN          shift and go to state 87
    READ            shift and go to state 88
    WRITE           shift and go to state 89
    IF              shift and go to state 90
    WHILE           shift and go to state 91
    FOR             shift and go to state 92

    listaEstatutos                 shift and go to state 215
    estatutos                      shift and go to state 76
    empty                          shift and go to state 77
    llamada                        shift and go to state 78
    asignacion                     shift and go to state 79
    returnf                        shift and go to state 80
    lectura                        shift and go to state 81
    escritura                      shift and go to state 82
    condicion                      shift and go to state 83
    cond_w                         shift and go to state 84
    cond_f                         shift and go to state 85
    idCall                         shift and go to state 86

state 207

    (50) llamada -> ID DOT ID LPAREN enviaParam RPAREN .

    SCOLON          reduce using rule 50 (llamada -> ID DOT ID LPAREN enviaParam RPAREN .)
    MULT            reduce using rule 50 (llamada -> ID DOT ID LPAREN enviaParam RPAREN .)
    DIV             reduce using rule 50 (llamada -> ID DOT ID LPAREN enviaParam RPAREN .)
    PLUS            reduce using rule 50 (llamada -> ID DOT ID LPAREN enviaParam RPAREN .)
    MINUS           reduce using rule 50 (llamada -> ID DOT ID LPAREN enviaParam RPAREN .)
    LT              reduce using rule 50 (llamada -> ID DOT ID LPAREN enviaParam RPAREN .)
    GT              reduce using rule 50 (llamada -> ID DOT ID LPAREN enviaParam RPAREN .)
    LTE             reduce using rule 50 (llamada -> ID DOT ID LPAREN enviaParam RPAREN .)
    GTE             reduce using rule 50 (llamada -> ID DOT ID LPAREN enviaParam RPAREN .)
    EQUALS          reduce using rule 50 (llamada -> ID DOT ID LPAREN enviaParam RPAREN .)
    NEQUALS         reduce using rule 50 (llamada -> ID DOT ID LPAREN enviaParam RPAREN .)
    AND             reduce using rule 50 (llamada -> ID DOT ID LPAREN enviaParam RPAREN .)
    OR              reduce using rule 50 (llamada -> ID DOT ID LPAREN enviaParam RPAREN .)
    COMMA           reduce using rule 50 (llamada -> ID DOT ID LPAREN enviaParam RPAREN .)
    RPAREN          reduce using rule 50 (llamada -> ID DOT ID LPAREN enviaParam RPAREN .)
    RBRACK          reduce using rule 50 (llamada -> ID DOT ID LPAREN enviaParam RPAREN .)
    TO              reduce using rule 50 (llamada -> ID DOT ID LPAREN enviaParam RPAREN .)
    DO              reduce using rule 50 (llamada -> ID DOT ID LPAREN enviaParam RPAREN .)


state 208

    (86) f -> LPAREN addFF exp RPAREN . rmFF
    (93) rmFF -> .

    MULT            reduce using rule 93 (rmFF -> .)
    DIV             reduce using rule 93 (rmFF -> .)
    PLUS            reduce using rule 93 (rmFF -> .)
    MINUS           reduce using rule 93 (rmFF -> .)
    LT              reduce using rule 93 (rmFF -> .)
    GT              reduce using rule 93 (rmFF -> .)
    LTE             reduce using rule 93 (rmFF -> .)
    GTE             reduce using rule 93 (rmFF -> .)
    EQUALS          reduce using rule 93 (rmFF -> .)
    NEQUALS         reduce using rule 93 (rmFF -> .)
    AND             reduce using rule 93 (rmFF -> .)
    OR              reduce using rule 93 (rmFF -> .)
    COMMA           reduce using rule 93 (rmFF -> .)
    RPAREN          reduce using rule 93 (rmFF -> .)
    RBRACK          reduce using rule 93 (rmFF -> .)
    SCOLON          reduce using rule 93 (rmFF -> .)
    TO              reduce using rule 93 (rmFF -> .)
    DO              reduce using rule 93 (rmFF -> .)

    rmFF                           shift and go to state 216

state 209

    (19) idCall -> ID LBRACK exp RBRACK LBRACK exp . RBRACK

    RBRACK          shift and go to state 217


state 210

    (62) lextra -> COMMA exp lextra .

    RPAREN          reduce using rule 62 (lextra -> COMMA exp lextra .)


state 211

    (63) lextra -> COMMA LETRERO lextra .

    RPAREN          reduce using rule 63 (lextra -> COMMA LETRERO lextra .)


state 212

    (65) condicion -> IF LPAREN exp RPAREN THEN LBRACE . listaEstatutos RBRACE
    (66) condicion -> IF LPAREN exp RPAREN THEN LBRACE . listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE
    (39) listaEstatutos -> . estatutos listaEstatutos
    (40) listaEstatutos -> . empty
    (41) estatutos -> . llamada SCOLON
    (42) estatutos -> . asignacion SCOLON
    (43) estatutos -> . returnf SCOLON
    (44) estatutos -> . lectura SCOLON
    (45) estatutos -> . escritura SCOLON
    (46) estatutos -> . condicion
    (47) estatutos -> . cond_w
    (48) estatutos -> . cond_f
    (94) empty -> .
    (50) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (51) llamada -> . ID LPAREN enviaParam RPAREN
    (49) asignacion -> . idCall ASIGNA exp
    (56) returnf -> . RETURN LPAREN exp RPAREN
    (57) lectura -> . READ LPAREN listaId RPAREN
    (60) escritura -> . WRITE LPAREN exp lextra RPAREN
    (61) escritura -> . WRITE LPAREN LETRERO lextra RPAREN
    (65) condicion -> . IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE
    (66) condicion -> . IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE
    (67) cond_w -> . WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE
    (68) cond_f -> . FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE
    (16) idCall -> . ID
    (17) idCall -> . ID DOT ID
    (18) idCall -> . ID LBRACK exp RBRACK
    (19) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    RBRACE          reduce using rule 94 (empty -> .)
    ID              shift and go to state 74
    RETURN          shift and go to state 87
    READ            shift and go to state 88
    WRITE           shift and go to state 89
    IF              shift and go to state 90
    WHILE           shift and go to state 91
    FOR             shift and go to state 92

    listaEstatutos                 shift and go to state 218
    estatutos                      shift and go to state 76
    empty                          shift and go to state 77
    llamada                        shift and go to state 78
    asignacion                     shift and go to state 79
    returnf                        shift and go to state 80
    lectura                        shift and go to state 81
    escritura                      shift and go to state 82
    condicion                      shift and go to state 83
    cond_w                         shift and go to state 84
    cond_f                         shift and go to state 85
    idCall                         shift and go to state 86

state 213

    (67) cond_w -> WHILE LPAREN exp RPAREN DO LBRACE . listaEstatutos RBRACE
    (39) listaEstatutos -> . estatutos listaEstatutos
    (40) listaEstatutos -> . empty
    (41) estatutos -> . llamada SCOLON
    (42) estatutos -> . asignacion SCOLON
    (43) estatutos -> . returnf SCOLON
    (44) estatutos -> . lectura SCOLON
    (45) estatutos -> . escritura SCOLON
    (46) estatutos -> . condicion
    (47) estatutos -> . cond_w
    (48) estatutos -> . cond_f
    (94) empty -> .
    (50) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (51) llamada -> . ID LPAREN enviaParam RPAREN
    (49) asignacion -> . idCall ASIGNA exp
    (56) returnf -> . RETURN LPAREN exp RPAREN
    (57) lectura -> . READ LPAREN listaId RPAREN
    (60) escritura -> . WRITE LPAREN exp lextra RPAREN
    (61) escritura -> . WRITE LPAREN LETRERO lextra RPAREN
    (65) condicion -> . IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE
    (66) condicion -> . IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE
    (67) cond_w -> . WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE
    (68) cond_f -> . FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE
    (16) idCall -> . ID
    (17) idCall -> . ID DOT ID
    (18) idCall -> . ID LBRACK exp RBRACK
    (19) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    RBRACE          reduce using rule 94 (empty -> .)
    ID              shift and go to state 74
    RETURN          shift and go to state 87
    READ            shift and go to state 88
    WRITE           shift and go to state 89
    IF              shift and go to state 90
    WHILE           shift and go to state 91
    FOR             shift and go to state 92

    listaEstatutos                 shift and go to state 219
    estatutos                      shift and go to state 76
    empty                          shift and go to state 77
    llamada                        shift and go to state 78
    asignacion                     shift and go to state 79
    returnf                        shift and go to state 80
    lectura                        shift and go to state 81
    escritura                      shift and go to state 82
    condicion                      shift and go to state 83
    cond_w                         shift and go to state 84
    cond_f                         shift and go to state 85
    idCall                         shift and go to state 86

state 214

    (68) cond_f -> FOR idCall ASIGNA exp TO exp . DO LBRACE listaEstatutos RBRACE

    DO              shift and go to state 220


state 215

    (24) declarMethods -> tipoMethod FUNC ID LPAREN listaParam RPAREN LBRACE listaEstatutos . RBRACE declarMethods

    RBRACE          shift and go to state 221


state 216

    (86) f -> LPAREN addFF exp RPAREN rmFF .

    MULT            reduce using rule 86 (f -> LPAREN addFF exp RPAREN rmFF .)
    DIV             reduce using rule 86 (f -> LPAREN addFF exp RPAREN rmFF .)
    PLUS            reduce using rule 86 (f -> LPAREN addFF exp RPAREN rmFF .)
    MINUS           reduce using rule 86 (f -> LPAREN addFF exp RPAREN rmFF .)
    LT              reduce using rule 86 (f -> LPAREN addFF exp RPAREN rmFF .)
    GT              reduce using rule 86 (f -> LPAREN addFF exp RPAREN rmFF .)
    LTE             reduce using rule 86 (f -> LPAREN addFF exp RPAREN rmFF .)
    GTE             reduce using rule 86 (f -> LPAREN addFF exp RPAREN rmFF .)
    EQUALS          reduce using rule 86 (f -> LPAREN addFF exp RPAREN rmFF .)
    NEQUALS         reduce using rule 86 (f -> LPAREN addFF exp RPAREN rmFF .)
    AND             reduce using rule 86 (f -> LPAREN addFF exp RPAREN rmFF .)
    OR              reduce using rule 86 (f -> LPAREN addFF exp RPAREN rmFF .)
    COMMA           reduce using rule 86 (f -> LPAREN addFF exp RPAREN rmFF .)
    RPAREN          reduce using rule 86 (f -> LPAREN addFF exp RPAREN rmFF .)
    RBRACK          reduce using rule 86 (f -> LPAREN addFF exp RPAREN rmFF .)
    SCOLON          reduce using rule 86 (f -> LPAREN addFF exp RPAREN rmFF .)
    TO              reduce using rule 86 (f -> LPAREN addFF exp RPAREN rmFF .)
    DO              reduce using rule 86 (f -> LPAREN addFF exp RPAREN rmFF .)


state 217

    (19) idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .

    ASIGNA          reduce using rule 19 (idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .)
    MULT            reduce using rule 19 (idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .)
    DIV             reduce using rule 19 (idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .)
    PLUS            reduce using rule 19 (idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .)
    MINUS           reduce using rule 19 (idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .)
    LT              reduce using rule 19 (idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .)
    GT              reduce using rule 19 (idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .)
    LTE             reduce using rule 19 (idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .)
    GTE             reduce using rule 19 (idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .)
    EQUALS          reduce using rule 19 (idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .)
    NEQUALS         reduce using rule 19 (idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .)
    AND             reduce using rule 19 (idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .)
    OR              reduce using rule 19 (idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .)
    COMMA           reduce using rule 19 (idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .)
    RPAREN          reduce using rule 19 (idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .)
    RBRACK          reduce using rule 19 (idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .)
    SCOLON          reduce using rule 19 (idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .)
    TO              reduce using rule 19 (idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .)
    DO              reduce using rule 19 (idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .)


state 218

    (65) condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos . RBRACE
    (66) condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos . RBRACE ELSE LBRACE listaEstatutos RBRACE

    RBRACE          shift and go to state 222


state 219

    (67) cond_w -> WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos . RBRACE

    RBRACE          shift and go to state 223


state 220

    (68) cond_f -> FOR idCall ASIGNA exp TO exp DO . LBRACE listaEstatutos RBRACE

    LBRACE          shift and go to state 224


state 221

    (24) declarMethods -> tipoMethod FUNC ID LPAREN listaParam RPAREN LBRACE listaEstatutos RBRACE . declarMethods
    (24) declarMethods -> . tipoMethod FUNC ID LPAREN listaParam RPAREN LBRACE listaEstatutos RBRACE declarMethods
    (25) declarMethods -> . empty
    (26) tipoMethod -> . VOID
    (27) tipoMethod -> . INT
    (28) tipoMethod -> . FLOAT
    (29) tipoMethod -> . CHAR
    (94) empty -> .

    VOID            shift and go to state 16
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 19
    RBRACE          reduce using rule 94 (empty -> .)

    tipoMethod                     shift and go to state 63
    declarMethods                  shift and go to state 225
    empty                          shift and go to state 64

state 222

    (65) condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE .
    (66) condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE . ELSE LBRACE listaEstatutos RBRACE

    ID              reduce using rule 65 (condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE .)
    RETURN          reduce using rule 65 (condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE .)
    READ            reduce using rule 65 (condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE .)
    WRITE           reduce using rule 65 (condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE .)
    IF              reduce using rule 65 (condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE .)
    WHILE           reduce using rule 65 (condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE .)
    FOR             reduce using rule 65 (condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE .)
    RBRACE          reduce using rule 65 (condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE .)
    ELSE            shift and go to state 226


state 223

    (67) cond_w -> WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE .

    ID              reduce using rule 67 (cond_w -> WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE .)
    RETURN          reduce using rule 67 (cond_w -> WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE .)
    READ            reduce using rule 67 (cond_w -> WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE .)
    WRITE           reduce using rule 67 (cond_w -> WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE .)
    IF              reduce using rule 67 (cond_w -> WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE .)
    WHILE           reduce using rule 67 (cond_w -> WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE .)
    FOR             reduce using rule 67 (cond_w -> WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE .)
    RBRACE          reduce using rule 67 (cond_w -> WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE .)


state 224

    (68) cond_f -> FOR idCall ASIGNA exp TO exp DO LBRACE . listaEstatutos RBRACE
    (39) listaEstatutos -> . estatutos listaEstatutos
    (40) listaEstatutos -> . empty
    (41) estatutos -> . llamada SCOLON
    (42) estatutos -> . asignacion SCOLON
    (43) estatutos -> . returnf SCOLON
    (44) estatutos -> . lectura SCOLON
    (45) estatutos -> . escritura SCOLON
    (46) estatutos -> . condicion
    (47) estatutos -> . cond_w
    (48) estatutos -> . cond_f
    (94) empty -> .
    (50) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (51) llamada -> . ID LPAREN enviaParam RPAREN
    (49) asignacion -> . idCall ASIGNA exp
    (56) returnf -> . RETURN LPAREN exp RPAREN
    (57) lectura -> . READ LPAREN listaId RPAREN
    (60) escritura -> . WRITE LPAREN exp lextra RPAREN
    (61) escritura -> . WRITE LPAREN LETRERO lextra RPAREN
    (65) condicion -> . IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE
    (66) condicion -> . IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE
    (67) cond_w -> . WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE
    (68) cond_f -> . FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE
    (16) idCall -> . ID
    (17) idCall -> . ID DOT ID
    (18) idCall -> . ID LBRACK exp RBRACK
    (19) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    RBRACE          reduce using rule 94 (empty -> .)
    ID              shift and go to state 74
    RETURN          shift and go to state 87
    READ            shift and go to state 88
    WRITE           shift and go to state 89
    IF              shift and go to state 90
    WHILE           shift and go to state 91
    FOR             shift and go to state 92

    idCall                         shift and go to state 86
    listaEstatutos                 shift and go to state 227
    estatutos                      shift and go to state 76
    empty                          shift and go to state 77
    llamada                        shift and go to state 78
    asignacion                     shift and go to state 79
    returnf                        shift and go to state 80
    lectura                        shift and go to state 81
    escritura                      shift and go to state 82
    condicion                      shift and go to state 83
    cond_w                         shift and go to state 84
    cond_f                         shift and go to state 85

state 225

    (24) declarMethods -> tipoMethod FUNC ID LPAREN listaParam RPAREN LBRACE listaEstatutos RBRACE declarMethods .

    RBRACE          reduce using rule 24 (declarMethods -> tipoMethod FUNC ID LPAREN listaParam RPAREN LBRACE listaEstatutos RBRACE declarMethods .)


state 226

    (66) condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE . LBRACE listaEstatutos RBRACE

    LBRACE          shift and go to state 228


state 227

    (68) cond_f -> FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos . RBRACE

    RBRACE          shift and go to state 229


state 228

    (66) condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE . listaEstatutos RBRACE
    (39) listaEstatutos -> . estatutos listaEstatutos
    (40) listaEstatutos -> . empty
    (41) estatutos -> . llamada SCOLON
    (42) estatutos -> . asignacion SCOLON
    (43) estatutos -> . returnf SCOLON
    (44) estatutos -> . lectura SCOLON
    (45) estatutos -> . escritura SCOLON
    (46) estatutos -> . condicion
    (47) estatutos -> . cond_w
    (48) estatutos -> . cond_f
    (94) empty -> .
    (50) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (51) llamada -> . ID LPAREN enviaParam RPAREN
    (49) asignacion -> . idCall ASIGNA exp
    (56) returnf -> . RETURN LPAREN exp RPAREN
    (57) lectura -> . READ LPAREN listaId RPAREN
    (60) escritura -> . WRITE LPAREN exp lextra RPAREN
    (61) escritura -> . WRITE LPAREN LETRERO lextra RPAREN
    (65) condicion -> . IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE
    (66) condicion -> . IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE
    (67) cond_w -> . WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE
    (68) cond_f -> . FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE
    (16) idCall -> . ID
    (17) idCall -> . ID DOT ID
    (18) idCall -> . ID LBRACK exp RBRACK
    (19) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    RBRACE          reduce using rule 94 (empty -> .)
    ID              shift and go to state 74
    RETURN          shift and go to state 87
    READ            shift and go to state 88
    WRITE           shift and go to state 89
    IF              shift and go to state 90
    WHILE           shift and go to state 91
    FOR             shift and go to state 92

    listaEstatutos                 shift and go to state 230
    estatutos                      shift and go to state 76
    empty                          shift and go to state 77
    llamada                        shift and go to state 78
    asignacion                     shift and go to state 79
    returnf                        shift and go to state 80
    lectura                        shift and go to state 81
    escritura                      shift and go to state 82
    condicion                      shift and go to state 83
    cond_w                         shift and go to state 84
    cond_f                         shift and go to state 85
    idCall                         shift and go to state 86

state 229

    (68) cond_f -> FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE .

    ID              reduce using rule 68 (cond_f -> FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE .)
    RETURN          reduce using rule 68 (cond_f -> FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE .)
    READ            reduce using rule 68 (cond_f -> FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE .)
    WRITE           reduce using rule 68 (cond_f -> FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE .)
    IF              reduce using rule 68 (cond_f -> FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE .)
    WHILE           reduce using rule 68 (cond_f -> FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE .)
    FOR             reduce using rule 68 (cond_f -> FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE .)
    RBRACE          reduce using rule 68 (cond_f -> FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE .)


state 230

    (66) condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos . RBRACE

    RBRACE          shift and go to state 231


state 231

    (66) condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE .

    ID              reduce using rule 66 (condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE .)
    RETURN          reduce using rule 66 (condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE .)
    READ            reduce using rule 66 (condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE .)
    WRITE           reduce using rule 66 (condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE .)
    IF              reduce using rule 66 (condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE .)
    WHILE           reduce using rule 66 (condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE .)
    FOR             reduce using rule 66 (condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE .)
    RBRACE          reduce using rule 66 (condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE .)

