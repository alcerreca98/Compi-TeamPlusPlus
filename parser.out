Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    GTE
    LTE
    QUOTE

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SCOLON declarClases declarVar definFunc MAIN LPAREN RPAREN LBRACE listaEstatutos RBRACE
Rule 2     declarClases -> CLASS ID herencia LBRACE ATTRIBUTES declarAttributes METHODS declarMethods RBRACE declarClases
Rule 3     declarClases -> empty
Rule 4     herencia -> LT EXTENDS ID GT
Rule 5     herencia -> empty
Rule 6     declarAttributes -> listaIdDeclare COLON tipo SCOLON declarAttributes
Rule 7     declarAttributes -> empty
Rule 8     listaIdDeclare -> idDeclare
Rule 9     listaIdDeclare -> idDeclare COMMA listaIdDeclare
Rule 10    idDeclare -> ID
Rule 11    idDeclare -> ID LBRACK CTE_I RBRACK
Rule 12    idDeclare -> ID LBRACK CTE_I RBRACK LBRACK CTE_I RBRACK
Rule 13    idCall -> ID
Rule 14    idCall -> ID DOT ID
Rule 15    idCall -> ID LBRACK exp RBRACK
Rule 16    idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK
Rule 17    tipo -> ID
Rule 18    tipo -> INT
Rule 19    tipo -> FLOAT
Rule 20    tipo -> CHAR
Rule 21    declarMethods -> tipoMethod FUNC ID LPAREN listaParam RPAREN LBRACE listaEstatutos RBRACE declarMethods
Rule 22    declarMethods -> empty
Rule 23    tipoMethod -> VOID
Rule 24    tipoMethod -> INT
Rule 25    tipoMethod -> FLOAT
Rule 26    tipoMethod -> CHAR
Rule 27    listaParam -> param
Rule 28    listaParam -> param COMMA listaParam
Rule 29    listaParam -> empty
Rule 30    param -> ID COLON tipo
Rule 31    declarVar -> VAR listaIdDeclare COLON tipo SCOLON declarVar
Rule 32    declarVar -> empty
Rule 33    definFunc -> tipoMethod FUNC ID LPAREN listaParam RPAREN declarVar LBRACE listaEstatutos RBRACE definFunc
Rule 34    definFunc -> empty
Rule 35    listaEstatutos -> estatutos listaEstatutos
Rule 36    listaEstatutos -> empty
Rule 37    estatutos -> llamada SCOLON
Rule 38    estatutos -> asignacion SCOLON
Rule 39    estatutos -> returnf SCOLON
Rule 40    estatutos -> lectura SCOLON
Rule 41    estatutos -> escritura SCOLON
Rule 42    estatutos -> condicion
Rule 43    estatutos -> cond_w
Rule 44    estatutos -> cond_f
Rule 45    asignacion -> idCall ASIGNA exp
Rule 46    llamada -> ID DOT ID LPAREN enviaParam RPAREN
Rule 47    llamada -> ID LPAREN enviaParam RPAREN
Rule 48    enviaParam -> paramReferencia
Rule 49    enviaParam -> empty
Rule 50    paramReferencia -> exp
Rule 51    paramReferencia -> exp COMMA paramReferencia
Rule 52    returnf -> RETURN LPAREN exp RPAREN
Rule 53    lectura -> READ LPAREN listaId RPAREN
Rule 54    listaId -> idCall
Rule 55    listaId -> idCall COMMA listaId
Rule 56    escritura -> WRITE LPAREN exp lextra RPAREN
Rule 57    escritura -> WRITE LPAREN LETRERO lextra RPAREN
Rule 58    lextra -> COMMA exp lextra
Rule 59    lextra -> COMMA LETRERO lextra
Rule 60    lextra -> empty
Rule 61    condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE
Rule 62    condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE
Rule 63    cond_w -> WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE
Rule 64    cond_f -> FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE
Rule 65    exp -> texp
Rule 66    exp -> texp OR exp
Rule 67    texp -> gexp
Rule 68    texp -> gexp AND texp
Rule 69    gexp -> mexp
Rule 70    gexp -> mexp LT mexp
Rule 71    gexp -> mexp GT mexp
Rule 72    gexp -> mexp EQUALS mexp
Rule 73    gexp -> mexp NEQUALS mexp
Rule 74    mexp -> t
Rule 75    mexp -> t PLUS mexp
Rule 76    mexp -> t MINUS mexp
Rule 77    t -> f
Rule 78    t -> f MULT t
Rule 79    t -> f DIV t
Rule 80    f -> LPAREN exp RPAREN
Rule 81    f -> CTE_I
Rule 82    f -> CTE_F
Rule 83    f -> CTE_C
Rule 84    f -> llamada
Rule 85    f -> idCall
Rule 86    empty -> <empty>

Terminals, with rules where they appear

AND                  : 68
ASIGNA               : 45 64
ATTRIBUTES           : 2
CHAR                 : 20 26
CLASS                : 2
COLON                : 6 30 31
COMMA                : 9 28 51 55 58 59
CTE_C                : 83
CTE_F                : 82
CTE_I                : 11 12 12 81
DIV                  : 79
DO                   : 63 64
DOT                  : 14 46
ELSE                 : 62
EQUALS               : 72
EXTENDS              : 4
FLOAT                : 19 25
FOR                  : 64
FUNC                 : 21 33
GT                   : 4 71
GTE                  : 
ID                   : 1 2 4 10 11 12 13 14 14 15 16 17 21 30 33 46 46 47
IF                   : 61 62
INT                  : 18 24
LBRACE               : 1 2 21 33 61 62 62 63 64
LBRACK               : 11 12 12 15 16 16
LETRERO              : 57 59
LPAREN               : 1 21 33 46 47 52 53 56 57 61 62 63 80
LT                   : 4 70
LTE                  : 
MAIN                 : 1
METHODS              : 2
MINUS                : 76
MULT                 : 78
NEQUALS              : 73
OR                   : 66
PLUS                 : 75
PROGRAM              : 1
QUOTE                : 
RBRACE               : 1 2 21 33 61 62 62 63 64
RBRACK               : 11 12 12 15 16 16
READ                 : 53
RETURN               : 52
RPAREN               : 1 21 33 46 47 52 53 56 57 61 62 63 80
SCOLON               : 1 6 31 37 38 39 40 41
THEN                 : 61 62
TO                   : 64
VAR                  : 31
VOID                 : 23
WHILE                : 63
WRITE                : 56 57
error                : 

Nonterminals, with rules where they appear

asignacion           : 38
cond_f               : 44
cond_w               : 43
condicion            : 42
declarAttributes     : 2 6
declarClases         : 1 2
declarMethods        : 2 21
declarVar            : 1 31 33
definFunc            : 1 33
empty                : 3 5 7 22 29 32 34 36 49 60
enviaParam           : 46 47
escritura            : 41
estatutos            : 35
exp                  : 15 16 16 45 50 51 52 56 58 61 62 63 64 64 66 80
f                    : 77 78 79
gexp                 : 67 68
herencia             : 2
idCall               : 45 54 55 64 85
idDeclare            : 8 9
lectura              : 40
lextra               : 56 57 58 59
listaEstatutos       : 1 21 33 35 61 62 62 63 64
listaId              : 53 55
listaIdDeclare       : 6 9 31
listaParam           : 21 28 33
llamada              : 37 84
mexp                 : 69 70 70 71 71 72 72 73 73 75 76
param                : 27 28
paramReferencia      : 48 51
program              : 0
returnf              : 39
t                    : 74 75 76 78 79
texp                 : 65 66 68
tipo                 : 6 30 31
tipoMethod           : 21 33

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SCOLON declarClases declarVar definFunc MAIN LPAREN RPAREN LBRACE listaEstatutos RBRACE

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SCOLON declarClases declarVar definFunc MAIN LPAREN RPAREN LBRACE listaEstatutos RBRACE

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SCOLON declarClases declarVar definFunc MAIN LPAREN RPAREN LBRACE listaEstatutos RBRACE

    SCOLON          shift and go to state 4


state 4

    (1) program -> PROGRAM ID SCOLON . declarClases declarVar definFunc MAIN LPAREN RPAREN LBRACE listaEstatutos RBRACE
    (2) declarClases -> . CLASS ID herencia LBRACE ATTRIBUTES declarAttributes METHODS declarMethods RBRACE declarClases
    (3) declarClases -> . empty
    (86) empty -> .

    CLASS           shift and go to state 6
    VAR             reduce using rule 86 (empty -> .)
    VOID            reduce using rule 86 (empty -> .)
    INT             reduce using rule 86 (empty -> .)
    FLOAT           reduce using rule 86 (empty -> .)
    CHAR            reduce using rule 86 (empty -> .)
    MAIN            reduce using rule 86 (empty -> .)

    declarClases                   shift and go to state 5
    empty                          shift and go to state 7

state 5

    (1) program -> PROGRAM ID SCOLON declarClases . declarVar definFunc MAIN LPAREN RPAREN LBRACE listaEstatutos RBRACE
    (31) declarVar -> . VAR listaIdDeclare COLON tipo SCOLON declarVar
    (32) declarVar -> . empty
    (86) empty -> .

    VAR             shift and go to state 9
    VOID            reduce using rule 86 (empty -> .)
    INT             reduce using rule 86 (empty -> .)
    FLOAT           reduce using rule 86 (empty -> .)
    CHAR            reduce using rule 86 (empty -> .)
    MAIN            reduce using rule 86 (empty -> .)

    declarVar                      shift and go to state 8
    empty                          shift and go to state 10

state 6

    (2) declarClases -> CLASS . ID herencia LBRACE ATTRIBUTES declarAttributes METHODS declarMethods RBRACE declarClases

    ID              shift and go to state 11


state 7

    (3) declarClases -> empty .

    VAR             reduce using rule 3 (declarClases -> empty .)
    VOID            reduce using rule 3 (declarClases -> empty .)
    INT             reduce using rule 3 (declarClases -> empty .)
    FLOAT           reduce using rule 3 (declarClases -> empty .)
    CHAR            reduce using rule 3 (declarClases -> empty .)
    MAIN            reduce using rule 3 (declarClases -> empty .)


state 8

    (1) program -> PROGRAM ID SCOLON declarClases declarVar . definFunc MAIN LPAREN RPAREN LBRACE listaEstatutos RBRACE
    (33) definFunc -> . tipoMethod FUNC ID LPAREN listaParam RPAREN declarVar LBRACE listaEstatutos RBRACE definFunc
    (34) definFunc -> . empty
    (23) tipoMethod -> . VOID
    (24) tipoMethod -> . INT
    (25) tipoMethod -> . FLOAT
    (26) tipoMethod -> . CHAR
    (86) empty -> .

    VOID            shift and go to state 15
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    MAIN            reduce using rule 86 (empty -> .)

    definFunc                      shift and go to state 12
    tipoMethod                     shift and go to state 13
    empty                          shift and go to state 14

state 9

    (31) declarVar -> VAR . listaIdDeclare COLON tipo SCOLON declarVar
    (8) listaIdDeclare -> . idDeclare
    (9) listaIdDeclare -> . idDeclare COMMA listaIdDeclare
    (10) idDeclare -> . ID
    (11) idDeclare -> . ID LBRACK CTE_I RBRACK
    (12) idDeclare -> . ID LBRACK CTE_I RBRACK LBRACK CTE_I RBRACK

    ID              shift and go to state 21

    listaIdDeclare                 shift and go to state 19
    idDeclare                      shift and go to state 20

state 10

    (32) declarVar -> empty .

    VOID            reduce using rule 32 (declarVar -> empty .)
    INT             reduce using rule 32 (declarVar -> empty .)
    FLOAT           reduce using rule 32 (declarVar -> empty .)
    CHAR            reduce using rule 32 (declarVar -> empty .)
    MAIN            reduce using rule 32 (declarVar -> empty .)
    LBRACE          reduce using rule 32 (declarVar -> empty .)


state 11

    (2) declarClases -> CLASS ID . herencia LBRACE ATTRIBUTES declarAttributes METHODS declarMethods RBRACE declarClases
    (4) herencia -> . LT EXTENDS ID GT
    (5) herencia -> . empty
    (86) empty -> .

    LT              shift and go to state 23
    LBRACE          reduce using rule 86 (empty -> .)

    herencia                       shift and go to state 22
    empty                          shift and go to state 24

state 12

    (1) program -> PROGRAM ID SCOLON declarClases declarVar definFunc . MAIN LPAREN RPAREN LBRACE listaEstatutos RBRACE

    MAIN            shift and go to state 25


state 13

    (33) definFunc -> tipoMethod . FUNC ID LPAREN listaParam RPAREN declarVar LBRACE listaEstatutos RBRACE definFunc

    FUNC            shift and go to state 26


state 14

    (34) definFunc -> empty .

    MAIN            reduce using rule 34 (definFunc -> empty .)


state 15

    (23) tipoMethod -> VOID .

    FUNC            reduce using rule 23 (tipoMethod -> VOID .)


state 16

    (24) tipoMethod -> INT .

    FUNC            reduce using rule 24 (tipoMethod -> INT .)


state 17

    (25) tipoMethod -> FLOAT .

    FUNC            reduce using rule 25 (tipoMethod -> FLOAT .)


state 18

    (26) tipoMethod -> CHAR .

    FUNC            reduce using rule 26 (tipoMethod -> CHAR .)


state 19

    (31) declarVar -> VAR listaIdDeclare . COLON tipo SCOLON declarVar

    COLON           shift and go to state 27


state 20

    (8) listaIdDeclare -> idDeclare .
    (9) listaIdDeclare -> idDeclare . COMMA listaIdDeclare

    COLON           reduce using rule 8 (listaIdDeclare -> idDeclare .)
    COMMA           shift and go to state 28


state 21

    (10) idDeclare -> ID .
    (11) idDeclare -> ID . LBRACK CTE_I RBRACK
    (12) idDeclare -> ID . LBRACK CTE_I RBRACK LBRACK CTE_I RBRACK

    COMMA           reduce using rule 10 (idDeclare -> ID .)
    COLON           reduce using rule 10 (idDeclare -> ID .)
    LBRACK          shift and go to state 29


state 22

    (2) declarClases -> CLASS ID herencia . LBRACE ATTRIBUTES declarAttributes METHODS declarMethods RBRACE declarClases

    LBRACE          shift and go to state 30


state 23

    (4) herencia -> LT . EXTENDS ID GT

    EXTENDS         shift and go to state 31


state 24

    (5) herencia -> empty .

    LBRACE          reduce using rule 5 (herencia -> empty .)


state 25

    (1) program -> PROGRAM ID SCOLON declarClases declarVar definFunc MAIN . LPAREN RPAREN LBRACE listaEstatutos RBRACE

    LPAREN          shift and go to state 32


state 26

    (33) definFunc -> tipoMethod FUNC . ID LPAREN listaParam RPAREN declarVar LBRACE listaEstatutos RBRACE definFunc

    ID              shift and go to state 33


state 27

    (31) declarVar -> VAR listaIdDeclare COLON . tipo SCOLON declarVar
    (17) tipo -> . ID
    (18) tipo -> . INT
    (19) tipo -> . FLOAT
    (20) tipo -> . CHAR

    ID              shift and go to state 35
    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    CHAR            shift and go to state 38

    tipo                           shift and go to state 34

state 28

    (9) listaIdDeclare -> idDeclare COMMA . listaIdDeclare
    (8) listaIdDeclare -> . idDeclare
    (9) listaIdDeclare -> . idDeclare COMMA listaIdDeclare
    (10) idDeclare -> . ID
    (11) idDeclare -> . ID LBRACK CTE_I RBRACK
    (12) idDeclare -> . ID LBRACK CTE_I RBRACK LBRACK CTE_I RBRACK

    ID              shift and go to state 21

    idDeclare                      shift and go to state 20
    listaIdDeclare                 shift and go to state 39

state 29

    (11) idDeclare -> ID LBRACK . CTE_I RBRACK
    (12) idDeclare -> ID LBRACK . CTE_I RBRACK LBRACK CTE_I RBRACK

    CTE_I           shift and go to state 40


state 30

    (2) declarClases -> CLASS ID herencia LBRACE . ATTRIBUTES declarAttributes METHODS declarMethods RBRACE declarClases

    ATTRIBUTES      shift and go to state 41


state 31

    (4) herencia -> LT EXTENDS . ID GT

    ID              shift and go to state 42


state 32

    (1) program -> PROGRAM ID SCOLON declarClases declarVar definFunc MAIN LPAREN . RPAREN LBRACE listaEstatutos RBRACE

    RPAREN          shift and go to state 43


state 33

    (33) definFunc -> tipoMethod FUNC ID . LPAREN listaParam RPAREN declarVar LBRACE listaEstatutos RBRACE definFunc

    LPAREN          shift and go to state 44


state 34

    (31) declarVar -> VAR listaIdDeclare COLON tipo . SCOLON declarVar

    SCOLON          shift and go to state 45


state 35

    (17) tipo -> ID .

    SCOLON          reduce using rule 17 (tipo -> ID .)
    COMMA           reduce using rule 17 (tipo -> ID .)
    RPAREN          reduce using rule 17 (tipo -> ID .)


state 36

    (18) tipo -> INT .

    SCOLON          reduce using rule 18 (tipo -> INT .)
    COMMA           reduce using rule 18 (tipo -> INT .)
    RPAREN          reduce using rule 18 (tipo -> INT .)


state 37

    (19) tipo -> FLOAT .

    SCOLON          reduce using rule 19 (tipo -> FLOAT .)
    COMMA           reduce using rule 19 (tipo -> FLOAT .)
    RPAREN          reduce using rule 19 (tipo -> FLOAT .)


state 38

    (20) tipo -> CHAR .

    SCOLON          reduce using rule 20 (tipo -> CHAR .)
    COMMA           reduce using rule 20 (tipo -> CHAR .)
    RPAREN          reduce using rule 20 (tipo -> CHAR .)


state 39

    (9) listaIdDeclare -> idDeclare COMMA listaIdDeclare .

    COLON           reduce using rule 9 (listaIdDeclare -> idDeclare COMMA listaIdDeclare .)


state 40

    (11) idDeclare -> ID LBRACK CTE_I . RBRACK
    (12) idDeclare -> ID LBRACK CTE_I . RBRACK LBRACK CTE_I RBRACK

    RBRACK          shift and go to state 46


state 41

    (2) declarClases -> CLASS ID herencia LBRACE ATTRIBUTES . declarAttributes METHODS declarMethods RBRACE declarClases
    (6) declarAttributes -> . listaIdDeclare COLON tipo SCOLON declarAttributes
    (7) declarAttributes -> . empty
    (8) listaIdDeclare -> . idDeclare
    (9) listaIdDeclare -> . idDeclare COMMA listaIdDeclare
    (86) empty -> .
    (10) idDeclare -> . ID
    (11) idDeclare -> . ID LBRACK CTE_I RBRACK
    (12) idDeclare -> . ID LBRACK CTE_I RBRACK LBRACK CTE_I RBRACK

    METHODS         reduce using rule 86 (empty -> .)
    ID              shift and go to state 21

    declarAttributes               shift and go to state 47
    listaIdDeclare                 shift and go to state 48
    empty                          shift and go to state 49
    idDeclare                      shift and go to state 20

state 42

    (4) herencia -> LT EXTENDS ID . GT

    GT              shift and go to state 50


state 43

    (1) program -> PROGRAM ID SCOLON declarClases declarVar definFunc MAIN LPAREN RPAREN . LBRACE listaEstatutos RBRACE

    LBRACE          shift and go to state 51


state 44

    (33) definFunc -> tipoMethod FUNC ID LPAREN . listaParam RPAREN declarVar LBRACE listaEstatutos RBRACE definFunc
    (27) listaParam -> . param
    (28) listaParam -> . param COMMA listaParam
    (29) listaParam -> . empty
    (30) param -> . ID COLON tipo
    (86) empty -> .

    ID              shift and go to state 52
    RPAREN          reduce using rule 86 (empty -> .)

    listaParam                     shift and go to state 53
    param                          shift and go to state 54
    empty                          shift and go to state 55

state 45

    (31) declarVar -> VAR listaIdDeclare COLON tipo SCOLON . declarVar
    (31) declarVar -> . VAR listaIdDeclare COLON tipo SCOLON declarVar
    (32) declarVar -> . empty
    (86) empty -> .

    VAR             shift and go to state 9
    VOID            reduce using rule 86 (empty -> .)
    INT             reduce using rule 86 (empty -> .)
    FLOAT           reduce using rule 86 (empty -> .)
    CHAR            reduce using rule 86 (empty -> .)
    MAIN            reduce using rule 86 (empty -> .)
    LBRACE          reduce using rule 86 (empty -> .)

    declarVar                      shift and go to state 56
    empty                          shift and go to state 10

state 46

    (11) idDeclare -> ID LBRACK CTE_I RBRACK .
    (12) idDeclare -> ID LBRACK CTE_I RBRACK . LBRACK CTE_I RBRACK

    COMMA           reduce using rule 11 (idDeclare -> ID LBRACK CTE_I RBRACK .)
    COLON           reduce using rule 11 (idDeclare -> ID LBRACK CTE_I RBRACK .)
    LBRACK          shift and go to state 57


state 47

    (2) declarClases -> CLASS ID herencia LBRACE ATTRIBUTES declarAttributes . METHODS declarMethods RBRACE declarClases

    METHODS         shift and go to state 58


state 48

    (6) declarAttributes -> listaIdDeclare . COLON tipo SCOLON declarAttributes

    COLON           shift and go to state 59


state 49

    (7) declarAttributes -> empty .

    METHODS         reduce using rule 7 (declarAttributes -> empty .)


state 50

    (4) herencia -> LT EXTENDS ID GT .

    LBRACE          reduce using rule 4 (herencia -> LT EXTENDS ID GT .)


state 51

    (1) program -> PROGRAM ID SCOLON declarClases declarVar definFunc MAIN LPAREN RPAREN LBRACE . listaEstatutos RBRACE
    (35) listaEstatutos -> . estatutos listaEstatutos
    (36) listaEstatutos -> . empty
    (37) estatutos -> . llamada SCOLON
    (38) estatutos -> . asignacion SCOLON
    (39) estatutos -> . returnf SCOLON
    (40) estatutos -> . lectura SCOLON
    (41) estatutos -> . escritura SCOLON
    (42) estatutos -> . condicion
    (43) estatutos -> . cond_w
    (44) estatutos -> . cond_f
    (86) empty -> .
    (46) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (47) llamada -> . ID LPAREN enviaParam RPAREN
    (45) asignacion -> . idCall ASIGNA exp
    (52) returnf -> . RETURN LPAREN exp RPAREN
    (53) lectura -> . READ LPAREN listaId RPAREN
    (56) escritura -> . WRITE LPAREN exp lextra RPAREN
    (57) escritura -> . WRITE LPAREN LETRERO lextra RPAREN
    (61) condicion -> . IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE
    (62) condicion -> . IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE
    (63) cond_w -> . WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE
    (64) cond_f -> . FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE
    (13) idCall -> . ID
    (14) idCall -> . ID DOT ID
    (15) idCall -> . ID LBRACK exp RBRACK
    (16) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    RBRACE          reduce using rule 86 (empty -> .)
    ID              shift and go to state 60
    RETURN          shift and go to state 73
    READ            shift and go to state 74
    WRITE           shift and go to state 75
    IF              shift and go to state 76
    WHILE           shift and go to state 77
    FOR             shift and go to state 78

    listaEstatutos                 shift and go to state 61
    estatutos                      shift and go to state 62
    empty                          shift and go to state 63
    llamada                        shift and go to state 64
    asignacion                     shift and go to state 65
    returnf                        shift and go to state 66
    lectura                        shift and go to state 67
    escritura                      shift and go to state 68
    condicion                      shift and go to state 69
    cond_w                         shift and go to state 70
    cond_f                         shift and go to state 71
    idCall                         shift and go to state 72

state 52

    (30) param -> ID . COLON tipo

    COLON           shift and go to state 79


state 53

    (33) definFunc -> tipoMethod FUNC ID LPAREN listaParam . RPAREN declarVar LBRACE listaEstatutos RBRACE definFunc

    RPAREN          shift and go to state 80


state 54

    (27) listaParam -> param .
    (28) listaParam -> param . COMMA listaParam

    RPAREN          reduce using rule 27 (listaParam -> param .)
    COMMA           shift and go to state 81


state 55

    (29) listaParam -> empty .

    RPAREN          reduce using rule 29 (listaParam -> empty .)


state 56

    (31) declarVar -> VAR listaIdDeclare COLON tipo SCOLON declarVar .

    VOID            reduce using rule 31 (declarVar -> VAR listaIdDeclare COLON tipo SCOLON declarVar .)
    INT             reduce using rule 31 (declarVar -> VAR listaIdDeclare COLON tipo SCOLON declarVar .)
    FLOAT           reduce using rule 31 (declarVar -> VAR listaIdDeclare COLON tipo SCOLON declarVar .)
    CHAR            reduce using rule 31 (declarVar -> VAR listaIdDeclare COLON tipo SCOLON declarVar .)
    MAIN            reduce using rule 31 (declarVar -> VAR listaIdDeclare COLON tipo SCOLON declarVar .)
    LBRACE          reduce using rule 31 (declarVar -> VAR listaIdDeclare COLON tipo SCOLON declarVar .)


state 57

    (12) idDeclare -> ID LBRACK CTE_I RBRACK LBRACK . CTE_I RBRACK

    CTE_I           shift and go to state 82


state 58

    (2) declarClases -> CLASS ID herencia LBRACE ATTRIBUTES declarAttributes METHODS . declarMethods RBRACE declarClases
    (21) declarMethods -> . tipoMethod FUNC ID LPAREN listaParam RPAREN LBRACE listaEstatutos RBRACE declarMethods
    (22) declarMethods -> . empty
    (23) tipoMethod -> . VOID
    (24) tipoMethod -> . INT
    (25) tipoMethod -> . FLOAT
    (26) tipoMethod -> . CHAR
    (86) empty -> .

    VOID            shift and go to state 15
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    RBRACE          reduce using rule 86 (empty -> .)

    declarMethods                  shift and go to state 83
    tipoMethod                     shift and go to state 84
    empty                          shift and go to state 85

state 59

    (6) declarAttributes -> listaIdDeclare COLON . tipo SCOLON declarAttributes
    (17) tipo -> . ID
    (18) tipo -> . INT
    (19) tipo -> . FLOAT
    (20) tipo -> . CHAR

    ID              shift and go to state 35
    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    CHAR            shift and go to state 38

    tipo                           shift and go to state 86

state 60

    (46) llamada -> ID . DOT ID LPAREN enviaParam RPAREN
    (47) llamada -> ID . LPAREN enviaParam RPAREN
    (13) idCall -> ID .
    (14) idCall -> ID . DOT ID
    (15) idCall -> ID . LBRACK exp RBRACK
    (16) idCall -> ID . LBRACK exp RBRACK LBRACK exp RBRACK

    DOT             shift and go to state 87
    LPAREN          shift and go to state 88
    ASIGNA          reduce using rule 13 (idCall -> ID .)
    MULT            reduce using rule 13 (idCall -> ID .)
    DIV             reduce using rule 13 (idCall -> ID .)
    PLUS            reduce using rule 13 (idCall -> ID .)
    MINUS           reduce using rule 13 (idCall -> ID .)
    LT              reduce using rule 13 (idCall -> ID .)
    GT              reduce using rule 13 (idCall -> ID .)
    EQUALS          reduce using rule 13 (idCall -> ID .)
    NEQUALS         reduce using rule 13 (idCall -> ID .)
    AND             reduce using rule 13 (idCall -> ID .)
    OR              reduce using rule 13 (idCall -> ID .)
    COMMA           reduce using rule 13 (idCall -> ID .)
    RPAREN          reduce using rule 13 (idCall -> ID .)
    RBRACK          reduce using rule 13 (idCall -> ID .)
    SCOLON          reduce using rule 13 (idCall -> ID .)
    TO              reduce using rule 13 (idCall -> ID .)
    DO              reduce using rule 13 (idCall -> ID .)
    LBRACK          shift and go to state 89


state 61

    (1) program -> PROGRAM ID SCOLON declarClases declarVar definFunc MAIN LPAREN RPAREN LBRACE listaEstatutos . RBRACE

    RBRACE          shift and go to state 90


state 62

    (35) listaEstatutos -> estatutos . listaEstatutos
    (35) listaEstatutos -> . estatutos listaEstatutos
    (36) listaEstatutos -> . empty
    (37) estatutos -> . llamada SCOLON
    (38) estatutos -> . asignacion SCOLON
    (39) estatutos -> . returnf SCOLON
    (40) estatutos -> . lectura SCOLON
    (41) estatutos -> . escritura SCOLON
    (42) estatutos -> . condicion
    (43) estatutos -> . cond_w
    (44) estatutos -> . cond_f
    (86) empty -> .
    (46) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (47) llamada -> . ID LPAREN enviaParam RPAREN
    (45) asignacion -> . idCall ASIGNA exp
    (52) returnf -> . RETURN LPAREN exp RPAREN
    (53) lectura -> . READ LPAREN listaId RPAREN
    (56) escritura -> . WRITE LPAREN exp lextra RPAREN
    (57) escritura -> . WRITE LPAREN LETRERO lextra RPAREN
    (61) condicion -> . IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE
    (62) condicion -> . IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE
    (63) cond_w -> . WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE
    (64) cond_f -> . FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE
    (13) idCall -> . ID
    (14) idCall -> . ID DOT ID
    (15) idCall -> . ID LBRACK exp RBRACK
    (16) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    RBRACE          reduce using rule 86 (empty -> .)
    ID              shift and go to state 60
    RETURN          shift and go to state 73
    READ            shift and go to state 74
    WRITE           shift and go to state 75
    IF              shift and go to state 76
    WHILE           shift and go to state 77
    FOR             shift and go to state 78

    estatutos                      shift and go to state 62
    listaEstatutos                 shift and go to state 91
    empty                          shift and go to state 63
    llamada                        shift and go to state 64
    asignacion                     shift and go to state 65
    returnf                        shift and go to state 66
    lectura                        shift and go to state 67
    escritura                      shift and go to state 68
    condicion                      shift and go to state 69
    cond_w                         shift and go to state 70
    cond_f                         shift and go to state 71
    idCall                         shift and go to state 72

state 63

    (36) listaEstatutos -> empty .

    RBRACE          reduce using rule 36 (listaEstatutos -> empty .)


state 64

    (37) estatutos -> llamada . SCOLON

    SCOLON          shift and go to state 92


state 65

    (38) estatutos -> asignacion . SCOLON

    SCOLON          shift and go to state 93


state 66

    (39) estatutos -> returnf . SCOLON

    SCOLON          shift and go to state 94


state 67

    (40) estatutos -> lectura . SCOLON

    SCOLON          shift and go to state 95


state 68

    (41) estatutos -> escritura . SCOLON

    SCOLON          shift and go to state 96


state 69

    (42) estatutos -> condicion .

    ID              reduce using rule 42 (estatutos -> condicion .)
    RETURN          reduce using rule 42 (estatutos -> condicion .)
    READ            reduce using rule 42 (estatutos -> condicion .)
    WRITE           reduce using rule 42 (estatutos -> condicion .)
    IF              reduce using rule 42 (estatutos -> condicion .)
    WHILE           reduce using rule 42 (estatutos -> condicion .)
    FOR             reduce using rule 42 (estatutos -> condicion .)
    RBRACE          reduce using rule 42 (estatutos -> condicion .)


state 70

    (43) estatutos -> cond_w .

    ID              reduce using rule 43 (estatutos -> cond_w .)
    RETURN          reduce using rule 43 (estatutos -> cond_w .)
    READ            reduce using rule 43 (estatutos -> cond_w .)
    WRITE           reduce using rule 43 (estatutos -> cond_w .)
    IF              reduce using rule 43 (estatutos -> cond_w .)
    WHILE           reduce using rule 43 (estatutos -> cond_w .)
    FOR             reduce using rule 43 (estatutos -> cond_w .)
    RBRACE          reduce using rule 43 (estatutos -> cond_w .)


state 71

    (44) estatutos -> cond_f .

    ID              reduce using rule 44 (estatutos -> cond_f .)
    RETURN          reduce using rule 44 (estatutos -> cond_f .)
    READ            reduce using rule 44 (estatutos -> cond_f .)
    WRITE           reduce using rule 44 (estatutos -> cond_f .)
    IF              reduce using rule 44 (estatutos -> cond_f .)
    WHILE           reduce using rule 44 (estatutos -> cond_f .)
    FOR             reduce using rule 44 (estatutos -> cond_f .)
    RBRACE          reduce using rule 44 (estatutos -> cond_f .)


state 72

    (45) asignacion -> idCall . ASIGNA exp

    ASIGNA          shift and go to state 97


state 73

    (52) returnf -> RETURN . LPAREN exp RPAREN

    LPAREN          shift and go to state 98


state 74

    (53) lectura -> READ . LPAREN listaId RPAREN

    LPAREN          shift and go to state 99


state 75

    (56) escritura -> WRITE . LPAREN exp lextra RPAREN
    (57) escritura -> WRITE . LPAREN LETRERO lextra RPAREN

    LPAREN          shift and go to state 100


state 76

    (61) condicion -> IF . LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE
    (62) condicion -> IF . LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE

    LPAREN          shift and go to state 101


state 77

    (63) cond_w -> WHILE . LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE

    LPAREN          shift and go to state 102


state 78

    (64) cond_f -> FOR . idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE
    (13) idCall -> . ID
    (14) idCall -> . ID DOT ID
    (15) idCall -> . ID LBRACK exp RBRACK
    (16) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    ID              shift and go to state 104

    idCall                         shift and go to state 103

state 79

    (30) param -> ID COLON . tipo
    (17) tipo -> . ID
    (18) tipo -> . INT
    (19) tipo -> . FLOAT
    (20) tipo -> . CHAR

    ID              shift and go to state 35
    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    CHAR            shift and go to state 38

    tipo                           shift and go to state 105

state 80

    (33) definFunc -> tipoMethod FUNC ID LPAREN listaParam RPAREN . declarVar LBRACE listaEstatutos RBRACE definFunc
    (31) declarVar -> . VAR listaIdDeclare COLON tipo SCOLON declarVar
    (32) declarVar -> . empty
    (86) empty -> .

    VAR             shift and go to state 9
    LBRACE          reduce using rule 86 (empty -> .)

    declarVar                      shift and go to state 106
    empty                          shift and go to state 10

state 81

    (28) listaParam -> param COMMA . listaParam
    (27) listaParam -> . param
    (28) listaParam -> . param COMMA listaParam
    (29) listaParam -> . empty
    (30) param -> . ID COLON tipo
    (86) empty -> .

    ID              shift and go to state 52
    RPAREN          reduce using rule 86 (empty -> .)

    param                          shift and go to state 54
    listaParam                     shift and go to state 107
    empty                          shift and go to state 55

state 82

    (12) idDeclare -> ID LBRACK CTE_I RBRACK LBRACK CTE_I . RBRACK

    RBRACK          shift and go to state 108


state 83

    (2) declarClases -> CLASS ID herencia LBRACE ATTRIBUTES declarAttributes METHODS declarMethods . RBRACE declarClases

    RBRACE          shift and go to state 109


state 84

    (21) declarMethods -> tipoMethod . FUNC ID LPAREN listaParam RPAREN LBRACE listaEstatutos RBRACE declarMethods

    FUNC            shift and go to state 110


state 85

    (22) declarMethods -> empty .

    RBRACE          reduce using rule 22 (declarMethods -> empty .)


state 86

    (6) declarAttributes -> listaIdDeclare COLON tipo . SCOLON declarAttributes

    SCOLON          shift and go to state 111


state 87

    (46) llamada -> ID DOT . ID LPAREN enviaParam RPAREN
    (14) idCall -> ID DOT . ID

    ID              shift and go to state 112


state 88

    (47) llamada -> ID LPAREN . enviaParam RPAREN
    (48) enviaParam -> . paramReferencia
    (49) enviaParam -> . empty
    (50) paramReferencia -> . exp
    (51) paramReferencia -> . exp COMMA paramReferencia
    (86) empty -> .
    (65) exp -> . texp
    (66) exp -> . texp OR exp
    (67) texp -> . gexp
    (68) texp -> . gexp AND texp
    (69) gexp -> . mexp
    (70) gexp -> . mexp LT mexp
    (71) gexp -> . mexp GT mexp
    (72) gexp -> . mexp EQUALS mexp
    (73) gexp -> . mexp NEQUALS mexp
    (74) mexp -> . t
    (75) mexp -> . t PLUS mexp
    (76) mexp -> . t MINUS mexp
    (77) t -> . f
    (78) t -> . f MULT t
    (79) t -> . f DIV t
    (80) f -> . LPAREN exp RPAREN
    (81) f -> . CTE_I
    (82) f -> . CTE_F
    (83) f -> . CTE_C
    (84) f -> . llamada
    (85) f -> . idCall
    (46) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (47) llamada -> . ID LPAREN enviaParam RPAREN
    (13) idCall -> . ID
    (14) idCall -> . ID DOT ID
    (15) idCall -> . ID LBRACK exp RBRACK
    (16) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    RPAREN          reduce using rule 86 (empty -> .)
    LPAREN          shift and go to state 113
    CTE_I           shift and go to state 123
    CTE_F           shift and go to state 124
    CTE_C           shift and go to state 125
    ID              shift and go to state 60

    enviaParam                     shift and go to state 114
    paramReferencia                shift and go to state 115
    empty                          shift and go to state 116
    exp                            shift and go to state 117
    texp                           shift and go to state 118
    gexp                           shift and go to state 119
    mexp                           shift and go to state 120
    t                              shift and go to state 121
    f                              shift and go to state 122
    llamada                        shift and go to state 126
    idCall                         shift and go to state 127

state 89

    (15) idCall -> ID LBRACK . exp RBRACK
    (16) idCall -> ID LBRACK . exp RBRACK LBRACK exp RBRACK
    (65) exp -> . texp
    (66) exp -> . texp OR exp
    (67) texp -> . gexp
    (68) texp -> . gexp AND texp
    (69) gexp -> . mexp
    (70) gexp -> . mexp LT mexp
    (71) gexp -> . mexp GT mexp
    (72) gexp -> . mexp EQUALS mexp
    (73) gexp -> . mexp NEQUALS mexp
    (74) mexp -> . t
    (75) mexp -> . t PLUS mexp
    (76) mexp -> . t MINUS mexp
    (77) t -> . f
    (78) t -> . f MULT t
    (79) t -> . f DIV t
    (80) f -> . LPAREN exp RPAREN
    (81) f -> . CTE_I
    (82) f -> . CTE_F
    (83) f -> . CTE_C
    (84) f -> . llamada
    (85) f -> . idCall
    (46) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (47) llamada -> . ID LPAREN enviaParam RPAREN
    (13) idCall -> . ID
    (14) idCall -> . ID DOT ID
    (15) idCall -> . ID LBRACK exp RBRACK
    (16) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 113
    CTE_I           shift and go to state 123
    CTE_F           shift and go to state 124
    CTE_C           shift and go to state 125
    ID              shift and go to state 60

    exp                            shift and go to state 128
    texp                           shift and go to state 118
    gexp                           shift and go to state 119
    mexp                           shift and go to state 120
    t                              shift and go to state 121
    f                              shift and go to state 122
    llamada                        shift and go to state 126
    idCall                         shift and go to state 127

state 90

    (1) program -> PROGRAM ID SCOLON declarClases declarVar definFunc MAIN LPAREN RPAREN LBRACE listaEstatutos RBRACE .

    $end            reduce using rule 1 (program -> PROGRAM ID SCOLON declarClases declarVar definFunc MAIN LPAREN RPAREN LBRACE listaEstatutos RBRACE .)


state 91

    (35) listaEstatutos -> estatutos listaEstatutos .

    RBRACE          reduce using rule 35 (listaEstatutos -> estatutos listaEstatutos .)


state 92

    (37) estatutos -> llamada SCOLON .

    ID              reduce using rule 37 (estatutos -> llamada SCOLON .)
    RETURN          reduce using rule 37 (estatutos -> llamada SCOLON .)
    READ            reduce using rule 37 (estatutos -> llamada SCOLON .)
    WRITE           reduce using rule 37 (estatutos -> llamada SCOLON .)
    IF              reduce using rule 37 (estatutos -> llamada SCOLON .)
    WHILE           reduce using rule 37 (estatutos -> llamada SCOLON .)
    FOR             reduce using rule 37 (estatutos -> llamada SCOLON .)
    RBRACE          reduce using rule 37 (estatutos -> llamada SCOLON .)


state 93

    (38) estatutos -> asignacion SCOLON .

    ID              reduce using rule 38 (estatutos -> asignacion SCOLON .)
    RETURN          reduce using rule 38 (estatutos -> asignacion SCOLON .)
    READ            reduce using rule 38 (estatutos -> asignacion SCOLON .)
    WRITE           reduce using rule 38 (estatutos -> asignacion SCOLON .)
    IF              reduce using rule 38 (estatutos -> asignacion SCOLON .)
    WHILE           reduce using rule 38 (estatutos -> asignacion SCOLON .)
    FOR             reduce using rule 38 (estatutos -> asignacion SCOLON .)
    RBRACE          reduce using rule 38 (estatutos -> asignacion SCOLON .)


state 94

    (39) estatutos -> returnf SCOLON .

    ID              reduce using rule 39 (estatutos -> returnf SCOLON .)
    RETURN          reduce using rule 39 (estatutos -> returnf SCOLON .)
    READ            reduce using rule 39 (estatutos -> returnf SCOLON .)
    WRITE           reduce using rule 39 (estatutos -> returnf SCOLON .)
    IF              reduce using rule 39 (estatutos -> returnf SCOLON .)
    WHILE           reduce using rule 39 (estatutos -> returnf SCOLON .)
    FOR             reduce using rule 39 (estatutos -> returnf SCOLON .)
    RBRACE          reduce using rule 39 (estatutos -> returnf SCOLON .)


state 95

    (40) estatutos -> lectura SCOLON .

    ID              reduce using rule 40 (estatutos -> lectura SCOLON .)
    RETURN          reduce using rule 40 (estatutos -> lectura SCOLON .)
    READ            reduce using rule 40 (estatutos -> lectura SCOLON .)
    WRITE           reduce using rule 40 (estatutos -> lectura SCOLON .)
    IF              reduce using rule 40 (estatutos -> lectura SCOLON .)
    WHILE           reduce using rule 40 (estatutos -> lectura SCOLON .)
    FOR             reduce using rule 40 (estatutos -> lectura SCOLON .)
    RBRACE          reduce using rule 40 (estatutos -> lectura SCOLON .)


state 96

    (41) estatutos -> escritura SCOLON .

    ID              reduce using rule 41 (estatutos -> escritura SCOLON .)
    RETURN          reduce using rule 41 (estatutos -> escritura SCOLON .)
    READ            reduce using rule 41 (estatutos -> escritura SCOLON .)
    WRITE           reduce using rule 41 (estatutos -> escritura SCOLON .)
    IF              reduce using rule 41 (estatutos -> escritura SCOLON .)
    WHILE           reduce using rule 41 (estatutos -> escritura SCOLON .)
    FOR             reduce using rule 41 (estatutos -> escritura SCOLON .)
    RBRACE          reduce using rule 41 (estatutos -> escritura SCOLON .)


state 97

    (45) asignacion -> idCall ASIGNA . exp
    (65) exp -> . texp
    (66) exp -> . texp OR exp
    (67) texp -> . gexp
    (68) texp -> . gexp AND texp
    (69) gexp -> . mexp
    (70) gexp -> . mexp LT mexp
    (71) gexp -> . mexp GT mexp
    (72) gexp -> . mexp EQUALS mexp
    (73) gexp -> . mexp NEQUALS mexp
    (74) mexp -> . t
    (75) mexp -> . t PLUS mexp
    (76) mexp -> . t MINUS mexp
    (77) t -> . f
    (78) t -> . f MULT t
    (79) t -> . f DIV t
    (80) f -> . LPAREN exp RPAREN
    (81) f -> . CTE_I
    (82) f -> . CTE_F
    (83) f -> . CTE_C
    (84) f -> . llamada
    (85) f -> . idCall
    (46) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (47) llamada -> . ID LPAREN enviaParam RPAREN
    (13) idCall -> . ID
    (14) idCall -> . ID DOT ID
    (15) idCall -> . ID LBRACK exp RBRACK
    (16) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 113
    CTE_I           shift and go to state 123
    CTE_F           shift and go to state 124
    CTE_C           shift and go to state 125
    ID              shift and go to state 60

    idCall                         shift and go to state 127
    exp                            shift and go to state 129
    texp                           shift and go to state 118
    gexp                           shift and go to state 119
    mexp                           shift and go to state 120
    t                              shift and go to state 121
    f                              shift and go to state 122
    llamada                        shift and go to state 126

state 98

    (52) returnf -> RETURN LPAREN . exp RPAREN
    (65) exp -> . texp
    (66) exp -> . texp OR exp
    (67) texp -> . gexp
    (68) texp -> . gexp AND texp
    (69) gexp -> . mexp
    (70) gexp -> . mexp LT mexp
    (71) gexp -> . mexp GT mexp
    (72) gexp -> . mexp EQUALS mexp
    (73) gexp -> . mexp NEQUALS mexp
    (74) mexp -> . t
    (75) mexp -> . t PLUS mexp
    (76) mexp -> . t MINUS mexp
    (77) t -> . f
    (78) t -> . f MULT t
    (79) t -> . f DIV t
    (80) f -> . LPAREN exp RPAREN
    (81) f -> . CTE_I
    (82) f -> . CTE_F
    (83) f -> . CTE_C
    (84) f -> . llamada
    (85) f -> . idCall
    (46) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (47) llamada -> . ID LPAREN enviaParam RPAREN
    (13) idCall -> . ID
    (14) idCall -> . ID DOT ID
    (15) idCall -> . ID LBRACK exp RBRACK
    (16) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 113
    CTE_I           shift and go to state 123
    CTE_F           shift and go to state 124
    CTE_C           shift and go to state 125
    ID              shift and go to state 60

    exp                            shift and go to state 130
    texp                           shift and go to state 118
    gexp                           shift and go to state 119
    mexp                           shift and go to state 120
    t                              shift and go to state 121
    f                              shift and go to state 122
    llamada                        shift and go to state 126
    idCall                         shift and go to state 127

state 99

    (53) lectura -> READ LPAREN . listaId RPAREN
    (54) listaId -> . idCall
    (55) listaId -> . idCall COMMA listaId
    (13) idCall -> . ID
    (14) idCall -> . ID DOT ID
    (15) idCall -> . ID LBRACK exp RBRACK
    (16) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    ID              shift and go to state 104

    listaId                        shift and go to state 131
    idCall                         shift and go to state 132

state 100

    (56) escritura -> WRITE LPAREN . exp lextra RPAREN
    (57) escritura -> WRITE LPAREN . LETRERO lextra RPAREN
    (65) exp -> . texp
    (66) exp -> . texp OR exp
    (67) texp -> . gexp
    (68) texp -> . gexp AND texp
    (69) gexp -> . mexp
    (70) gexp -> . mexp LT mexp
    (71) gexp -> . mexp GT mexp
    (72) gexp -> . mexp EQUALS mexp
    (73) gexp -> . mexp NEQUALS mexp
    (74) mexp -> . t
    (75) mexp -> . t PLUS mexp
    (76) mexp -> . t MINUS mexp
    (77) t -> . f
    (78) t -> . f MULT t
    (79) t -> . f DIV t
    (80) f -> . LPAREN exp RPAREN
    (81) f -> . CTE_I
    (82) f -> . CTE_F
    (83) f -> . CTE_C
    (84) f -> . llamada
    (85) f -> . idCall
    (46) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (47) llamada -> . ID LPAREN enviaParam RPAREN
    (13) idCall -> . ID
    (14) idCall -> . ID DOT ID
    (15) idCall -> . ID LBRACK exp RBRACK
    (16) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LETRERO         shift and go to state 134
    LPAREN          shift and go to state 113
    CTE_I           shift and go to state 123
    CTE_F           shift and go to state 124
    CTE_C           shift and go to state 125
    ID              shift and go to state 60

    exp                            shift and go to state 133
    texp                           shift and go to state 118
    gexp                           shift and go to state 119
    mexp                           shift and go to state 120
    t                              shift and go to state 121
    f                              shift and go to state 122
    llamada                        shift and go to state 126
    idCall                         shift and go to state 127

state 101

    (61) condicion -> IF LPAREN . exp RPAREN THEN LBRACE listaEstatutos RBRACE
    (62) condicion -> IF LPAREN . exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE
    (65) exp -> . texp
    (66) exp -> . texp OR exp
    (67) texp -> . gexp
    (68) texp -> . gexp AND texp
    (69) gexp -> . mexp
    (70) gexp -> . mexp LT mexp
    (71) gexp -> . mexp GT mexp
    (72) gexp -> . mexp EQUALS mexp
    (73) gexp -> . mexp NEQUALS mexp
    (74) mexp -> . t
    (75) mexp -> . t PLUS mexp
    (76) mexp -> . t MINUS mexp
    (77) t -> . f
    (78) t -> . f MULT t
    (79) t -> . f DIV t
    (80) f -> . LPAREN exp RPAREN
    (81) f -> . CTE_I
    (82) f -> . CTE_F
    (83) f -> . CTE_C
    (84) f -> . llamada
    (85) f -> . idCall
    (46) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (47) llamada -> . ID LPAREN enviaParam RPAREN
    (13) idCall -> . ID
    (14) idCall -> . ID DOT ID
    (15) idCall -> . ID LBRACK exp RBRACK
    (16) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 113
    CTE_I           shift and go to state 123
    CTE_F           shift and go to state 124
    CTE_C           shift and go to state 125
    ID              shift and go to state 60

    exp                            shift and go to state 135
    texp                           shift and go to state 118
    gexp                           shift and go to state 119
    mexp                           shift and go to state 120
    t                              shift and go to state 121
    f                              shift and go to state 122
    llamada                        shift and go to state 126
    idCall                         shift and go to state 127

state 102

    (63) cond_w -> WHILE LPAREN . exp RPAREN DO LBRACE listaEstatutos RBRACE
    (65) exp -> . texp
    (66) exp -> . texp OR exp
    (67) texp -> . gexp
    (68) texp -> . gexp AND texp
    (69) gexp -> . mexp
    (70) gexp -> . mexp LT mexp
    (71) gexp -> . mexp GT mexp
    (72) gexp -> . mexp EQUALS mexp
    (73) gexp -> . mexp NEQUALS mexp
    (74) mexp -> . t
    (75) mexp -> . t PLUS mexp
    (76) mexp -> . t MINUS mexp
    (77) t -> . f
    (78) t -> . f MULT t
    (79) t -> . f DIV t
    (80) f -> . LPAREN exp RPAREN
    (81) f -> . CTE_I
    (82) f -> . CTE_F
    (83) f -> . CTE_C
    (84) f -> . llamada
    (85) f -> . idCall
    (46) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (47) llamada -> . ID LPAREN enviaParam RPAREN
    (13) idCall -> . ID
    (14) idCall -> . ID DOT ID
    (15) idCall -> . ID LBRACK exp RBRACK
    (16) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 113
    CTE_I           shift and go to state 123
    CTE_F           shift and go to state 124
    CTE_C           shift and go to state 125
    ID              shift and go to state 60

    exp                            shift and go to state 136
    texp                           shift and go to state 118
    gexp                           shift and go to state 119
    mexp                           shift and go to state 120
    t                              shift and go to state 121
    f                              shift and go to state 122
    llamada                        shift and go to state 126
    idCall                         shift and go to state 127

state 103

    (64) cond_f -> FOR idCall . ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE

    ASIGNA          shift and go to state 137


state 104

    (13) idCall -> ID .
    (14) idCall -> ID . DOT ID
    (15) idCall -> ID . LBRACK exp RBRACK
    (16) idCall -> ID . LBRACK exp RBRACK LBRACK exp RBRACK

    ASIGNA          reduce using rule 13 (idCall -> ID .)
    COMMA           reduce using rule 13 (idCall -> ID .)
    RPAREN          reduce using rule 13 (idCall -> ID .)
    DOT             shift and go to state 138
    LBRACK          shift and go to state 89


state 105

    (30) param -> ID COLON tipo .

    COMMA           reduce using rule 30 (param -> ID COLON tipo .)
    RPAREN          reduce using rule 30 (param -> ID COLON tipo .)


state 106

    (33) definFunc -> tipoMethod FUNC ID LPAREN listaParam RPAREN declarVar . LBRACE listaEstatutos RBRACE definFunc

    LBRACE          shift and go to state 139


state 107

    (28) listaParam -> param COMMA listaParam .

    RPAREN          reduce using rule 28 (listaParam -> param COMMA listaParam .)


state 108

    (12) idDeclare -> ID LBRACK CTE_I RBRACK LBRACK CTE_I RBRACK .

    COMMA           reduce using rule 12 (idDeclare -> ID LBRACK CTE_I RBRACK LBRACK CTE_I RBRACK .)
    COLON           reduce using rule 12 (idDeclare -> ID LBRACK CTE_I RBRACK LBRACK CTE_I RBRACK .)


state 109

    (2) declarClases -> CLASS ID herencia LBRACE ATTRIBUTES declarAttributes METHODS declarMethods RBRACE . declarClases
    (2) declarClases -> . CLASS ID herencia LBRACE ATTRIBUTES declarAttributes METHODS declarMethods RBRACE declarClases
    (3) declarClases -> . empty
    (86) empty -> .

    CLASS           shift and go to state 6
    VAR             reduce using rule 86 (empty -> .)
    VOID            reduce using rule 86 (empty -> .)
    INT             reduce using rule 86 (empty -> .)
    FLOAT           reduce using rule 86 (empty -> .)
    CHAR            reduce using rule 86 (empty -> .)
    MAIN            reduce using rule 86 (empty -> .)

    declarClases                   shift and go to state 140
    empty                          shift and go to state 7

state 110

    (21) declarMethods -> tipoMethod FUNC . ID LPAREN listaParam RPAREN LBRACE listaEstatutos RBRACE declarMethods

    ID              shift and go to state 141


state 111

    (6) declarAttributes -> listaIdDeclare COLON tipo SCOLON . declarAttributes
    (6) declarAttributes -> . listaIdDeclare COLON tipo SCOLON declarAttributes
    (7) declarAttributes -> . empty
    (8) listaIdDeclare -> . idDeclare
    (9) listaIdDeclare -> . idDeclare COMMA listaIdDeclare
    (86) empty -> .
    (10) idDeclare -> . ID
    (11) idDeclare -> . ID LBRACK CTE_I RBRACK
    (12) idDeclare -> . ID LBRACK CTE_I RBRACK LBRACK CTE_I RBRACK

    METHODS         reduce using rule 86 (empty -> .)
    ID              shift and go to state 21

    listaIdDeclare                 shift and go to state 48
    declarAttributes               shift and go to state 142
    empty                          shift and go to state 49
    idDeclare                      shift and go to state 20

state 112

    (46) llamada -> ID DOT ID . LPAREN enviaParam RPAREN
    (14) idCall -> ID DOT ID .

    LPAREN          shift and go to state 143
    ASIGNA          reduce using rule 14 (idCall -> ID DOT ID .)
    MULT            reduce using rule 14 (idCall -> ID DOT ID .)
    DIV             reduce using rule 14 (idCall -> ID DOT ID .)
    PLUS            reduce using rule 14 (idCall -> ID DOT ID .)
    MINUS           reduce using rule 14 (idCall -> ID DOT ID .)
    LT              reduce using rule 14 (idCall -> ID DOT ID .)
    GT              reduce using rule 14 (idCall -> ID DOT ID .)
    EQUALS          reduce using rule 14 (idCall -> ID DOT ID .)
    NEQUALS         reduce using rule 14 (idCall -> ID DOT ID .)
    AND             reduce using rule 14 (idCall -> ID DOT ID .)
    OR              reduce using rule 14 (idCall -> ID DOT ID .)
    COMMA           reduce using rule 14 (idCall -> ID DOT ID .)
    RPAREN          reduce using rule 14 (idCall -> ID DOT ID .)
    RBRACK          reduce using rule 14 (idCall -> ID DOT ID .)
    SCOLON          reduce using rule 14 (idCall -> ID DOT ID .)
    TO              reduce using rule 14 (idCall -> ID DOT ID .)
    DO              reduce using rule 14 (idCall -> ID DOT ID .)


state 113

    (80) f -> LPAREN . exp RPAREN
    (65) exp -> . texp
    (66) exp -> . texp OR exp
    (67) texp -> . gexp
    (68) texp -> . gexp AND texp
    (69) gexp -> . mexp
    (70) gexp -> . mexp LT mexp
    (71) gexp -> . mexp GT mexp
    (72) gexp -> . mexp EQUALS mexp
    (73) gexp -> . mexp NEQUALS mexp
    (74) mexp -> . t
    (75) mexp -> . t PLUS mexp
    (76) mexp -> . t MINUS mexp
    (77) t -> . f
    (78) t -> . f MULT t
    (79) t -> . f DIV t
    (80) f -> . LPAREN exp RPAREN
    (81) f -> . CTE_I
    (82) f -> . CTE_F
    (83) f -> . CTE_C
    (84) f -> . llamada
    (85) f -> . idCall
    (46) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (47) llamada -> . ID LPAREN enviaParam RPAREN
    (13) idCall -> . ID
    (14) idCall -> . ID DOT ID
    (15) idCall -> . ID LBRACK exp RBRACK
    (16) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 113
    CTE_I           shift and go to state 123
    CTE_F           shift and go to state 124
    CTE_C           shift and go to state 125
    ID              shift and go to state 60

    exp                            shift and go to state 144
    texp                           shift and go to state 118
    gexp                           shift and go to state 119
    mexp                           shift and go to state 120
    t                              shift and go to state 121
    f                              shift and go to state 122
    llamada                        shift and go to state 126
    idCall                         shift and go to state 127

state 114

    (47) llamada -> ID LPAREN enviaParam . RPAREN

    RPAREN          shift and go to state 145


state 115

    (48) enviaParam -> paramReferencia .

    RPAREN          reduce using rule 48 (enviaParam -> paramReferencia .)


state 116

    (49) enviaParam -> empty .

    RPAREN          reduce using rule 49 (enviaParam -> empty .)


state 117

    (50) paramReferencia -> exp .
    (51) paramReferencia -> exp . COMMA paramReferencia

    RPAREN          reduce using rule 50 (paramReferencia -> exp .)
    COMMA           shift and go to state 146


state 118

    (65) exp -> texp .
    (66) exp -> texp . OR exp

    COMMA           reduce using rule 65 (exp -> texp .)
    RPAREN          reduce using rule 65 (exp -> texp .)
    RBRACK          reduce using rule 65 (exp -> texp .)
    SCOLON          reduce using rule 65 (exp -> texp .)
    TO              reduce using rule 65 (exp -> texp .)
    DO              reduce using rule 65 (exp -> texp .)
    OR              shift and go to state 147


state 119

    (67) texp -> gexp .
    (68) texp -> gexp . AND texp

    OR              reduce using rule 67 (texp -> gexp .)
    COMMA           reduce using rule 67 (texp -> gexp .)
    RPAREN          reduce using rule 67 (texp -> gexp .)
    RBRACK          reduce using rule 67 (texp -> gexp .)
    SCOLON          reduce using rule 67 (texp -> gexp .)
    TO              reduce using rule 67 (texp -> gexp .)
    DO              reduce using rule 67 (texp -> gexp .)
    AND             shift and go to state 148


state 120

    (69) gexp -> mexp .
    (70) gexp -> mexp . LT mexp
    (71) gexp -> mexp . GT mexp
    (72) gexp -> mexp . EQUALS mexp
    (73) gexp -> mexp . NEQUALS mexp

    AND             reduce using rule 69 (gexp -> mexp .)
    OR              reduce using rule 69 (gexp -> mexp .)
    COMMA           reduce using rule 69 (gexp -> mexp .)
    RPAREN          reduce using rule 69 (gexp -> mexp .)
    RBRACK          reduce using rule 69 (gexp -> mexp .)
    SCOLON          reduce using rule 69 (gexp -> mexp .)
    TO              reduce using rule 69 (gexp -> mexp .)
    DO              reduce using rule 69 (gexp -> mexp .)
    LT              shift and go to state 149
    GT              shift and go to state 150
    EQUALS          shift and go to state 151
    NEQUALS         shift and go to state 152


state 121

    (74) mexp -> t .
    (75) mexp -> t . PLUS mexp
    (76) mexp -> t . MINUS mexp

    LT              reduce using rule 74 (mexp -> t .)
    GT              reduce using rule 74 (mexp -> t .)
    EQUALS          reduce using rule 74 (mexp -> t .)
    NEQUALS         reduce using rule 74 (mexp -> t .)
    AND             reduce using rule 74 (mexp -> t .)
    OR              reduce using rule 74 (mexp -> t .)
    COMMA           reduce using rule 74 (mexp -> t .)
    RPAREN          reduce using rule 74 (mexp -> t .)
    RBRACK          reduce using rule 74 (mexp -> t .)
    SCOLON          reduce using rule 74 (mexp -> t .)
    TO              reduce using rule 74 (mexp -> t .)
    DO              reduce using rule 74 (mexp -> t .)
    PLUS            shift and go to state 153
    MINUS           shift and go to state 154


state 122

    (77) t -> f .
    (78) t -> f . MULT t
    (79) t -> f . DIV t

    PLUS            reduce using rule 77 (t -> f .)
    MINUS           reduce using rule 77 (t -> f .)
    LT              reduce using rule 77 (t -> f .)
    GT              reduce using rule 77 (t -> f .)
    EQUALS          reduce using rule 77 (t -> f .)
    NEQUALS         reduce using rule 77 (t -> f .)
    AND             reduce using rule 77 (t -> f .)
    OR              reduce using rule 77 (t -> f .)
    COMMA           reduce using rule 77 (t -> f .)
    RPAREN          reduce using rule 77 (t -> f .)
    RBRACK          reduce using rule 77 (t -> f .)
    SCOLON          reduce using rule 77 (t -> f .)
    TO              reduce using rule 77 (t -> f .)
    DO              reduce using rule 77 (t -> f .)
    MULT            shift and go to state 155
    DIV             shift and go to state 156


state 123

    (81) f -> CTE_I .

    MULT            reduce using rule 81 (f -> CTE_I .)
    DIV             reduce using rule 81 (f -> CTE_I .)
    PLUS            reduce using rule 81 (f -> CTE_I .)
    MINUS           reduce using rule 81 (f -> CTE_I .)
    LT              reduce using rule 81 (f -> CTE_I .)
    GT              reduce using rule 81 (f -> CTE_I .)
    EQUALS          reduce using rule 81 (f -> CTE_I .)
    NEQUALS         reduce using rule 81 (f -> CTE_I .)
    AND             reduce using rule 81 (f -> CTE_I .)
    OR              reduce using rule 81 (f -> CTE_I .)
    COMMA           reduce using rule 81 (f -> CTE_I .)
    RPAREN          reduce using rule 81 (f -> CTE_I .)
    RBRACK          reduce using rule 81 (f -> CTE_I .)
    SCOLON          reduce using rule 81 (f -> CTE_I .)
    TO              reduce using rule 81 (f -> CTE_I .)
    DO              reduce using rule 81 (f -> CTE_I .)


state 124

    (82) f -> CTE_F .

    MULT            reduce using rule 82 (f -> CTE_F .)
    DIV             reduce using rule 82 (f -> CTE_F .)
    PLUS            reduce using rule 82 (f -> CTE_F .)
    MINUS           reduce using rule 82 (f -> CTE_F .)
    LT              reduce using rule 82 (f -> CTE_F .)
    GT              reduce using rule 82 (f -> CTE_F .)
    EQUALS          reduce using rule 82 (f -> CTE_F .)
    NEQUALS         reduce using rule 82 (f -> CTE_F .)
    AND             reduce using rule 82 (f -> CTE_F .)
    OR              reduce using rule 82 (f -> CTE_F .)
    COMMA           reduce using rule 82 (f -> CTE_F .)
    RPAREN          reduce using rule 82 (f -> CTE_F .)
    RBRACK          reduce using rule 82 (f -> CTE_F .)
    SCOLON          reduce using rule 82 (f -> CTE_F .)
    TO              reduce using rule 82 (f -> CTE_F .)
    DO              reduce using rule 82 (f -> CTE_F .)


state 125

    (83) f -> CTE_C .

    MULT            reduce using rule 83 (f -> CTE_C .)
    DIV             reduce using rule 83 (f -> CTE_C .)
    PLUS            reduce using rule 83 (f -> CTE_C .)
    MINUS           reduce using rule 83 (f -> CTE_C .)
    LT              reduce using rule 83 (f -> CTE_C .)
    GT              reduce using rule 83 (f -> CTE_C .)
    EQUALS          reduce using rule 83 (f -> CTE_C .)
    NEQUALS         reduce using rule 83 (f -> CTE_C .)
    AND             reduce using rule 83 (f -> CTE_C .)
    OR              reduce using rule 83 (f -> CTE_C .)
    COMMA           reduce using rule 83 (f -> CTE_C .)
    RPAREN          reduce using rule 83 (f -> CTE_C .)
    RBRACK          reduce using rule 83 (f -> CTE_C .)
    SCOLON          reduce using rule 83 (f -> CTE_C .)
    TO              reduce using rule 83 (f -> CTE_C .)
    DO              reduce using rule 83 (f -> CTE_C .)


state 126

    (84) f -> llamada .

    MULT            reduce using rule 84 (f -> llamada .)
    DIV             reduce using rule 84 (f -> llamada .)
    PLUS            reduce using rule 84 (f -> llamada .)
    MINUS           reduce using rule 84 (f -> llamada .)
    LT              reduce using rule 84 (f -> llamada .)
    GT              reduce using rule 84 (f -> llamada .)
    EQUALS          reduce using rule 84 (f -> llamada .)
    NEQUALS         reduce using rule 84 (f -> llamada .)
    AND             reduce using rule 84 (f -> llamada .)
    OR              reduce using rule 84 (f -> llamada .)
    COMMA           reduce using rule 84 (f -> llamada .)
    RPAREN          reduce using rule 84 (f -> llamada .)
    RBRACK          reduce using rule 84 (f -> llamada .)
    SCOLON          reduce using rule 84 (f -> llamada .)
    TO              reduce using rule 84 (f -> llamada .)
    DO              reduce using rule 84 (f -> llamada .)


state 127

    (85) f -> idCall .

    MULT            reduce using rule 85 (f -> idCall .)
    DIV             reduce using rule 85 (f -> idCall .)
    PLUS            reduce using rule 85 (f -> idCall .)
    MINUS           reduce using rule 85 (f -> idCall .)
    LT              reduce using rule 85 (f -> idCall .)
    GT              reduce using rule 85 (f -> idCall .)
    EQUALS          reduce using rule 85 (f -> idCall .)
    NEQUALS         reduce using rule 85 (f -> idCall .)
    AND             reduce using rule 85 (f -> idCall .)
    OR              reduce using rule 85 (f -> idCall .)
    COMMA           reduce using rule 85 (f -> idCall .)
    RPAREN          reduce using rule 85 (f -> idCall .)
    RBRACK          reduce using rule 85 (f -> idCall .)
    SCOLON          reduce using rule 85 (f -> idCall .)
    TO              reduce using rule 85 (f -> idCall .)
    DO              reduce using rule 85 (f -> idCall .)


state 128

    (15) idCall -> ID LBRACK exp . RBRACK
    (16) idCall -> ID LBRACK exp . RBRACK LBRACK exp RBRACK

    RBRACK          shift and go to state 157


state 129

    (45) asignacion -> idCall ASIGNA exp .

    SCOLON          reduce using rule 45 (asignacion -> idCall ASIGNA exp .)


state 130

    (52) returnf -> RETURN LPAREN exp . RPAREN

    RPAREN          shift and go to state 158


state 131

    (53) lectura -> READ LPAREN listaId . RPAREN

    RPAREN          shift and go to state 159


state 132

    (54) listaId -> idCall .
    (55) listaId -> idCall . COMMA listaId

    RPAREN          reduce using rule 54 (listaId -> idCall .)
    COMMA           shift and go to state 160


state 133

    (56) escritura -> WRITE LPAREN exp . lextra RPAREN
    (58) lextra -> . COMMA exp lextra
    (59) lextra -> . COMMA LETRERO lextra
    (60) lextra -> . empty
    (86) empty -> .

    COMMA           shift and go to state 162
    RPAREN          reduce using rule 86 (empty -> .)

    lextra                         shift and go to state 161
    empty                          shift and go to state 163

state 134

    (57) escritura -> WRITE LPAREN LETRERO . lextra RPAREN
    (58) lextra -> . COMMA exp lextra
    (59) lextra -> . COMMA LETRERO lextra
    (60) lextra -> . empty
    (86) empty -> .

    COMMA           shift and go to state 162
    RPAREN          reduce using rule 86 (empty -> .)

    lextra                         shift and go to state 164
    empty                          shift and go to state 163

state 135

    (61) condicion -> IF LPAREN exp . RPAREN THEN LBRACE listaEstatutos RBRACE
    (62) condicion -> IF LPAREN exp . RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE

    RPAREN          shift and go to state 165


state 136

    (63) cond_w -> WHILE LPAREN exp . RPAREN DO LBRACE listaEstatutos RBRACE

    RPAREN          shift and go to state 166


state 137

    (64) cond_f -> FOR idCall ASIGNA . exp TO exp DO LBRACE listaEstatutos RBRACE
    (65) exp -> . texp
    (66) exp -> . texp OR exp
    (67) texp -> . gexp
    (68) texp -> . gexp AND texp
    (69) gexp -> . mexp
    (70) gexp -> . mexp LT mexp
    (71) gexp -> . mexp GT mexp
    (72) gexp -> . mexp EQUALS mexp
    (73) gexp -> . mexp NEQUALS mexp
    (74) mexp -> . t
    (75) mexp -> . t PLUS mexp
    (76) mexp -> . t MINUS mexp
    (77) t -> . f
    (78) t -> . f MULT t
    (79) t -> . f DIV t
    (80) f -> . LPAREN exp RPAREN
    (81) f -> . CTE_I
    (82) f -> . CTE_F
    (83) f -> . CTE_C
    (84) f -> . llamada
    (85) f -> . idCall
    (46) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (47) llamada -> . ID LPAREN enviaParam RPAREN
    (13) idCall -> . ID
    (14) idCall -> . ID DOT ID
    (15) idCall -> . ID LBRACK exp RBRACK
    (16) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 113
    CTE_I           shift and go to state 123
    CTE_F           shift and go to state 124
    CTE_C           shift and go to state 125
    ID              shift and go to state 60

    idCall                         shift and go to state 127
    exp                            shift and go to state 167
    texp                           shift and go to state 118
    gexp                           shift and go to state 119
    mexp                           shift and go to state 120
    t                              shift and go to state 121
    f                              shift and go to state 122
    llamada                        shift and go to state 126

state 138

    (14) idCall -> ID DOT . ID

    ID              shift and go to state 168


state 139

    (33) definFunc -> tipoMethod FUNC ID LPAREN listaParam RPAREN declarVar LBRACE . listaEstatutos RBRACE definFunc
    (35) listaEstatutos -> . estatutos listaEstatutos
    (36) listaEstatutos -> . empty
    (37) estatutos -> . llamada SCOLON
    (38) estatutos -> . asignacion SCOLON
    (39) estatutos -> . returnf SCOLON
    (40) estatutos -> . lectura SCOLON
    (41) estatutos -> . escritura SCOLON
    (42) estatutos -> . condicion
    (43) estatutos -> . cond_w
    (44) estatutos -> . cond_f
    (86) empty -> .
    (46) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (47) llamada -> . ID LPAREN enviaParam RPAREN
    (45) asignacion -> . idCall ASIGNA exp
    (52) returnf -> . RETURN LPAREN exp RPAREN
    (53) lectura -> . READ LPAREN listaId RPAREN
    (56) escritura -> . WRITE LPAREN exp lextra RPAREN
    (57) escritura -> . WRITE LPAREN LETRERO lextra RPAREN
    (61) condicion -> . IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE
    (62) condicion -> . IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE
    (63) cond_w -> . WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE
    (64) cond_f -> . FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE
    (13) idCall -> . ID
    (14) idCall -> . ID DOT ID
    (15) idCall -> . ID LBRACK exp RBRACK
    (16) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    RBRACE          reduce using rule 86 (empty -> .)
    ID              shift and go to state 60
    RETURN          shift and go to state 73
    READ            shift and go to state 74
    WRITE           shift and go to state 75
    IF              shift and go to state 76
    WHILE           shift and go to state 77
    FOR             shift and go to state 78

    listaEstatutos                 shift and go to state 169
    estatutos                      shift and go to state 62
    empty                          shift and go to state 63
    llamada                        shift and go to state 64
    asignacion                     shift and go to state 65
    returnf                        shift and go to state 66
    lectura                        shift and go to state 67
    escritura                      shift and go to state 68
    condicion                      shift and go to state 69
    cond_w                         shift and go to state 70
    cond_f                         shift and go to state 71
    idCall                         shift and go to state 72

state 140

    (2) declarClases -> CLASS ID herencia LBRACE ATTRIBUTES declarAttributes METHODS declarMethods RBRACE declarClases .

    VAR             reduce using rule 2 (declarClases -> CLASS ID herencia LBRACE ATTRIBUTES declarAttributes METHODS declarMethods RBRACE declarClases .)
    VOID            reduce using rule 2 (declarClases -> CLASS ID herencia LBRACE ATTRIBUTES declarAttributes METHODS declarMethods RBRACE declarClases .)
    INT             reduce using rule 2 (declarClases -> CLASS ID herencia LBRACE ATTRIBUTES declarAttributes METHODS declarMethods RBRACE declarClases .)
    FLOAT           reduce using rule 2 (declarClases -> CLASS ID herencia LBRACE ATTRIBUTES declarAttributes METHODS declarMethods RBRACE declarClases .)
    CHAR            reduce using rule 2 (declarClases -> CLASS ID herencia LBRACE ATTRIBUTES declarAttributes METHODS declarMethods RBRACE declarClases .)
    MAIN            reduce using rule 2 (declarClases -> CLASS ID herencia LBRACE ATTRIBUTES declarAttributes METHODS declarMethods RBRACE declarClases .)


state 141

    (21) declarMethods -> tipoMethod FUNC ID . LPAREN listaParam RPAREN LBRACE listaEstatutos RBRACE declarMethods

    LPAREN          shift and go to state 170


state 142

    (6) declarAttributes -> listaIdDeclare COLON tipo SCOLON declarAttributes .

    METHODS         reduce using rule 6 (declarAttributes -> listaIdDeclare COLON tipo SCOLON declarAttributes .)


state 143

    (46) llamada -> ID DOT ID LPAREN . enviaParam RPAREN
    (48) enviaParam -> . paramReferencia
    (49) enviaParam -> . empty
    (50) paramReferencia -> . exp
    (51) paramReferencia -> . exp COMMA paramReferencia
    (86) empty -> .
    (65) exp -> . texp
    (66) exp -> . texp OR exp
    (67) texp -> . gexp
    (68) texp -> . gexp AND texp
    (69) gexp -> . mexp
    (70) gexp -> . mexp LT mexp
    (71) gexp -> . mexp GT mexp
    (72) gexp -> . mexp EQUALS mexp
    (73) gexp -> . mexp NEQUALS mexp
    (74) mexp -> . t
    (75) mexp -> . t PLUS mexp
    (76) mexp -> . t MINUS mexp
    (77) t -> . f
    (78) t -> . f MULT t
    (79) t -> . f DIV t
    (80) f -> . LPAREN exp RPAREN
    (81) f -> . CTE_I
    (82) f -> . CTE_F
    (83) f -> . CTE_C
    (84) f -> . llamada
    (85) f -> . idCall
    (46) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (47) llamada -> . ID LPAREN enviaParam RPAREN
    (13) idCall -> . ID
    (14) idCall -> . ID DOT ID
    (15) idCall -> . ID LBRACK exp RBRACK
    (16) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    RPAREN          reduce using rule 86 (empty -> .)
    LPAREN          shift and go to state 113
    CTE_I           shift and go to state 123
    CTE_F           shift and go to state 124
    CTE_C           shift and go to state 125
    ID              shift and go to state 60

    enviaParam                     shift and go to state 171
    paramReferencia                shift and go to state 115
    empty                          shift and go to state 116
    exp                            shift and go to state 117
    texp                           shift and go to state 118
    gexp                           shift and go to state 119
    mexp                           shift and go to state 120
    t                              shift and go to state 121
    f                              shift and go to state 122
    llamada                        shift and go to state 126
    idCall                         shift and go to state 127

state 144

    (80) f -> LPAREN exp . RPAREN

    RPAREN          shift and go to state 172


state 145

    (47) llamada -> ID LPAREN enviaParam RPAREN .

    SCOLON          reduce using rule 47 (llamada -> ID LPAREN enviaParam RPAREN .)
    MULT            reduce using rule 47 (llamada -> ID LPAREN enviaParam RPAREN .)
    DIV             reduce using rule 47 (llamada -> ID LPAREN enviaParam RPAREN .)
    PLUS            reduce using rule 47 (llamada -> ID LPAREN enviaParam RPAREN .)
    MINUS           reduce using rule 47 (llamada -> ID LPAREN enviaParam RPAREN .)
    LT              reduce using rule 47 (llamada -> ID LPAREN enviaParam RPAREN .)
    GT              reduce using rule 47 (llamada -> ID LPAREN enviaParam RPAREN .)
    EQUALS          reduce using rule 47 (llamada -> ID LPAREN enviaParam RPAREN .)
    NEQUALS         reduce using rule 47 (llamada -> ID LPAREN enviaParam RPAREN .)
    AND             reduce using rule 47 (llamada -> ID LPAREN enviaParam RPAREN .)
    OR              reduce using rule 47 (llamada -> ID LPAREN enviaParam RPAREN .)
    COMMA           reduce using rule 47 (llamada -> ID LPAREN enviaParam RPAREN .)
    RPAREN          reduce using rule 47 (llamada -> ID LPAREN enviaParam RPAREN .)
    RBRACK          reduce using rule 47 (llamada -> ID LPAREN enviaParam RPAREN .)
    TO              reduce using rule 47 (llamada -> ID LPAREN enviaParam RPAREN .)
    DO              reduce using rule 47 (llamada -> ID LPAREN enviaParam RPAREN .)


state 146

    (51) paramReferencia -> exp COMMA . paramReferencia
    (50) paramReferencia -> . exp
    (51) paramReferencia -> . exp COMMA paramReferencia
    (65) exp -> . texp
    (66) exp -> . texp OR exp
    (67) texp -> . gexp
    (68) texp -> . gexp AND texp
    (69) gexp -> . mexp
    (70) gexp -> . mexp LT mexp
    (71) gexp -> . mexp GT mexp
    (72) gexp -> . mexp EQUALS mexp
    (73) gexp -> . mexp NEQUALS mexp
    (74) mexp -> . t
    (75) mexp -> . t PLUS mexp
    (76) mexp -> . t MINUS mexp
    (77) t -> . f
    (78) t -> . f MULT t
    (79) t -> . f DIV t
    (80) f -> . LPAREN exp RPAREN
    (81) f -> . CTE_I
    (82) f -> . CTE_F
    (83) f -> . CTE_C
    (84) f -> . llamada
    (85) f -> . idCall
    (46) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (47) llamada -> . ID LPAREN enviaParam RPAREN
    (13) idCall -> . ID
    (14) idCall -> . ID DOT ID
    (15) idCall -> . ID LBRACK exp RBRACK
    (16) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 113
    CTE_I           shift and go to state 123
    CTE_F           shift and go to state 124
    CTE_C           shift and go to state 125
    ID              shift and go to state 60

    exp                            shift and go to state 117
    paramReferencia                shift and go to state 173
    texp                           shift and go to state 118
    gexp                           shift and go to state 119
    mexp                           shift and go to state 120
    t                              shift and go to state 121
    f                              shift and go to state 122
    llamada                        shift and go to state 126
    idCall                         shift and go to state 127

state 147

    (66) exp -> texp OR . exp
    (65) exp -> . texp
    (66) exp -> . texp OR exp
    (67) texp -> . gexp
    (68) texp -> . gexp AND texp
    (69) gexp -> . mexp
    (70) gexp -> . mexp LT mexp
    (71) gexp -> . mexp GT mexp
    (72) gexp -> . mexp EQUALS mexp
    (73) gexp -> . mexp NEQUALS mexp
    (74) mexp -> . t
    (75) mexp -> . t PLUS mexp
    (76) mexp -> . t MINUS mexp
    (77) t -> . f
    (78) t -> . f MULT t
    (79) t -> . f DIV t
    (80) f -> . LPAREN exp RPAREN
    (81) f -> . CTE_I
    (82) f -> . CTE_F
    (83) f -> . CTE_C
    (84) f -> . llamada
    (85) f -> . idCall
    (46) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (47) llamada -> . ID LPAREN enviaParam RPAREN
    (13) idCall -> . ID
    (14) idCall -> . ID DOT ID
    (15) idCall -> . ID LBRACK exp RBRACK
    (16) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 113
    CTE_I           shift and go to state 123
    CTE_F           shift and go to state 124
    CTE_C           shift and go to state 125
    ID              shift and go to state 60

    texp                           shift and go to state 118
    exp                            shift and go to state 174
    gexp                           shift and go to state 119
    mexp                           shift and go to state 120
    t                              shift and go to state 121
    f                              shift and go to state 122
    llamada                        shift and go to state 126
    idCall                         shift and go to state 127

state 148

    (68) texp -> gexp AND . texp
    (67) texp -> . gexp
    (68) texp -> . gexp AND texp
    (69) gexp -> . mexp
    (70) gexp -> . mexp LT mexp
    (71) gexp -> . mexp GT mexp
    (72) gexp -> . mexp EQUALS mexp
    (73) gexp -> . mexp NEQUALS mexp
    (74) mexp -> . t
    (75) mexp -> . t PLUS mexp
    (76) mexp -> . t MINUS mexp
    (77) t -> . f
    (78) t -> . f MULT t
    (79) t -> . f DIV t
    (80) f -> . LPAREN exp RPAREN
    (81) f -> . CTE_I
    (82) f -> . CTE_F
    (83) f -> . CTE_C
    (84) f -> . llamada
    (85) f -> . idCall
    (46) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (47) llamada -> . ID LPAREN enviaParam RPAREN
    (13) idCall -> . ID
    (14) idCall -> . ID DOT ID
    (15) idCall -> . ID LBRACK exp RBRACK
    (16) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 113
    CTE_I           shift and go to state 123
    CTE_F           shift and go to state 124
    CTE_C           shift and go to state 125
    ID              shift and go to state 60

    gexp                           shift and go to state 119
    texp                           shift and go to state 175
    mexp                           shift and go to state 120
    t                              shift and go to state 121
    f                              shift and go to state 122
    llamada                        shift and go to state 126
    idCall                         shift and go to state 127

state 149

    (70) gexp -> mexp LT . mexp
    (74) mexp -> . t
    (75) mexp -> . t PLUS mexp
    (76) mexp -> . t MINUS mexp
    (77) t -> . f
    (78) t -> . f MULT t
    (79) t -> . f DIV t
    (80) f -> . LPAREN exp RPAREN
    (81) f -> . CTE_I
    (82) f -> . CTE_F
    (83) f -> . CTE_C
    (84) f -> . llamada
    (85) f -> . idCall
    (46) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (47) llamada -> . ID LPAREN enviaParam RPAREN
    (13) idCall -> . ID
    (14) idCall -> . ID DOT ID
    (15) idCall -> . ID LBRACK exp RBRACK
    (16) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 113
    CTE_I           shift and go to state 123
    CTE_F           shift and go to state 124
    CTE_C           shift and go to state 125
    ID              shift and go to state 60

    mexp                           shift and go to state 176
    t                              shift and go to state 121
    f                              shift and go to state 122
    llamada                        shift and go to state 126
    idCall                         shift and go to state 127

state 150

    (71) gexp -> mexp GT . mexp
    (74) mexp -> . t
    (75) mexp -> . t PLUS mexp
    (76) mexp -> . t MINUS mexp
    (77) t -> . f
    (78) t -> . f MULT t
    (79) t -> . f DIV t
    (80) f -> . LPAREN exp RPAREN
    (81) f -> . CTE_I
    (82) f -> . CTE_F
    (83) f -> . CTE_C
    (84) f -> . llamada
    (85) f -> . idCall
    (46) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (47) llamada -> . ID LPAREN enviaParam RPAREN
    (13) idCall -> . ID
    (14) idCall -> . ID DOT ID
    (15) idCall -> . ID LBRACK exp RBRACK
    (16) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 113
    CTE_I           shift and go to state 123
    CTE_F           shift and go to state 124
    CTE_C           shift and go to state 125
    ID              shift and go to state 60

    mexp                           shift and go to state 177
    t                              shift and go to state 121
    f                              shift and go to state 122
    llamada                        shift and go to state 126
    idCall                         shift and go to state 127

state 151

    (72) gexp -> mexp EQUALS . mexp
    (74) mexp -> . t
    (75) mexp -> . t PLUS mexp
    (76) mexp -> . t MINUS mexp
    (77) t -> . f
    (78) t -> . f MULT t
    (79) t -> . f DIV t
    (80) f -> . LPAREN exp RPAREN
    (81) f -> . CTE_I
    (82) f -> . CTE_F
    (83) f -> . CTE_C
    (84) f -> . llamada
    (85) f -> . idCall
    (46) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (47) llamada -> . ID LPAREN enviaParam RPAREN
    (13) idCall -> . ID
    (14) idCall -> . ID DOT ID
    (15) idCall -> . ID LBRACK exp RBRACK
    (16) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 113
    CTE_I           shift and go to state 123
    CTE_F           shift and go to state 124
    CTE_C           shift and go to state 125
    ID              shift and go to state 60

    mexp                           shift and go to state 178
    t                              shift and go to state 121
    f                              shift and go to state 122
    llamada                        shift and go to state 126
    idCall                         shift and go to state 127

state 152

    (73) gexp -> mexp NEQUALS . mexp
    (74) mexp -> . t
    (75) mexp -> . t PLUS mexp
    (76) mexp -> . t MINUS mexp
    (77) t -> . f
    (78) t -> . f MULT t
    (79) t -> . f DIV t
    (80) f -> . LPAREN exp RPAREN
    (81) f -> . CTE_I
    (82) f -> . CTE_F
    (83) f -> . CTE_C
    (84) f -> . llamada
    (85) f -> . idCall
    (46) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (47) llamada -> . ID LPAREN enviaParam RPAREN
    (13) idCall -> . ID
    (14) idCall -> . ID DOT ID
    (15) idCall -> . ID LBRACK exp RBRACK
    (16) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 113
    CTE_I           shift and go to state 123
    CTE_F           shift and go to state 124
    CTE_C           shift and go to state 125
    ID              shift and go to state 60

    mexp                           shift and go to state 179
    t                              shift and go to state 121
    f                              shift and go to state 122
    llamada                        shift and go to state 126
    idCall                         shift and go to state 127

state 153

    (75) mexp -> t PLUS . mexp
    (74) mexp -> . t
    (75) mexp -> . t PLUS mexp
    (76) mexp -> . t MINUS mexp
    (77) t -> . f
    (78) t -> . f MULT t
    (79) t -> . f DIV t
    (80) f -> . LPAREN exp RPAREN
    (81) f -> . CTE_I
    (82) f -> . CTE_F
    (83) f -> . CTE_C
    (84) f -> . llamada
    (85) f -> . idCall
    (46) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (47) llamada -> . ID LPAREN enviaParam RPAREN
    (13) idCall -> . ID
    (14) idCall -> . ID DOT ID
    (15) idCall -> . ID LBRACK exp RBRACK
    (16) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 113
    CTE_I           shift and go to state 123
    CTE_F           shift and go to state 124
    CTE_C           shift and go to state 125
    ID              shift and go to state 60

    t                              shift and go to state 121
    mexp                           shift and go to state 180
    f                              shift and go to state 122
    llamada                        shift and go to state 126
    idCall                         shift and go to state 127

state 154

    (76) mexp -> t MINUS . mexp
    (74) mexp -> . t
    (75) mexp -> . t PLUS mexp
    (76) mexp -> . t MINUS mexp
    (77) t -> . f
    (78) t -> . f MULT t
    (79) t -> . f DIV t
    (80) f -> . LPAREN exp RPAREN
    (81) f -> . CTE_I
    (82) f -> . CTE_F
    (83) f -> . CTE_C
    (84) f -> . llamada
    (85) f -> . idCall
    (46) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (47) llamada -> . ID LPAREN enviaParam RPAREN
    (13) idCall -> . ID
    (14) idCall -> . ID DOT ID
    (15) idCall -> . ID LBRACK exp RBRACK
    (16) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 113
    CTE_I           shift and go to state 123
    CTE_F           shift and go to state 124
    CTE_C           shift and go to state 125
    ID              shift and go to state 60

    t                              shift and go to state 121
    mexp                           shift and go to state 181
    f                              shift and go to state 122
    llamada                        shift and go to state 126
    idCall                         shift and go to state 127

state 155

    (78) t -> f MULT . t
    (77) t -> . f
    (78) t -> . f MULT t
    (79) t -> . f DIV t
    (80) f -> . LPAREN exp RPAREN
    (81) f -> . CTE_I
    (82) f -> . CTE_F
    (83) f -> . CTE_C
    (84) f -> . llamada
    (85) f -> . idCall
    (46) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (47) llamada -> . ID LPAREN enviaParam RPAREN
    (13) idCall -> . ID
    (14) idCall -> . ID DOT ID
    (15) idCall -> . ID LBRACK exp RBRACK
    (16) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 113
    CTE_I           shift and go to state 123
    CTE_F           shift and go to state 124
    CTE_C           shift and go to state 125
    ID              shift and go to state 60

    f                              shift and go to state 122
    t                              shift and go to state 182
    llamada                        shift and go to state 126
    idCall                         shift and go to state 127

state 156

    (79) t -> f DIV . t
    (77) t -> . f
    (78) t -> . f MULT t
    (79) t -> . f DIV t
    (80) f -> . LPAREN exp RPAREN
    (81) f -> . CTE_I
    (82) f -> . CTE_F
    (83) f -> . CTE_C
    (84) f -> . llamada
    (85) f -> . idCall
    (46) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (47) llamada -> . ID LPAREN enviaParam RPAREN
    (13) idCall -> . ID
    (14) idCall -> . ID DOT ID
    (15) idCall -> . ID LBRACK exp RBRACK
    (16) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 113
    CTE_I           shift and go to state 123
    CTE_F           shift and go to state 124
    CTE_C           shift and go to state 125
    ID              shift and go to state 60

    f                              shift and go to state 122
    t                              shift and go to state 183
    llamada                        shift and go to state 126
    idCall                         shift and go to state 127

state 157

    (15) idCall -> ID LBRACK exp RBRACK .
    (16) idCall -> ID LBRACK exp RBRACK . LBRACK exp RBRACK

    ASIGNA          reduce using rule 15 (idCall -> ID LBRACK exp RBRACK .)
    MULT            reduce using rule 15 (idCall -> ID LBRACK exp RBRACK .)
    DIV             reduce using rule 15 (idCall -> ID LBRACK exp RBRACK .)
    PLUS            reduce using rule 15 (idCall -> ID LBRACK exp RBRACK .)
    MINUS           reduce using rule 15 (idCall -> ID LBRACK exp RBRACK .)
    LT              reduce using rule 15 (idCall -> ID LBRACK exp RBRACK .)
    GT              reduce using rule 15 (idCall -> ID LBRACK exp RBRACK .)
    EQUALS          reduce using rule 15 (idCall -> ID LBRACK exp RBRACK .)
    NEQUALS         reduce using rule 15 (idCall -> ID LBRACK exp RBRACK .)
    AND             reduce using rule 15 (idCall -> ID LBRACK exp RBRACK .)
    OR              reduce using rule 15 (idCall -> ID LBRACK exp RBRACK .)
    COMMA           reduce using rule 15 (idCall -> ID LBRACK exp RBRACK .)
    RPAREN          reduce using rule 15 (idCall -> ID LBRACK exp RBRACK .)
    RBRACK          reduce using rule 15 (idCall -> ID LBRACK exp RBRACK .)
    SCOLON          reduce using rule 15 (idCall -> ID LBRACK exp RBRACK .)
    TO              reduce using rule 15 (idCall -> ID LBRACK exp RBRACK .)
    DO              reduce using rule 15 (idCall -> ID LBRACK exp RBRACK .)
    LBRACK          shift and go to state 184


state 158

    (52) returnf -> RETURN LPAREN exp RPAREN .

    SCOLON          reduce using rule 52 (returnf -> RETURN LPAREN exp RPAREN .)


state 159

    (53) lectura -> READ LPAREN listaId RPAREN .

    SCOLON          reduce using rule 53 (lectura -> READ LPAREN listaId RPAREN .)


state 160

    (55) listaId -> idCall COMMA . listaId
    (54) listaId -> . idCall
    (55) listaId -> . idCall COMMA listaId
    (13) idCall -> . ID
    (14) idCall -> . ID DOT ID
    (15) idCall -> . ID LBRACK exp RBRACK
    (16) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    ID              shift and go to state 104

    idCall                         shift and go to state 132
    listaId                        shift and go to state 185

state 161

    (56) escritura -> WRITE LPAREN exp lextra . RPAREN

    RPAREN          shift and go to state 186


state 162

    (58) lextra -> COMMA . exp lextra
    (59) lextra -> COMMA . LETRERO lextra
    (65) exp -> . texp
    (66) exp -> . texp OR exp
    (67) texp -> . gexp
    (68) texp -> . gexp AND texp
    (69) gexp -> . mexp
    (70) gexp -> . mexp LT mexp
    (71) gexp -> . mexp GT mexp
    (72) gexp -> . mexp EQUALS mexp
    (73) gexp -> . mexp NEQUALS mexp
    (74) mexp -> . t
    (75) mexp -> . t PLUS mexp
    (76) mexp -> . t MINUS mexp
    (77) t -> . f
    (78) t -> . f MULT t
    (79) t -> . f DIV t
    (80) f -> . LPAREN exp RPAREN
    (81) f -> . CTE_I
    (82) f -> . CTE_F
    (83) f -> . CTE_C
    (84) f -> . llamada
    (85) f -> . idCall
    (46) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (47) llamada -> . ID LPAREN enviaParam RPAREN
    (13) idCall -> . ID
    (14) idCall -> . ID DOT ID
    (15) idCall -> . ID LBRACK exp RBRACK
    (16) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LETRERO         shift and go to state 188
    LPAREN          shift and go to state 113
    CTE_I           shift and go to state 123
    CTE_F           shift and go to state 124
    CTE_C           shift and go to state 125
    ID              shift and go to state 60

    exp                            shift and go to state 187
    texp                           shift and go to state 118
    gexp                           shift and go to state 119
    mexp                           shift and go to state 120
    t                              shift and go to state 121
    f                              shift and go to state 122
    llamada                        shift and go to state 126
    idCall                         shift and go to state 127

state 163

    (60) lextra -> empty .

    RPAREN          reduce using rule 60 (lextra -> empty .)


state 164

    (57) escritura -> WRITE LPAREN LETRERO lextra . RPAREN

    RPAREN          shift and go to state 189


state 165

    (61) condicion -> IF LPAREN exp RPAREN . THEN LBRACE listaEstatutos RBRACE
    (62) condicion -> IF LPAREN exp RPAREN . THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE

    THEN            shift and go to state 190


state 166

    (63) cond_w -> WHILE LPAREN exp RPAREN . DO LBRACE listaEstatutos RBRACE

    DO              shift and go to state 191


state 167

    (64) cond_f -> FOR idCall ASIGNA exp . TO exp DO LBRACE listaEstatutos RBRACE

    TO              shift and go to state 192


state 168

    (14) idCall -> ID DOT ID .

    ASIGNA          reduce using rule 14 (idCall -> ID DOT ID .)
    COMMA           reduce using rule 14 (idCall -> ID DOT ID .)
    RPAREN          reduce using rule 14 (idCall -> ID DOT ID .)


state 169

    (33) definFunc -> tipoMethod FUNC ID LPAREN listaParam RPAREN declarVar LBRACE listaEstatutos . RBRACE definFunc

    RBRACE          shift and go to state 193


state 170

    (21) declarMethods -> tipoMethod FUNC ID LPAREN . listaParam RPAREN LBRACE listaEstatutos RBRACE declarMethods
    (27) listaParam -> . param
    (28) listaParam -> . param COMMA listaParam
    (29) listaParam -> . empty
    (30) param -> . ID COLON tipo
    (86) empty -> .

    ID              shift and go to state 52
    RPAREN          reduce using rule 86 (empty -> .)

    listaParam                     shift and go to state 194
    param                          shift and go to state 54
    empty                          shift and go to state 55

state 171

    (46) llamada -> ID DOT ID LPAREN enviaParam . RPAREN

    RPAREN          shift and go to state 195


state 172

    (80) f -> LPAREN exp RPAREN .

    MULT            reduce using rule 80 (f -> LPAREN exp RPAREN .)
    DIV             reduce using rule 80 (f -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 80 (f -> LPAREN exp RPAREN .)
    MINUS           reduce using rule 80 (f -> LPAREN exp RPAREN .)
    LT              reduce using rule 80 (f -> LPAREN exp RPAREN .)
    GT              reduce using rule 80 (f -> LPAREN exp RPAREN .)
    EQUALS          reduce using rule 80 (f -> LPAREN exp RPAREN .)
    NEQUALS         reduce using rule 80 (f -> LPAREN exp RPAREN .)
    AND             reduce using rule 80 (f -> LPAREN exp RPAREN .)
    OR              reduce using rule 80 (f -> LPAREN exp RPAREN .)
    COMMA           reduce using rule 80 (f -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 80 (f -> LPAREN exp RPAREN .)
    RBRACK          reduce using rule 80 (f -> LPAREN exp RPAREN .)
    SCOLON          reduce using rule 80 (f -> LPAREN exp RPAREN .)
    TO              reduce using rule 80 (f -> LPAREN exp RPAREN .)
    DO              reduce using rule 80 (f -> LPAREN exp RPAREN .)


state 173

    (51) paramReferencia -> exp COMMA paramReferencia .

    RPAREN          reduce using rule 51 (paramReferencia -> exp COMMA paramReferencia .)


state 174

    (66) exp -> texp OR exp .

    COMMA           reduce using rule 66 (exp -> texp OR exp .)
    RPAREN          reduce using rule 66 (exp -> texp OR exp .)
    RBRACK          reduce using rule 66 (exp -> texp OR exp .)
    SCOLON          reduce using rule 66 (exp -> texp OR exp .)
    TO              reduce using rule 66 (exp -> texp OR exp .)
    DO              reduce using rule 66 (exp -> texp OR exp .)


state 175

    (68) texp -> gexp AND texp .

    OR              reduce using rule 68 (texp -> gexp AND texp .)
    COMMA           reduce using rule 68 (texp -> gexp AND texp .)
    RPAREN          reduce using rule 68 (texp -> gexp AND texp .)
    RBRACK          reduce using rule 68 (texp -> gexp AND texp .)
    SCOLON          reduce using rule 68 (texp -> gexp AND texp .)
    TO              reduce using rule 68 (texp -> gexp AND texp .)
    DO              reduce using rule 68 (texp -> gexp AND texp .)


state 176

    (70) gexp -> mexp LT mexp .

    AND             reduce using rule 70 (gexp -> mexp LT mexp .)
    OR              reduce using rule 70 (gexp -> mexp LT mexp .)
    COMMA           reduce using rule 70 (gexp -> mexp LT mexp .)
    RPAREN          reduce using rule 70 (gexp -> mexp LT mexp .)
    RBRACK          reduce using rule 70 (gexp -> mexp LT mexp .)
    SCOLON          reduce using rule 70 (gexp -> mexp LT mexp .)
    TO              reduce using rule 70 (gexp -> mexp LT mexp .)
    DO              reduce using rule 70 (gexp -> mexp LT mexp .)


state 177

    (71) gexp -> mexp GT mexp .

    AND             reduce using rule 71 (gexp -> mexp GT mexp .)
    OR              reduce using rule 71 (gexp -> mexp GT mexp .)
    COMMA           reduce using rule 71 (gexp -> mexp GT mexp .)
    RPAREN          reduce using rule 71 (gexp -> mexp GT mexp .)
    RBRACK          reduce using rule 71 (gexp -> mexp GT mexp .)
    SCOLON          reduce using rule 71 (gexp -> mexp GT mexp .)
    TO              reduce using rule 71 (gexp -> mexp GT mexp .)
    DO              reduce using rule 71 (gexp -> mexp GT mexp .)


state 178

    (72) gexp -> mexp EQUALS mexp .

    AND             reduce using rule 72 (gexp -> mexp EQUALS mexp .)
    OR              reduce using rule 72 (gexp -> mexp EQUALS mexp .)
    COMMA           reduce using rule 72 (gexp -> mexp EQUALS mexp .)
    RPAREN          reduce using rule 72 (gexp -> mexp EQUALS mexp .)
    RBRACK          reduce using rule 72 (gexp -> mexp EQUALS mexp .)
    SCOLON          reduce using rule 72 (gexp -> mexp EQUALS mexp .)
    TO              reduce using rule 72 (gexp -> mexp EQUALS mexp .)
    DO              reduce using rule 72 (gexp -> mexp EQUALS mexp .)


state 179

    (73) gexp -> mexp NEQUALS mexp .

    AND             reduce using rule 73 (gexp -> mexp NEQUALS mexp .)
    OR              reduce using rule 73 (gexp -> mexp NEQUALS mexp .)
    COMMA           reduce using rule 73 (gexp -> mexp NEQUALS mexp .)
    RPAREN          reduce using rule 73 (gexp -> mexp NEQUALS mexp .)
    RBRACK          reduce using rule 73 (gexp -> mexp NEQUALS mexp .)
    SCOLON          reduce using rule 73 (gexp -> mexp NEQUALS mexp .)
    TO              reduce using rule 73 (gexp -> mexp NEQUALS mexp .)
    DO              reduce using rule 73 (gexp -> mexp NEQUALS mexp .)


state 180

    (75) mexp -> t PLUS mexp .

    LT              reduce using rule 75 (mexp -> t PLUS mexp .)
    GT              reduce using rule 75 (mexp -> t PLUS mexp .)
    EQUALS          reduce using rule 75 (mexp -> t PLUS mexp .)
    NEQUALS         reduce using rule 75 (mexp -> t PLUS mexp .)
    AND             reduce using rule 75 (mexp -> t PLUS mexp .)
    OR              reduce using rule 75 (mexp -> t PLUS mexp .)
    COMMA           reduce using rule 75 (mexp -> t PLUS mexp .)
    RPAREN          reduce using rule 75 (mexp -> t PLUS mexp .)
    RBRACK          reduce using rule 75 (mexp -> t PLUS mexp .)
    SCOLON          reduce using rule 75 (mexp -> t PLUS mexp .)
    TO              reduce using rule 75 (mexp -> t PLUS mexp .)
    DO              reduce using rule 75 (mexp -> t PLUS mexp .)


state 181

    (76) mexp -> t MINUS mexp .

    LT              reduce using rule 76 (mexp -> t MINUS mexp .)
    GT              reduce using rule 76 (mexp -> t MINUS mexp .)
    EQUALS          reduce using rule 76 (mexp -> t MINUS mexp .)
    NEQUALS         reduce using rule 76 (mexp -> t MINUS mexp .)
    AND             reduce using rule 76 (mexp -> t MINUS mexp .)
    OR              reduce using rule 76 (mexp -> t MINUS mexp .)
    COMMA           reduce using rule 76 (mexp -> t MINUS mexp .)
    RPAREN          reduce using rule 76 (mexp -> t MINUS mexp .)
    RBRACK          reduce using rule 76 (mexp -> t MINUS mexp .)
    SCOLON          reduce using rule 76 (mexp -> t MINUS mexp .)
    TO              reduce using rule 76 (mexp -> t MINUS mexp .)
    DO              reduce using rule 76 (mexp -> t MINUS mexp .)


state 182

    (78) t -> f MULT t .

    PLUS            reduce using rule 78 (t -> f MULT t .)
    MINUS           reduce using rule 78 (t -> f MULT t .)
    LT              reduce using rule 78 (t -> f MULT t .)
    GT              reduce using rule 78 (t -> f MULT t .)
    EQUALS          reduce using rule 78 (t -> f MULT t .)
    NEQUALS         reduce using rule 78 (t -> f MULT t .)
    AND             reduce using rule 78 (t -> f MULT t .)
    OR              reduce using rule 78 (t -> f MULT t .)
    COMMA           reduce using rule 78 (t -> f MULT t .)
    RPAREN          reduce using rule 78 (t -> f MULT t .)
    RBRACK          reduce using rule 78 (t -> f MULT t .)
    SCOLON          reduce using rule 78 (t -> f MULT t .)
    TO              reduce using rule 78 (t -> f MULT t .)
    DO              reduce using rule 78 (t -> f MULT t .)


state 183

    (79) t -> f DIV t .

    PLUS            reduce using rule 79 (t -> f DIV t .)
    MINUS           reduce using rule 79 (t -> f DIV t .)
    LT              reduce using rule 79 (t -> f DIV t .)
    GT              reduce using rule 79 (t -> f DIV t .)
    EQUALS          reduce using rule 79 (t -> f DIV t .)
    NEQUALS         reduce using rule 79 (t -> f DIV t .)
    AND             reduce using rule 79 (t -> f DIV t .)
    OR              reduce using rule 79 (t -> f DIV t .)
    COMMA           reduce using rule 79 (t -> f DIV t .)
    RPAREN          reduce using rule 79 (t -> f DIV t .)
    RBRACK          reduce using rule 79 (t -> f DIV t .)
    SCOLON          reduce using rule 79 (t -> f DIV t .)
    TO              reduce using rule 79 (t -> f DIV t .)
    DO              reduce using rule 79 (t -> f DIV t .)


state 184

    (16) idCall -> ID LBRACK exp RBRACK LBRACK . exp RBRACK
    (65) exp -> . texp
    (66) exp -> . texp OR exp
    (67) texp -> . gexp
    (68) texp -> . gexp AND texp
    (69) gexp -> . mexp
    (70) gexp -> . mexp LT mexp
    (71) gexp -> . mexp GT mexp
    (72) gexp -> . mexp EQUALS mexp
    (73) gexp -> . mexp NEQUALS mexp
    (74) mexp -> . t
    (75) mexp -> . t PLUS mexp
    (76) mexp -> . t MINUS mexp
    (77) t -> . f
    (78) t -> . f MULT t
    (79) t -> . f DIV t
    (80) f -> . LPAREN exp RPAREN
    (81) f -> . CTE_I
    (82) f -> . CTE_F
    (83) f -> . CTE_C
    (84) f -> . llamada
    (85) f -> . idCall
    (46) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (47) llamada -> . ID LPAREN enviaParam RPAREN
    (13) idCall -> . ID
    (14) idCall -> . ID DOT ID
    (15) idCall -> . ID LBRACK exp RBRACK
    (16) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 113
    CTE_I           shift and go to state 123
    CTE_F           shift and go to state 124
    CTE_C           shift and go to state 125
    ID              shift and go to state 60

    exp                            shift and go to state 196
    texp                           shift and go to state 118
    gexp                           shift and go to state 119
    mexp                           shift and go to state 120
    t                              shift and go to state 121
    f                              shift and go to state 122
    llamada                        shift and go to state 126
    idCall                         shift and go to state 127

state 185

    (55) listaId -> idCall COMMA listaId .

    RPAREN          reduce using rule 55 (listaId -> idCall COMMA listaId .)


state 186

    (56) escritura -> WRITE LPAREN exp lextra RPAREN .

    SCOLON          reduce using rule 56 (escritura -> WRITE LPAREN exp lextra RPAREN .)


state 187

    (58) lextra -> COMMA exp . lextra
    (58) lextra -> . COMMA exp lextra
    (59) lextra -> . COMMA LETRERO lextra
    (60) lextra -> . empty
    (86) empty -> .

    COMMA           shift and go to state 162
    RPAREN          reduce using rule 86 (empty -> .)

    lextra                         shift and go to state 197
    empty                          shift and go to state 163

state 188

    (59) lextra -> COMMA LETRERO . lextra
    (58) lextra -> . COMMA exp lextra
    (59) lextra -> . COMMA LETRERO lextra
    (60) lextra -> . empty
    (86) empty -> .

    COMMA           shift and go to state 162
    RPAREN          reduce using rule 86 (empty -> .)

    lextra                         shift and go to state 198
    empty                          shift and go to state 163

state 189

    (57) escritura -> WRITE LPAREN LETRERO lextra RPAREN .

    SCOLON          reduce using rule 57 (escritura -> WRITE LPAREN LETRERO lextra RPAREN .)


state 190

    (61) condicion -> IF LPAREN exp RPAREN THEN . LBRACE listaEstatutos RBRACE
    (62) condicion -> IF LPAREN exp RPAREN THEN . LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE

    LBRACE          shift and go to state 199


state 191

    (63) cond_w -> WHILE LPAREN exp RPAREN DO . LBRACE listaEstatutos RBRACE

    LBRACE          shift and go to state 200


state 192

    (64) cond_f -> FOR idCall ASIGNA exp TO . exp DO LBRACE listaEstatutos RBRACE
    (65) exp -> . texp
    (66) exp -> . texp OR exp
    (67) texp -> . gexp
    (68) texp -> . gexp AND texp
    (69) gexp -> . mexp
    (70) gexp -> . mexp LT mexp
    (71) gexp -> . mexp GT mexp
    (72) gexp -> . mexp EQUALS mexp
    (73) gexp -> . mexp NEQUALS mexp
    (74) mexp -> . t
    (75) mexp -> . t PLUS mexp
    (76) mexp -> . t MINUS mexp
    (77) t -> . f
    (78) t -> . f MULT t
    (79) t -> . f DIV t
    (80) f -> . LPAREN exp RPAREN
    (81) f -> . CTE_I
    (82) f -> . CTE_F
    (83) f -> . CTE_C
    (84) f -> . llamada
    (85) f -> . idCall
    (46) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (47) llamada -> . ID LPAREN enviaParam RPAREN
    (13) idCall -> . ID
    (14) idCall -> . ID DOT ID
    (15) idCall -> . ID LBRACK exp RBRACK
    (16) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    LPAREN          shift and go to state 113
    CTE_I           shift and go to state 123
    CTE_F           shift and go to state 124
    CTE_C           shift and go to state 125
    ID              shift and go to state 60

    idCall                         shift and go to state 127
    exp                            shift and go to state 201
    texp                           shift and go to state 118
    gexp                           shift and go to state 119
    mexp                           shift and go to state 120
    t                              shift and go to state 121
    f                              shift and go to state 122
    llamada                        shift and go to state 126

state 193

    (33) definFunc -> tipoMethod FUNC ID LPAREN listaParam RPAREN declarVar LBRACE listaEstatutos RBRACE . definFunc
    (33) definFunc -> . tipoMethod FUNC ID LPAREN listaParam RPAREN declarVar LBRACE listaEstatutos RBRACE definFunc
    (34) definFunc -> . empty
    (23) tipoMethod -> . VOID
    (24) tipoMethod -> . INT
    (25) tipoMethod -> . FLOAT
    (26) tipoMethod -> . CHAR
    (86) empty -> .

    VOID            shift and go to state 15
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    MAIN            reduce using rule 86 (empty -> .)

    tipoMethod                     shift and go to state 13
    definFunc                      shift and go to state 202
    empty                          shift and go to state 14

state 194

    (21) declarMethods -> tipoMethod FUNC ID LPAREN listaParam . RPAREN LBRACE listaEstatutos RBRACE declarMethods

    RPAREN          shift and go to state 203


state 195

    (46) llamada -> ID DOT ID LPAREN enviaParam RPAREN .

    SCOLON          reduce using rule 46 (llamada -> ID DOT ID LPAREN enviaParam RPAREN .)
    MULT            reduce using rule 46 (llamada -> ID DOT ID LPAREN enviaParam RPAREN .)
    DIV             reduce using rule 46 (llamada -> ID DOT ID LPAREN enviaParam RPAREN .)
    PLUS            reduce using rule 46 (llamada -> ID DOT ID LPAREN enviaParam RPAREN .)
    MINUS           reduce using rule 46 (llamada -> ID DOT ID LPAREN enviaParam RPAREN .)
    LT              reduce using rule 46 (llamada -> ID DOT ID LPAREN enviaParam RPAREN .)
    GT              reduce using rule 46 (llamada -> ID DOT ID LPAREN enviaParam RPAREN .)
    EQUALS          reduce using rule 46 (llamada -> ID DOT ID LPAREN enviaParam RPAREN .)
    NEQUALS         reduce using rule 46 (llamada -> ID DOT ID LPAREN enviaParam RPAREN .)
    AND             reduce using rule 46 (llamada -> ID DOT ID LPAREN enviaParam RPAREN .)
    OR              reduce using rule 46 (llamada -> ID DOT ID LPAREN enviaParam RPAREN .)
    COMMA           reduce using rule 46 (llamada -> ID DOT ID LPAREN enviaParam RPAREN .)
    RPAREN          reduce using rule 46 (llamada -> ID DOT ID LPAREN enviaParam RPAREN .)
    RBRACK          reduce using rule 46 (llamada -> ID DOT ID LPAREN enviaParam RPAREN .)
    TO              reduce using rule 46 (llamada -> ID DOT ID LPAREN enviaParam RPAREN .)
    DO              reduce using rule 46 (llamada -> ID DOT ID LPAREN enviaParam RPAREN .)


state 196

    (16) idCall -> ID LBRACK exp RBRACK LBRACK exp . RBRACK

    RBRACK          shift and go to state 204


state 197

    (58) lextra -> COMMA exp lextra .

    RPAREN          reduce using rule 58 (lextra -> COMMA exp lextra .)


state 198

    (59) lextra -> COMMA LETRERO lextra .

    RPAREN          reduce using rule 59 (lextra -> COMMA LETRERO lextra .)


state 199

    (61) condicion -> IF LPAREN exp RPAREN THEN LBRACE . listaEstatutos RBRACE
    (62) condicion -> IF LPAREN exp RPAREN THEN LBRACE . listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE
    (35) listaEstatutos -> . estatutos listaEstatutos
    (36) listaEstatutos -> . empty
    (37) estatutos -> . llamada SCOLON
    (38) estatutos -> . asignacion SCOLON
    (39) estatutos -> . returnf SCOLON
    (40) estatutos -> . lectura SCOLON
    (41) estatutos -> . escritura SCOLON
    (42) estatutos -> . condicion
    (43) estatutos -> . cond_w
    (44) estatutos -> . cond_f
    (86) empty -> .
    (46) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (47) llamada -> . ID LPAREN enviaParam RPAREN
    (45) asignacion -> . idCall ASIGNA exp
    (52) returnf -> . RETURN LPAREN exp RPAREN
    (53) lectura -> . READ LPAREN listaId RPAREN
    (56) escritura -> . WRITE LPAREN exp lextra RPAREN
    (57) escritura -> . WRITE LPAREN LETRERO lextra RPAREN
    (61) condicion -> . IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE
    (62) condicion -> . IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE
    (63) cond_w -> . WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE
    (64) cond_f -> . FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE
    (13) idCall -> . ID
    (14) idCall -> . ID DOT ID
    (15) idCall -> . ID LBRACK exp RBRACK
    (16) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    RBRACE          reduce using rule 86 (empty -> .)
    ID              shift and go to state 60
    RETURN          shift and go to state 73
    READ            shift and go to state 74
    WRITE           shift and go to state 75
    IF              shift and go to state 76
    WHILE           shift and go to state 77
    FOR             shift and go to state 78

    listaEstatutos                 shift and go to state 205
    estatutos                      shift and go to state 62
    empty                          shift and go to state 63
    llamada                        shift and go to state 64
    asignacion                     shift and go to state 65
    returnf                        shift and go to state 66
    lectura                        shift and go to state 67
    escritura                      shift and go to state 68
    condicion                      shift and go to state 69
    cond_w                         shift and go to state 70
    cond_f                         shift and go to state 71
    idCall                         shift and go to state 72

state 200

    (63) cond_w -> WHILE LPAREN exp RPAREN DO LBRACE . listaEstatutos RBRACE
    (35) listaEstatutos -> . estatutos listaEstatutos
    (36) listaEstatutos -> . empty
    (37) estatutos -> . llamada SCOLON
    (38) estatutos -> . asignacion SCOLON
    (39) estatutos -> . returnf SCOLON
    (40) estatutos -> . lectura SCOLON
    (41) estatutos -> . escritura SCOLON
    (42) estatutos -> . condicion
    (43) estatutos -> . cond_w
    (44) estatutos -> . cond_f
    (86) empty -> .
    (46) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (47) llamada -> . ID LPAREN enviaParam RPAREN
    (45) asignacion -> . idCall ASIGNA exp
    (52) returnf -> . RETURN LPAREN exp RPAREN
    (53) lectura -> . READ LPAREN listaId RPAREN
    (56) escritura -> . WRITE LPAREN exp lextra RPAREN
    (57) escritura -> . WRITE LPAREN LETRERO lextra RPAREN
    (61) condicion -> . IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE
    (62) condicion -> . IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE
    (63) cond_w -> . WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE
    (64) cond_f -> . FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE
    (13) idCall -> . ID
    (14) idCall -> . ID DOT ID
    (15) idCall -> . ID LBRACK exp RBRACK
    (16) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    RBRACE          reduce using rule 86 (empty -> .)
    ID              shift and go to state 60
    RETURN          shift and go to state 73
    READ            shift and go to state 74
    WRITE           shift and go to state 75
    IF              shift and go to state 76
    WHILE           shift and go to state 77
    FOR             shift and go to state 78

    listaEstatutos                 shift and go to state 206
    estatutos                      shift and go to state 62
    empty                          shift and go to state 63
    llamada                        shift and go to state 64
    asignacion                     shift and go to state 65
    returnf                        shift and go to state 66
    lectura                        shift and go to state 67
    escritura                      shift and go to state 68
    condicion                      shift and go to state 69
    cond_w                         shift and go to state 70
    cond_f                         shift and go to state 71
    idCall                         shift and go to state 72

state 201

    (64) cond_f -> FOR idCall ASIGNA exp TO exp . DO LBRACE listaEstatutos RBRACE

    DO              shift and go to state 207


state 202

    (33) definFunc -> tipoMethod FUNC ID LPAREN listaParam RPAREN declarVar LBRACE listaEstatutos RBRACE definFunc .

    MAIN            reduce using rule 33 (definFunc -> tipoMethod FUNC ID LPAREN listaParam RPAREN declarVar LBRACE listaEstatutos RBRACE definFunc .)


state 203

    (21) declarMethods -> tipoMethod FUNC ID LPAREN listaParam RPAREN . LBRACE listaEstatutos RBRACE declarMethods

    LBRACE          shift and go to state 208


state 204

    (16) idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .

    ASIGNA          reduce using rule 16 (idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .)
    MULT            reduce using rule 16 (idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .)
    DIV             reduce using rule 16 (idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .)
    PLUS            reduce using rule 16 (idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .)
    MINUS           reduce using rule 16 (idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .)
    LT              reduce using rule 16 (idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .)
    GT              reduce using rule 16 (idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .)
    EQUALS          reduce using rule 16 (idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .)
    NEQUALS         reduce using rule 16 (idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .)
    AND             reduce using rule 16 (idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .)
    OR              reduce using rule 16 (idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .)
    COMMA           reduce using rule 16 (idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .)
    RPAREN          reduce using rule 16 (idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .)
    RBRACK          reduce using rule 16 (idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .)
    SCOLON          reduce using rule 16 (idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .)
    TO              reduce using rule 16 (idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .)
    DO              reduce using rule 16 (idCall -> ID LBRACK exp RBRACK LBRACK exp RBRACK .)


state 205

    (61) condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos . RBRACE
    (62) condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos . RBRACE ELSE LBRACE listaEstatutos RBRACE

    RBRACE          shift and go to state 209


state 206

    (63) cond_w -> WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos . RBRACE

    RBRACE          shift and go to state 210


state 207

    (64) cond_f -> FOR idCall ASIGNA exp TO exp DO . LBRACE listaEstatutos RBRACE

    LBRACE          shift and go to state 211


state 208

    (21) declarMethods -> tipoMethod FUNC ID LPAREN listaParam RPAREN LBRACE . listaEstatutos RBRACE declarMethods
    (35) listaEstatutos -> . estatutos listaEstatutos
    (36) listaEstatutos -> . empty
    (37) estatutos -> . llamada SCOLON
    (38) estatutos -> . asignacion SCOLON
    (39) estatutos -> . returnf SCOLON
    (40) estatutos -> . lectura SCOLON
    (41) estatutos -> . escritura SCOLON
    (42) estatutos -> . condicion
    (43) estatutos -> . cond_w
    (44) estatutos -> . cond_f
    (86) empty -> .
    (46) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (47) llamada -> . ID LPAREN enviaParam RPAREN
    (45) asignacion -> . idCall ASIGNA exp
    (52) returnf -> . RETURN LPAREN exp RPAREN
    (53) lectura -> . READ LPAREN listaId RPAREN
    (56) escritura -> . WRITE LPAREN exp lextra RPAREN
    (57) escritura -> . WRITE LPAREN LETRERO lextra RPAREN
    (61) condicion -> . IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE
    (62) condicion -> . IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE
    (63) cond_w -> . WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE
    (64) cond_f -> . FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE
    (13) idCall -> . ID
    (14) idCall -> . ID DOT ID
    (15) idCall -> . ID LBRACK exp RBRACK
    (16) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    RBRACE          reduce using rule 86 (empty -> .)
    ID              shift and go to state 60
    RETURN          shift and go to state 73
    READ            shift and go to state 74
    WRITE           shift and go to state 75
    IF              shift and go to state 76
    WHILE           shift and go to state 77
    FOR             shift and go to state 78

    listaEstatutos                 shift and go to state 212
    estatutos                      shift and go to state 62
    empty                          shift and go to state 63
    llamada                        shift and go to state 64
    asignacion                     shift and go to state 65
    returnf                        shift and go to state 66
    lectura                        shift and go to state 67
    escritura                      shift and go to state 68
    condicion                      shift and go to state 69
    cond_w                         shift and go to state 70
    cond_f                         shift and go to state 71
    idCall                         shift and go to state 72

state 209

    (61) condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE .
    (62) condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE . ELSE LBRACE listaEstatutos RBRACE

    ID              reduce using rule 61 (condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE .)
    RETURN          reduce using rule 61 (condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE .)
    READ            reduce using rule 61 (condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE .)
    WRITE           reduce using rule 61 (condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE .)
    IF              reduce using rule 61 (condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE .)
    WHILE           reduce using rule 61 (condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE .)
    FOR             reduce using rule 61 (condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE .)
    RBRACE          reduce using rule 61 (condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE .)
    ELSE            shift and go to state 213


state 210

    (63) cond_w -> WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE .

    ID              reduce using rule 63 (cond_w -> WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE .)
    RETURN          reduce using rule 63 (cond_w -> WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE .)
    READ            reduce using rule 63 (cond_w -> WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE .)
    WRITE           reduce using rule 63 (cond_w -> WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE .)
    IF              reduce using rule 63 (cond_w -> WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE .)
    WHILE           reduce using rule 63 (cond_w -> WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE .)
    FOR             reduce using rule 63 (cond_w -> WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE .)
    RBRACE          reduce using rule 63 (cond_w -> WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE .)


state 211

    (64) cond_f -> FOR idCall ASIGNA exp TO exp DO LBRACE . listaEstatutos RBRACE
    (35) listaEstatutos -> . estatutos listaEstatutos
    (36) listaEstatutos -> . empty
    (37) estatutos -> . llamada SCOLON
    (38) estatutos -> . asignacion SCOLON
    (39) estatutos -> . returnf SCOLON
    (40) estatutos -> . lectura SCOLON
    (41) estatutos -> . escritura SCOLON
    (42) estatutos -> . condicion
    (43) estatutos -> . cond_w
    (44) estatutos -> . cond_f
    (86) empty -> .
    (46) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (47) llamada -> . ID LPAREN enviaParam RPAREN
    (45) asignacion -> . idCall ASIGNA exp
    (52) returnf -> . RETURN LPAREN exp RPAREN
    (53) lectura -> . READ LPAREN listaId RPAREN
    (56) escritura -> . WRITE LPAREN exp lextra RPAREN
    (57) escritura -> . WRITE LPAREN LETRERO lextra RPAREN
    (61) condicion -> . IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE
    (62) condicion -> . IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE
    (63) cond_w -> . WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE
    (64) cond_f -> . FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE
    (13) idCall -> . ID
    (14) idCall -> . ID DOT ID
    (15) idCall -> . ID LBRACK exp RBRACK
    (16) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    RBRACE          reduce using rule 86 (empty -> .)
    ID              shift and go to state 60
    RETURN          shift and go to state 73
    READ            shift and go to state 74
    WRITE           shift and go to state 75
    IF              shift and go to state 76
    WHILE           shift and go to state 77
    FOR             shift and go to state 78

    idCall                         shift and go to state 72
    listaEstatutos                 shift and go to state 214
    estatutos                      shift and go to state 62
    empty                          shift and go to state 63
    llamada                        shift and go to state 64
    asignacion                     shift and go to state 65
    returnf                        shift and go to state 66
    lectura                        shift and go to state 67
    escritura                      shift and go to state 68
    condicion                      shift and go to state 69
    cond_w                         shift and go to state 70
    cond_f                         shift and go to state 71

state 212

    (21) declarMethods -> tipoMethod FUNC ID LPAREN listaParam RPAREN LBRACE listaEstatutos . RBRACE declarMethods

    RBRACE          shift and go to state 215


state 213

    (62) condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE . LBRACE listaEstatutos RBRACE

    LBRACE          shift and go to state 216


state 214

    (64) cond_f -> FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos . RBRACE

    RBRACE          shift and go to state 217


state 215

    (21) declarMethods -> tipoMethod FUNC ID LPAREN listaParam RPAREN LBRACE listaEstatutos RBRACE . declarMethods
    (21) declarMethods -> . tipoMethod FUNC ID LPAREN listaParam RPAREN LBRACE listaEstatutos RBRACE declarMethods
    (22) declarMethods -> . empty
    (23) tipoMethod -> . VOID
    (24) tipoMethod -> . INT
    (25) tipoMethod -> . FLOAT
    (26) tipoMethod -> . CHAR
    (86) empty -> .

    VOID            shift and go to state 15
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    RBRACE          reduce using rule 86 (empty -> .)

    tipoMethod                     shift and go to state 84
    declarMethods                  shift and go to state 218
    empty                          shift and go to state 85

state 216

    (62) condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE . listaEstatutos RBRACE
    (35) listaEstatutos -> . estatutos listaEstatutos
    (36) listaEstatutos -> . empty
    (37) estatutos -> . llamada SCOLON
    (38) estatutos -> . asignacion SCOLON
    (39) estatutos -> . returnf SCOLON
    (40) estatutos -> . lectura SCOLON
    (41) estatutos -> . escritura SCOLON
    (42) estatutos -> . condicion
    (43) estatutos -> . cond_w
    (44) estatutos -> . cond_f
    (86) empty -> .
    (46) llamada -> . ID DOT ID LPAREN enviaParam RPAREN
    (47) llamada -> . ID LPAREN enviaParam RPAREN
    (45) asignacion -> . idCall ASIGNA exp
    (52) returnf -> . RETURN LPAREN exp RPAREN
    (53) lectura -> . READ LPAREN listaId RPAREN
    (56) escritura -> . WRITE LPAREN exp lextra RPAREN
    (57) escritura -> . WRITE LPAREN LETRERO lextra RPAREN
    (61) condicion -> . IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE
    (62) condicion -> . IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE
    (63) cond_w -> . WHILE LPAREN exp RPAREN DO LBRACE listaEstatutos RBRACE
    (64) cond_f -> . FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE
    (13) idCall -> . ID
    (14) idCall -> . ID DOT ID
    (15) idCall -> . ID LBRACK exp RBRACK
    (16) idCall -> . ID LBRACK exp RBRACK LBRACK exp RBRACK

    RBRACE          reduce using rule 86 (empty -> .)
    ID              shift and go to state 60
    RETURN          shift and go to state 73
    READ            shift and go to state 74
    WRITE           shift and go to state 75
    IF              shift and go to state 76
    WHILE           shift and go to state 77
    FOR             shift and go to state 78

    listaEstatutos                 shift and go to state 219
    estatutos                      shift and go to state 62
    empty                          shift and go to state 63
    llamada                        shift and go to state 64
    asignacion                     shift and go to state 65
    returnf                        shift and go to state 66
    lectura                        shift and go to state 67
    escritura                      shift and go to state 68
    condicion                      shift and go to state 69
    cond_w                         shift and go to state 70
    cond_f                         shift and go to state 71
    idCall                         shift and go to state 72

state 217

    (64) cond_f -> FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE .

    ID              reduce using rule 64 (cond_f -> FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE .)
    RETURN          reduce using rule 64 (cond_f -> FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE .)
    READ            reduce using rule 64 (cond_f -> FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE .)
    WRITE           reduce using rule 64 (cond_f -> FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE .)
    IF              reduce using rule 64 (cond_f -> FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE .)
    WHILE           reduce using rule 64 (cond_f -> FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE .)
    FOR             reduce using rule 64 (cond_f -> FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE .)
    RBRACE          reduce using rule 64 (cond_f -> FOR idCall ASIGNA exp TO exp DO LBRACE listaEstatutos RBRACE .)


state 218

    (21) declarMethods -> tipoMethod FUNC ID LPAREN listaParam RPAREN LBRACE listaEstatutos RBRACE declarMethods .

    RBRACE          reduce using rule 21 (declarMethods -> tipoMethod FUNC ID LPAREN listaParam RPAREN LBRACE listaEstatutos RBRACE declarMethods .)


state 219

    (62) condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos . RBRACE

    RBRACE          shift and go to state 220


state 220

    (62) condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE .

    ID              reduce using rule 62 (condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE .)
    RETURN          reduce using rule 62 (condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE .)
    READ            reduce using rule 62 (condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE .)
    WRITE           reduce using rule 62 (condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE .)
    IF              reduce using rule 62 (condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE .)
    WHILE           reduce using rule 62 (condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE .)
    FOR             reduce using rule 62 (condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE .)
    RBRACE          reduce using rule 62 (condicion -> IF LPAREN exp RPAREN THEN LBRACE listaEstatutos RBRACE ELSE LBRACE listaEstatutos RBRACE .)

